{"version":3,"sources":["component/SideBar.js","tools/constants.js","redux/actionTypes/authType.js","redux/actionTypes/createAgentType.js","redux/action/TicketsAction.js","locales/RU.js","locales/EN.js","locales/index.js","redux/action/createAgentAction.js","component/AccountNavbar.js","redux/action/CreateTeamAction.js","pages/agents/AgentsTable.js","pages/agents/AgentInTeam.js","pages/agents/AgentsTeamTable.js","pages/agents/AgentsDetails.js","component/SubNavbarMenu.js","pages/Agents.js","pages/agents/CreateTeamPair.js","pages/agents/CreateAgentPair.js","redux/action/authAction.js","component/Login.js","pages/Report/PieChart.js","pages/Report/RadialBars.js","redux/reducer/createTeamReducer.js","pages/Report/Permission.js","pages/Report/Priority.js","pages/Report/ExportToExcel.js","pages/Report/Test.js","pages/Report.js","component/InfoAccount.js","pages/tickets/NewTicket.js","component/Verified.js","component/NotFound.js","component/PrivateRoute.js","component/SideBarMenus.js","component/MainTableForTickets.js","pages/tickets/AllTickets.js","component/VerifiedChangePassword.js","pages/tickets/TicketInfoRightPair.js","pages/tickets/Commit.js","component/TicketsHandleTable.js","pages/tickets/TicketsToHandle.js","component/OpenTicketsTable.js","pages/tickets/TicketOpen.js","component/LastDaysTabel.js","pages/tickets/TicketLastDays.js","component/ForgotPassword.js","component/InfoAccountEdit.js","pages/tickets/PendingFilter.js","pages/tickets/OpenFilter.js","pages/tickets/ClosedFilter.js","pages/tickets/ByFilter.js","pages/tickets/NewTicketUpdate.js","App.js","redux/reducer/authReducer.js","redux/reducer/createAgentReducer.js","redux/reducer/TicketsReducer.js","redux/reducer/rootReducer.js","reportWebVitals.js","index.js"],"names":["SideBar","className","to","activeClassName","src","alt","API_PATH","TOKEN_NAME","SITE_LANG","LOGIN","UPDATE_STATE","updateState","data","type","payload","getAllTicket","Number","pageIndex","dispatch","axios","get","headers","Authorization","localStorage","getItem","then","res","getTickets","getTickets2","changeGetTickets2","getTicketsSearch","AllCount","catch","err","getAllTicketForId","getState","console","log","getAllTicketToHandle","getTicketsToHandle","btc","getMyOpenTicket","getOpenTickets","boc","getTicketsSevenDays","end_date","start_date","getLastDaysTickets","bot","getStatusList","ticketStatusList","ticketInfo","ticketId","ticketInfoObject","changeTicketStatus","values","patch","ticket_status","OpenStatusCount","ClosedStatusCount","PendingStatusCount","toast","success","changeTicketPr","priority","getCommit","history","commitList","selectedCommitId","push","openCount","PendingCount","ClosedCount","RU","SideBarMenus","SideBarMenus2","SideBarMenus3","SideBarMenus4","SideBarMenus5","SideBarMenus6","SideBarMenus7","SideBarMenus8","SideBarMenus9","Search","SubNavbarMenu","SubNavbarMenu2","SubNavbarMenu3","SubNavbarMenu4","SubNavbarMenu5","SubNavbarMenu0","SubNavbarMenu6","SubNavbarMenu7","SubNavbarMenu8","SubNavbarMenu9","SubNavbarMenu10","SubNavbarMenu11","SubNavbarMenu12","SubNavbarMenu13","SubNavbarMenu14","SubNavbarMenu15","SubNavbarMenu16","SubNavbarMenu17","SubNavbarMenu18","SubNavbarMenu19","SubNavbarMenu20","Agents","Agents1","Agents2","Agents3","Agents4","Agents5","Agents6","Agents7","Agents8","Agents9","Agents10","Agents11","Agents12","Agents13","Agents14","CreateAgent","CreateAgent2","CreateAgent3","CreateAgent4","CreateAgent5","CreateAgent6","CreateAgent7","CreateAgent8","NewTicket","NewTicket0","NewTicket2","NewTicket3","NewTicket4","NewTicket5","NewTicket6","NewTicket7","NewTicket8","NewTicket9","NewTicket10","NewTicket11","infoAccount","infoAccount2","infoAccount3","infoAccount4","infoAccount5","infoAccount6","infoAccount7","infoAccount8","infoAccount9","infoAccount10","Commit","Commit2","Commit3","Commit4","Commit5","Commit6","Commit7","Commit8","Commit9","Commit10","Commit11","Commit12","Commit13","login","crAgent","Type","Update","EN","getText","word","getInfoAccount","getAccount","getAllAgents","getAllAgentsList","getAllAgentsListCount","length","updateUserInfo","AccountID","dataEmail","bigData","FormData","append","full_name","phone","team","role","put","error","updateInfoAccount","agentListModal","id","connect","state","createAgentData","ticketData","props","useHistory","useEffect","changeLang","lang","setItem","window","location","reload","onClick","filter","item","is_read","image","email","removeItem","getActiveTeamList","activeAgentslList","map","role_name","value","activeAgentslListForTeam","createTeamData","useState","teamName","setTeamName","name","agents_count","agents","Modal","isOpen","fade","slice","subAllTickets","subOpen","subClosed","subPending","todayTicket","today","todayNoOpened","date","Date","setDate","getDate","currentDate","day","month","getMonth","getFullYear","count","activeAgentslListCount","getAllAgentsListCountFunction","getActiveTeamListCountFunction","data-toggle","href","placeholder","aria-haspopup","aria-expanded","aria-labelledby","createTeamObject","createTeam","description","post","goBack","onValidSubmit","event","createAgentObject","createAgent","password","password2","required","LoginUser","authData","tokens","access","isLoading","events","PieChart","s1","setS1","s2","setS2","s3","setS3","options","useMemo","chart","width","labels","dataLabels","enabled","responsive","breakpoint","legend","show","position","offsetY","height","series","UrgentCount","HighCount","MediumCount","LowCount","VeryLowCount","prVeryLow","prLow","prMedium","prHigh","prUrgent","totalValue","plotOptions","radialBar","fontSize","total","label","formatter","initialState","editModal","adminCount","agentCount","viewerCount","getCountPermissions","topUsers","topAgents","closed_tickets","ExportToExcel","apiData","fileName","setData","setCount","r","e","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","style","border","borderRadius","marginTop","Test","currYear","january","setjanuary","february","setfebruary","march","setmarch","april","setapril","may","setmay","june","setjune","july","setjuly","august","setaugust","september","setseptember","october","setoctober","november","setNovember","december","setdecember","bar","horizontal","columnWidth","endingShape","stroke","colors","xaxis","categories","yaxis","title","text","fill","opacity","dropShadow","top","left","blur","grid","row","column","tooltip","y","val","Report","saveFile","accountId","changePasswordForSend","target","onChange","files","disabled","classname","createTIcket","client_full_name","client_phone_number","subject","content","receiver","maskNumber","selected","Verified","token","URLSearchParams","search","NotFound","PrivateRoute","component","path","exact","forSerPag","getAllTicketForSearch","includes","filterStatusFunction","byName","finalDate","pathSearch","setPathSearch","pathSearch2","setPathSearch2","pathname","searchTicket","forSerPagfilter","pActive","forSerPagPriority","changeCheckPriorty","priortyId","changeCheckStatus","statusId","getAllTicketFilter","AllFunc","page","allNext","editAllAgent","teams","getAllTicketSortByDate","startDate","endDate","allNextSearch","idUrl","prUrl","getAllTicketFilterWithAgent","modal","setModal","toggle","changePrFunction","filterList","pagesNumbers","i","last_page","removeFilter","collectState","setCollectState","changePriorty","priorityId","checkEl","useRef","withData","document","getElementById","item2","right","index","ref","checked","newList","collect","cursor","sender_name","receiver_name","ticket_status_name","marginBottom","date_created","color","previous","next","hidden","VerifiedChangePassword","setPermission","tokenST","setTokenST","uidb64ST","setUidb64ST","query","uidb64","Data","editTicketReciever","split","pop","date_modified","from_where","sendCommit","scrollTo","status","url","URL","last","substr","lastIndexOf","inputRef","sender","agent","agent_name","message","thtNext","thtFunc","TicketsToHandle","myOpenNext","myOpenFunc","TicketOpen","sevenDayNext","sevenDayFunc","handleClick","pages","Math","ceil","number","TicketLastDays","changePasswordForSend2","getAccountForEdit","getInfoAccountForEdit","infoId","saveFileForEdit","changeInfoAccountData","model","customInput","PendingNext","PendingNextFunc","OpenNext","OpenNextFunc","ClosedNext","ClosedNextFunc","ByFilter","ClosedFilter","PendingFilter","OpenFilter","createTIcketUpdate","App","Login","ForgotPassword","AllTickets","NewTicketUpdate","InfoAccount","InfoAccountEdit","CreateTeamPair","CreateAgentPair","selectTeamReducer","agentModal","getFUllMonth","rootReducer","combineReducers","action","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.eb1bc64b.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nimport {Link, NavLink} from \"react-router-dom\";\n\nconst SideBar = () => {\n\n\n    return (\n\n\n        <div className=\"side-bar\">\n          <div className=\"left-colums\">\n\n               <NavLink to='/tickets' className=\"side-bar-imgs  \" activeClassName=\"active-link\">\n\n                   <img src=\"/img/side-bar-first.png\"   alt=\"side-bar\"/>\n                </NavLink>\n\n              <NavLink to='/agents' className=\"side-bar-imgs\" activeClassName=\"active-link\">\n\n           <img src=\"/img/side-bar-second.png\"     alt=\"side-bar\"/>\n\n              </NavLink>\n              <NavLink to='/report' className=\"side-bar-imgs\" activeClassName=\"active-link\">\n\n                <img src=\"/img/side-bar-thrid.png\" alt=\"side-bar\"/>\n\n              </NavLink>\n          </div>\n\n\n\n\n        </div>\n    );\n};\n\nexport default SideBar;","export const API_PATH = \"http://w1.citynet.uz:4440/\";\n\n\nexport const TOKEN_NAME = \"help-desk\"\nexport const SITE_LANG = \"language\"\n","\nexport const LOGIN = \"LOGIN\"\n\nexport const CREATE_AGENT = \"CREATE_AGENT\"\nexport const CREATE_TICKET = \"CREATE_TICKET\"\n\n","export const UPDATE_STATE = \"UPDATE_STATE\";","import axios from \"axios\";\r\nimport {API_PATH, TOKEN_NAME} from \"../../tools/constants\";\r\nimport {UPDATE_STATE} from \"../actionTypes/createAgentType\";\r\nimport {toast} from \"react-toastify\";\r\n\r\n\r\n\r\nexport function updateState (data){\r\n    return {\r\n        type: UPDATE_STATE,\r\n        payload: data\r\n    }\r\n}\r\n\r\n\r\nexport function getAllTicket(Number, data , pageIndex){\r\n    return function (dispatch){\r\n\r\n\r\n\r\n        axios.get(  API_PATH + 'ticket/v1/list/'   , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({getTickets: res.data.data}));\r\n                dispatch(updateState({getTickets2: res.data.data}));\r\n                dispatch(updateState({changeGetTickets2: res.data}));\r\n                dispatch(updateState({getTicketsSearch: res.data.data}));\r\n                dispatch(updateState({pageIndex: Number}));\r\n                dispatch(updateState({AllCount: res.data}));\r\n\r\n            })\r\n            .catch(err =>{\r\n\r\n            })\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport function getAllTicketSortByDate(startDate, endDate){\r\n    return function (dispatch){\r\n\r\n\r\n\r\n        axios.get(  API_PATH + 'ticket/v1/list/?start_date=' + startDate  + '&end_date=' + endDate   , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({getTickets: res.data.data}));\r\n                dispatch(updateState({getTickets2: res.data.data}));\r\n                dispatch(updateState({changeGetTickets2: res.data}));\r\n                dispatch(updateState({getTicketsSearch: res.data.data}));\r\n                dispatch(updateState({pageIndex: Number}));\r\n                dispatch(updateState({AllCount: res.data}));\r\n\r\n            })\r\n            .catch(err =>{\r\n\r\n            })\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport function getAllTicketForId(  data){\r\n    return function (dispatch, getState){\r\n\r\n        console.log(data)\r\n        //\r\n        //\r\n        //\r\n        //\r\n        //\r\n        //\r\n        // axios.get(  API_PATH + 'ticket/v1/list/' +  \"?receiver=\" +data , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n        //\r\n        //     .then(res =>{\r\n        //\r\n        //         // dispatch(updateState({openCount: res.data.data}));\r\n        //         // dispatch(updateState({ClosedCount: res.data.data}));\r\n        //         dispatch(updateState({AllCount: res.data}));\r\n        //\r\n        //\r\n        //     })\r\n        //     .catch(err =>{\r\n        //\r\n        //     })\r\n        //\r\n        //\r\n        // axios.get(  API_PATH + 'ticket/v1/list/?status=Open' +  \"&receiver=\" + data, {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n        //\r\n        //     .then(res =>{\r\n        //\r\n        //         dispatch(updateState({openCount: res?.data}));\r\n        //         // dispatch(updateState({ClosedCount: res.data.data}));\r\n        //         // dispatch(updateState({AllCount: res.data}));\r\n        //\r\n        //\r\n        //     })\r\n        //     .catch(err =>{\r\n        //\r\n        //     })\r\n        //\r\n        //\r\n        //\r\n        //\r\n        // axios.get(  API_PATH + 'ticket/v1/list/?status=Closed' +  \"&receiver=\" + data, {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n        //\r\n        //     .then(res =>{\r\n        //\r\n        //         // dispatch(updateState({openCount: res.data.data}));\r\n        //         dispatch(updateState({ClosedCount: res.data}));\r\n        //         // dispatch(updateState({AllCount: res.data}));\r\n        //\r\n        //\r\n        //     })\r\n        //     .catch(err =>{\r\n        //\r\n        //     })\r\n        //\r\n        //\r\n        //\r\n        //\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport function getAllTicketForSearch(data){\r\n\r\n    // console.log(data)\r\n\r\n     return function (dispatch, getState){\r\n\r\n        let   newArr = getState().ticketData.getTickets2.filter(item => item.subject.includes(data))\r\n\r\n        dispatch(updateState({changeGetTickets2: newArr}))\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function getAllTicketToHandle(Number){\r\n    return function (dispatch){\r\n\r\n        axios.get(API_PATH + 'ticket/v1/list-own/?page=' + (Number  ?  Number :  \"1\") , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({getTicketsToHandle: res.data.data}));\r\n                dispatch(updateState({btc: res.data}));\r\n\r\n            })\r\n            .catch(err =>{\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function getMyOpenTicket(Number){\r\n    return function (dispatch){\r\n\r\n\r\n        axios.get(API_PATH + 'ticket/v1/list-own?status=Open&page=' +  (Number  ? Number : '1') , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({getOpenTickets: res.data.data}));\r\n                dispatch(updateState({boc: res.data}));\r\n\r\n            })\r\n            .catch(err =>{\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function getTicketsSevenDays( end_date , start_date ){\r\n    return function (dispatch){\r\n\r\n\r\n\r\n        axios.get(API_PATH + 'ticket/v1/list-own?start_date=' + end_date + '&end_date=' + start_date   , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({getLastDaysTickets: res.data.data}));\r\n                dispatch(updateState({bot: res.data}));\r\n\r\n\r\n\r\n            })\r\n            .catch(err =>{\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function getStatusList(){\r\n    return function (dispatch){\r\n        axios.get(API_PATH + \"ticket/v1/status-list/\", {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res=>{\r\n                dispatch(updateState({ticketStatusList: res.data.data}))\r\n                dispatch(updateState({ticketStatusList: res.data.data}))\r\n            })\r\n            .catch(err=>{\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function createTIcket(data, history){\r\n    return function (dispatch){\r\n\r\n\r\n        let ticketData = new FormData();\r\n        ticketData.append(\"client_full_name\", data.client_full_name)\r\n        ticketData.append(\"client_phone_number\", data.client_phone_number)\r\n        ticketData.append(\"subject\", data.subject)\r\n        ticketData.append(\"content\", data.content)\r\n        ticketData.append(\"team\", data.team)\r\n        ticketData.append(\"receiver\", data.receiver)\r\n        ticketData.append(\"ticket_status\", data.ticket_status)\r\n        ticketData.append(\"priority\", data.priority)\r\n\r\naxios.post(API_PATH + \"ticket/v1/create/\" , ticketData, {headers:  {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n    .then(res =>{\r\n\r\n\r\n\r\n        history.push(\"/tickets/all-tickets\")\r\n\r\n\r\n\r\n        toast.success(\"Ticket create\")\r\n\r\n    })\r\n    .catch(err =>{\r\n        toast.error(\"Ticket don't create\")\r\n\r\n    })\r\n\r\n\r\n}\r\n}\r\n\r\n\r\n\r\n\r\nexport function createTIcketUpdate(data, history, ticketId){\r\n    return function (dispatch){\r\n\r\n\r\n        let ticketData = new FormData();\r\n        ticketData.append(\"client_full_name\", data.client_full_name)\r\n        ticketData.append(\"client_phone_number\", data.client_phone_number)\r\n        ticketData.append(\"subject\", data.subject)\r\n        ticketData.append(\"content\", data.content)\r\n        ticketData.append(\"team\", data.team)\r\n        ticketData.append(\"receiver\", data.receiver)\r\n        ticketData.append(\"ticket_status\", data.ticket_status)\r\n        ticketData.append(\"priority\", data.priority)\r\n\r\n        axios.put(API_PATH + \"ticket/v1/retrieve-update/\" + ticketId + \"/\" , ticketData, {headers:  {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res =>{\r\n\r\n\r\n\r\n                history.push(\"/tickets/commit/\" + ticketId)\r\n\r\n\r\n\r\n                toast.success(\"Ticket update\")\r\n\r\n            })\r\n            .catch(err =>{\r\n                toast.error(\"Ticket don't create\")\r\n\r\n            })\r\n\r\n\r\n    }\r\n}\r\n\r\nexport function ticketInfo(ticketId){\r\n\r\n    return function (dispatch){\r\n        axios.get(API_PATH  + \"ticket/v1/retrieve-update/\" +  ticketId ,{headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res=>{\r\n                dispatch(updateState({ticketInfoObject: res.data.data}))\r\n            })\r\n            .catch(err=>{\r\n            })\r\n    }\r\n}\r\n\r\nexport function changeTicketStatus(data, values){\r\n    return function (dispatch){\r\n\r\n\r\n\r\n        axios.patch(API_PATH + \"ticket/v1/retrieve-update/\" + data + \"/\", {ticket_status: values}, {headers:  {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res => {\r\n\r\n                dispatch(getAllTicket())\r\n                dispatch(getTicketsSevenDays())\r\n                dispatch(getMyOpenTicket())\r\n                dispatch(getAllTicketToHandle())\r\n                dispatch(ticketInfo())\r\n                dispatch(OpenStatusCount())\r\n                dispatch(ClosedStatusCount())\r\n                dispatch(PendingStatusCount())\r\n                toast.success(\"Status changed\")\r\n\r\n            })\r\n            .catch(err =>{\r\n\r\n                dispatch(getAllTicket())\r\n                dispatch(getTicketsSevenDays())\r\n                dispatch(getMyOpenTicket())\r\n                dispatch(getAllTicketToHandle())\r\n                dispatch(OpenStatusCount())\r\n                dispatch(ClosedStatusCount())\r\n                dispatch(PendingStatusCount())\r\n\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport function changeTicketPr(data, values){\r\n    return function (dispatch){\r\n\r\n\r\n\r\n\r\n        axios.patch(API_PATH + \"ticket/v1/retrieve-update/\" + data + \"/\", {priority: values}, {headers:  {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res => {\r\n\r\n                dispatch(getAllTicket())\r\n                dispatch(getTicketsSevenDays())\r\n                dispatch(getMyOpenTicket())\r\n                dispatch(getAllTicketToHandle())\r\n                dispatch(OpenStatusCount())\r\n                dispatch(ClosedStatusCount())\r\n                dispatch(PendingStatusCount())\r\n\r\n\r\n\r\n                toast.success(\"Priority changed\")\r\n\r\n            })\r\n            .catch(err =>{\r\n\r\n                dispatch(getAllTicket())\r\n                dispatch(getTicketsSevenDays())\r\n                dispatch(getMyOpenTicket())\r\n                dispatch(getAllTicketToHandle())\r\n                dispatch(OpenStatusCount())\r\n                dispatch(ClosedStatusCount())\r\n                dispatch(PendingStatusCount())\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function filterStatusFunction(byName){\r\n\r\n    return function (dispatch){\r\n        axios.get(API_PATH + 'ticket/v1/list/?status=' + byName , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({getTickets: res.data.data}));\r\n\r\n            })\r\n            .catch(err =>{\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function getCommit(data, history){\r\n\r\n\r\n    return function (dispatch){\r\n\r\n        axios.get(API_PATH + \"review/v1/list-create/\" +   data  + \"/\", {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res =>{\r\n                dispatch(updateState({commitList: res.data.data}))\r\n                dispatch(updateState({selectedCommitId: data}))\r\n\r\n                history.push(\"commit/\" + data)\r\n\r\n            })\r\n            .catch(err =>{\r\n\r\n\r\n            })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function sendCommit(data, ticketId){\r\n    return function (dispatch){\r\n\r\n        axios.post(API_PATH + \"review/v1/list-create/\" + ticketId + \"/\", data , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n                toast.success(\"Your message send\")\r\n\r\n\r\n                window.scrollTo(0, 0)\r\n\r\n                if (res.status ===201){\r\n                    axios.get(API_PATH + \"review/v1/list-create/\" +   ticketId  + \"/\", {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n                        .then(res =>{\r\n                            dispatch(updateState({commitList: res.data.data}))\r\n                            dispatch(updateState({selectedCommitId: data}))\r\n                            document.getElementById(\"textContent\").value = \"\";\r\n\r\n\r\n                        })\r\n                        .catch(err =>{\r\n\r\n\r\n                        })\r\n                 }\r\n            })\r\n            .catch(err=>{\r\n                toast.error(\"Failed\")\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function OpenStatusCount(){\r\n    return function (dispatch){\r\n        axios.get(API_PATH + 'ticket/v1/list?status=Open' , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({openCount: res?.data}))\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport function PendingStatusCount(){\r\n    return function (dispatch){\r\n        axios.get(API_PATH + 'ticket/v1/list?status=Pending' , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({PendingCount: res?.data}))\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport function ClosedStatusCount(){\r\n    return function (dispatch){\r\n        axios.get(API_PATH + 'ticket/v1/list?status=Closed' , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({ClosedCount: res?.data}))\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function todayTicket(today){\r\n    return function (dispatch){\r\n        axios.get(API_PATH + \"ticket/v1/list?status=Open&start_date=\"+ today + \"&end_date=\" + today , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res =>{\r\n\r\n                dispatch(updateState({subOpen: res.data}))\r\n            })\r\n\r\n\r\n        axios.get(API_PATH + \"ticket/v1/list?status=Pending&start_date=\"+ today + \"&end_date=\" + today , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res =>{\r\n\r\n                dispatch(updateState({subPending: res.data}))\r\n            })\r\n\r\n        axios.get(API_PATH + \"ticket/v1/list?status=Closed&start_date=\"+ today + \"&end_date=\" + today , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res =>{\r\n\r\n                dispatch(updateState({subClosed: res.data}))\r\n            })\r\n\r\n\r\n        axios.get(API_PATH + \"ticket/v1/list?start_date=\"+ today + \"&end_date=\" + today , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res =>{\r\n\r\n                dispatch(updateState({subAllTickets: res.data}))\r\n            })\r\n\r\n\r\n        axios.get(API_PATH + \"ticket/v1/list-own?is_read=false\", {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res =>{\r\n\r\n                dispatch(updateState({todayNoOpened: res.data}))\r\n            })\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nexport function  ClosedNext(data){\r\n    return function (dispatch){\r\n        axios.get(API_PATH + \"ticket/v1/list/?status=Closed\"  + \"&page=\" +  data, {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}} )\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({ClosedCount: res.data}))\r\n                dispatch(updateState({pActive: data}))\r\n\r\n            })\r\n    }\r\n}\r\nexport function  ClosedNextFunc(data){\r\n    return function (dispatch){\r\n        axios.get(   data, {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}} )\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({ClosedCount: res.data}))\r\n                dispatch(updateState({pActive: res.data.page}))\r\n\r\n            })\r\n    }\r\n}\r\nexport function  allNext(data, forSerPagfilter){\r\n    return function (dispatch, ){\r\n        axios.get(API_PATH + \"ticket/v1/list/?page=\" +  data + \"&q=\" + forSerPagfilter, {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}} )\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({changeGetTickets2: res.data}))\r\n                dispatch(updateState({pActive: data}))\r\n\r\n            })\r\n    }\r\n}\r\nexport function  allNextWithFilter(data){\r\n    return function (dispatch, getStatus){\r\n\r\n        axios.get(API_PATH + \"ticket/v1/list/?q=\" + getStatus().forSerPagfilter + \"&page=\" +  data, {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}} )\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({changeGetTickets2: res.data}))\r\n                dispatch(updateState({pActive: data}))\r\n\r\n            })\r\n    }\r\n}\r\nexport function   AllFunc(data){\r\n    return function (dispatch){\r\n        axios.get(   data, {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}} )\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({changeGetTickets2: res.data}))\r\n                dispatch(updateState({pActive: res.data.page}))\r\n\r\n            })\r\n    }\r\n}\r\nexport function  allNextSearch(data, idUrl, prUrl){\r\n    return function (dispatch){\r\n        axios.get(API_PATH + \"ticket/v1/list/?page=\" + data + \"&q=\" +  idUrl + \"&priority=\" + (prUrl ? prUrl : \"\"), {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}} )\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({changeGetTickets2: res.data}))\r\n                dispatch(updateState({pActive: data}))\r\n\r\n            })\r\n    }\r\n}\r\nexport function  PendingNext(data){\r\n    return function (dispatch){\r\n        axios.get(API_PATH + \"ticket/v1/list/?status=Pending\"  + \"&page=\" +  data, {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}} )\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({PendingCount: res.data}))\r\n                dispatch(updateState({pActive: data}))\r\n\r\n            })\r\n    }\r\n}\r\nexport function  PendingNextFunc(data){\r\n    return function (dispatch){\r\n        axios.get(   data, {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}} )\r\n            .then(res =>{\r\n                dispatch(updateState({PendingCount: res.data}))\r\n                dispatch(updateState({pActive: res.data.page}))\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function  OpenNext(data){\r\n    return function (dispatch){\r\n        axios.get(API_PATH + \"ticket/v1/list/?status=Open\"  + \"&page=\" +  data, {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}} )\r\n            .then(res =>{\r\n                dispatch(updateState({openCount: res.data}))\r\n                dispatch(updateState({pActive: data}))\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function  OpenNextFunc(data){\r\n    return function (dispatch){\r\n        axios.get( data, {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}} )\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({openCount: res.data}))\r\n                dispatch(updateState({pActive: res.data.page}))\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function  thtNext(data){\r\n    return function (dispatch){\r\n        axios.get(API_PATH + \"ticket/v1/list-own/?page=\" +  data, {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}} )\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({btc: res.data}))\r\n                dispatch(updateState({pActive: data}))\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function  thtFunc(data){\r\n    return function (dispatch){\r\n        axios.get( data, {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}} )\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({btc: res.data}))\r\n                dispatch(updateState({pActive: res.data.page}))\r\n            })\r\n    }\r\n}\r\n\r\nexport function  myOpenNext(data){\r\n    return function (dispatch){\r\n        axios.get(API_PATH + \"ticket/v1/list-own/?status=Open&page=\" +  data, {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}} )\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({boc: res.data}))\r\n                dispatch(updateState({pActive: data}))\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function  myOpenFunc(data){\r\n    return function (dispatch){\r\n        axios.get( data, {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}} )\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({boc: res.data}))\r\n                dispatch(updateState({pActive: res.data.page}))\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function sevenDayNext( end_date , start_date,  data){\r\n    return function (dispatch){\r\n        axios.get(API_PATH + 'ticket/v1/list-own?start_date=' + end_date + '&end_date=' + start_date + \"&page=\" + data    , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res =>{\r\n                dispatch(updateState({bot: res.data}));\r\n                dispatch(updateState({pActive: res.data.page}))\r\n            })\r\n            .catch(err =>{\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function  sevenDayFunc(data){\r\n    return function (dispatch){\r\n        axios.get( data, {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}} )\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({bot: res.data}))\r\n                dispatch(updateState({pActive: res.data.page}))\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function getAllTicketFilter(data){\r\n    return function (dispatch){\r\n        axios.get(  API_PATH + 'ticket/v1/list/?priority=' + data   , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res =>{\r\n                dispatch(updateState({changeGetTickets2: res.data}));\r\n                dispatch(updateState({forSerPag: true}));\r\n            })\r\n            .catch(err =>{\r\n            })\r\n    }\r\n}\r\nexport function getAllTicketFilterWithAgent(data){\r\n    return function (dispatch){\r\n        axios.get(  API_PATH + 'ticket/v1/list/?receiver=' + data   , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res =>{\r\n                dispatch(updateState({changeGetTickets2: res.data}));\r\n                dispatch(updateState({forSerPag: true}));\r\n            })\r\n            .catch(err =>{\r\n\r\n            })\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\nexport function editTicketReciever(data, receiver){\r\n\r\n    return function (dispatch){\r\n\r\n        let ticketData = new FormData();\r\n        ticketData.append(\"receiver\", receiver)\r\n\r\n        axios.patch(API_PATH  + 'ticket/v1/retrieve-update/' + data + \"/\", ticketData , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res =>{\r\n\r\n                toast.success(\"receiver changed\")\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function changeCheckPriorty(data, priortyId){\r\n    return function (dispatch){\r\n\r\n        data.map(item => {\r\n            axios.patch(  API_PATH +  \"ticket/v1/retrieve-update/\" + item.id + \"/\", {priority: priortyId},    {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n                .then(res =>{\r\n\r\n                    dispatch(updateState({changeGetTickets2: res.data}));\r\n                    // dispatch(updateState({forSerPag: true}));\r\n                    dispatch(getAllTicket())\r\n                    // toast.success(\"Priority changed\")\r\n\r\n\r\n                })\r\n                .catch(err =>{\r\n\r\n                })\r\n\r\n\r\n        })\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport function changeCheckStatus(data, statusId){\r\n    return function (dispatch){\r\n\r\n        data.map(item => {\r\n            axios.patch(  API_PATH +  \"ticket/v1/retrieve-update/\" + item.id + \"/\", {ticket_status: statusId},    {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n                .then(res =>{\r\n\r\n                    dispatch(updateState({changeGetTickets2: res.data}));\r\n                    // dispatch(updateState({forSerPag: true}));\r\n                    dispatch(getAllTicket())\r\n\r\n\r\n\r\n                })\r\n                .catch(err =>{\r\n\r\n                })\r\n\r\n\r\n        })\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport function editAllAgent(data,  teams){\r\n    return function (dispatch){\r\n\r\n        data.map(item => {\r\n            axios.patch(  API_PATH +  \"ticket/v1/retrieve-update/\" + item.id + \"/\", {receiver : teams.receiver, team : teams.team},    {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n                .then(res =>{\r\n\r\n                    dispatch(updateState({changeGetTickets2: res.data}));\r\n                    // dispatch(updateState({forSerPag: true}));\r\n                    dispatch(getAllTicket())\r\n                })\r\n                .catch(err =>{\r\n\r\n                })\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function prUrgent(){\r\n\r\n    return function (dispatch){\r\n        axios.get(API_PATH + 'ticket/v1/list/?priority=' + 1 , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({UrgentCount: res.data.data?.length}));\r\n\r\n            })\r\n            .catch(err =>{\r\n\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport function prHigh(){\r\n\r\n    return function (dispatch){\r\n        axios.get(API_PATH + 'ticket/v1/list/?priority=' + 1 , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({HighCount: res.data.data?.length}));\r\n\r\n            })\r\n            .catch(err =>{\r\n\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport function prMedium(){\r\n\r\n    return function (dispatch){\r\n        axios.get(API_PATH + 'ticket/v1/list/?priority=' + 0 , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({MediumCount: res.data.data?.length}));\r\n\r\n            })\r\n            .catch(err =>{\r\n\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport function prLow(){\r\n\r\n    return function (dispatch){\r\n        axios.get(API_PATH + 'ticket/v1/list/?priority=' + -1 , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({LowCount: res.data.data?.length}));\r\n\r\n            })\r\n            .catch(err =>{\r\n\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function prVeryLow(){\r\n\r\n    return function (dispatch){\r\n        axios.get(API_PATH + 'ticket/v1/list/?priority=' + -2 , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({VeryLowCount: res.data.data?.length}));\r\n\r\n            })\r\n            .catch(err =>{\r\n\r\n            })\r\n    }\r\n}\r\n\r\n\r\n","export const RU = {\r\n    SideBarMenus: \"Заявки\",\r\n    SideBarMenus2: \"Новая заявка\",\r\n    SideBarMenus3: \"Bсе заявки\",\r\n    SideBarMenus4: \"Закрытые\",\r\n    SideBarMenus5: \"Ожидающие\",\r\n    SideBarMenus6: \"Открытые\",\r\n    SideBarMenus7: \"Активные заявки\",\r\n    SideBarMenus8: \"Мои открытые заявки\",\r\n    SideBarMenus9: \"Мои заявки в течении последних 7 дней\",\r\n    Search: \"Поиск\",\r\n    SubNavbarMenu: \"Изменить статус\",\r\n    SubNavbarMenu2: \"Изменить приоритет \",\r\n    SubNavbarMenu3: \"Отправить агенту\",\r\n    SubNavbarMenu4: \"Фильтр\",\r\n    SubNavbarMenu5: \"Отправитель\",\r\n    SubNavbarMenu0: \"Телефонный номер\",\r\n    SubNavbarMenu6: \"Тема\",\r\n    SubNavbarMenu7: \"Агент\",\r\n    SubNavbarMenu8: \"Статус\",\r\n    SubNavbarMenu9: \"Обновлено\",\r\n    SubNavbarMenu10: \"Срочный\",\r\n    SubNavbarMenu11: \"Высокий\",\r\n    SubNavbarMenu12: \"Средний\",\r\n    SubNavbarMenu13: \"Низкий\",\r\n    SubNavbarMenu14: \"Очень низкий\",\r\n    SubNavbarMenu15: \"Закрытые заявки\",\r\n    SubNavbarMenu16: \"Ожидающие заявки\",\r\n    SubNavbarMenu17: \"Открытые заявки\",\r\n    SubNavbarMenu18: \"Активные заявки\",\r\n    SubNavbarMenu19: \"Мои открытые заявки\",\r\n    SubNavbarMenu20: \"Мои заявки в течении последних 7 дней\",\r\n    Agents: \"Агенты\",\r\n    Agents1: \"Агент\",\r\n    Agents2: \"Поиск\",\r\n    Agents3: \"Имя\",\r\n    Agents4: \"Изменение\",\r\n    Agents5: \"Детали\",\r\n    Agents6: \"Создать Агента\",\r\n    Agents7: \"Отделы\",\r\n    Agents8: \"Добавить\",\r\n    Agents9: \"Роль\",\r\n    Agents10: \"Админ\",\r\n    Agents11: \"Название\",\r\n    Agents12: \"Создать Отдел\",\r\n    Agents13: \"более\",\r\n    Agents14: \"Описание\",\r\n    CreateAgent: \"Создать агента\",\r\n    CreateAgent2: \"Электронный адрес (Email)\",\r\n    CreateAgent3: \"Пароль\",\r\n    CreateAgent4: \"Подтверждение пароля\",\r\n    CreateAgent5: \"Отмена\",\r\n    CreateAgent6: \"Наблюдатель\",\r\n    CreateAgent7: \"Пароль агента\",\r\n    CreateAgent8: \"Электронная почта агента\",\r\n    NewTicket: \"Новая заявка\",\r\n    NewTicket0: \"Изменить заявка\",\r\n    NewTicket2: \"Тема\",\r\n    NewTicket3: \"Клиент\",\r\n    NewTicket4: \"Телефонный номер\",\r\n    NewTicket5: \"Отдел\",\r\n    NewTicket6: \"Агенты\",\r\n    NewTicket7: \"Статус заявки\",\r\n    NewTicket8: \"Приоритет\",\r\n    NewTicket9: \"Отмена\",\r\n    NewTicket10: \"Создать\",\r\n    NewTicket11: \"Назад\",\r\n    infoAccount: \"Загрузить фото\",\r\n    infoAccount2: \"Роль \",\r\n    infoAccount3: \"Отдел\",\r\n    infoAccount4: \"Сохранить \",\r\n    infoAccount5: \"Отмена \",\r\n    infoAccount6: \"Аккаунт \",\r\n    infoAccount7: \"Контакты\",\r\n    infoAccount8: \"Разрешения\",\r\n    infoAccount9: \"Изменить пароль\",\r\n    infoAccount10: \"Полное имя\",\r\n\r\n\r\n\r\n    Commit: \"Название отдела\",\r\n    Commit2: \"Информация о заявке\",\r\n    Commit3: \"ID Заявки\",\r\n    Commit4: \"Рейтинг\",\r\n    Commit5: \"Источник\",\r\n    Commit6: \"Ответственность\",\r\n    Commit7: \"Получатель \",\r\n    Commit8: \"Отправитель\",\r\n    Commit9: \"Ваше сообщение \",\r\n    Commit10: \"Отправить\",\r\n    Commit11: \"Созданный\",\r\n    Commit12: \"Не оценено\",\r\n    Commit13: \"Создано вручную\",\r\n    login: \"Логин или пароль неверный\",\r\n    crAgent: \"Пользователь не создан\",\r\n    Type: \"Тип заявка\",\r\n    Update: \"Изменять\",\r\n}\r\n","export const EN = {\r\n    SideBarMenus: \"Tickets\",\r\n    SideBarMenus2: \"New ticket\",\r\n    SideBarMenus3: \"All tickets \",\r\n    SideBarMenus4: \"Closed\",\r\n    SideBarMenus5: \"Pending\",\r\n    SideBarMenus6: \"Open\",\r\n    SideBarMenus7: \"Tickets to handle\",\r\n    SideBarMenus8: \"My open tickets\",\r\n    SideBarMenus9: \"My tickets in last 7 days\",\r\n\r\n\r\n\r\n    Search: \"Search\",\r\n\r\n\r\n    SubNavbarMenu: \"Change status\",\r\n    SubNavbarMenu2: \"Change priority\",\r\n    SubNavbarMenu3: \"Change agent\",\r\n    SubNavbarMenu4: \"Add filer\",\r\n    SubNavbarMenu5: \"Requester\",\r\n    SubNavbarMenu0: \"Phone number\",\r\n    SubNavbarMenu6: \"Subject\",\r\n    SubNavbarMenu7: \"Agent\",\r\n    SubNavbarMenu8: \"Status \",\r\n    SubNavbarMenu9: \"Last message\",\r\n    SubNavbarMenu10: \"Urgent\",\r\n    SubNavbarMenu11: \"High\",\r\n    SubNavbarMenu12: \"Medium\",\r\n    SubNavbarMenu13: \"Low\",\r\n    SubNavbarMenu14: \"Very low\",\r\n\r\n    SubNavbarMenu15: \"Closed tickets\",\r\n    SubNavbarMenu16: \"Pending tickets\",\r\n    SubNavbarMenu17: \"Open tickets\",\r\n    SubNavbarMenu18: \"Tickets to handle\",\r\n    SubNavbarMenu19: \"My open tickets\",\r\n    SubNavbarMenu20: \"My tickets in last 7 days\",\r\n\r\n\r\n\r\n    Agents: \"Agents\",\r\n    Agents1: \"Agent\",\r\n    Agents2: \"Search\",\r\n    Agents3: \"Name\",\r\n    Agents4: \"Event\",\r\n    Agents5: \"Details\",\r\n    Agents6: \"Create Agent\",\r\n    Agents7: \"Team\",\r\n    Agents8: \"Add\",\r\n    Agents9: \"Role\",\r\n    Agents10: \"Add\",\r\n    Agents11: \"Name\",\r\n    Agents12: \"Create Team\",\r\n    Agents13: \"more\",\r\n    Agents14: \"Description\",\r\n\r\n\r\n    CreateAgent: \"Create agent\",\r\n    CreateAgent2: \"Email \",\r\n    CreateAgent3: \"Password\",\r\n    CreateAgent4: \"Verify password\",\r\n    CreateAgent5: \"Cancel\",\r\n    CreateAgent6: \"Viewer\",\r\n    CreateAgent7: \"Agent password\",\r\n    CreateAgent8: \"Agent e-mail\",\r\n    NewTicket: \"New ticket\",\r\n    NewTicket0: \"Ticket update\",\r\n    NewTicket2: \"Subject\",\r\n    NewTicket3: \"Client\",\r\n    NewTicket4: \"Phone number\",\r\n    NewTicket5: \"Team\",\r\n    NewTicket6: \"Agents\",\r\n    NewTicket7: \"Status\",\r\n    NewTicket8: \"Priority\",\r\n    NewTicket9: \"Cancel\",\r\n    NewTicket10: \"Create ticket\",\r\n    NewTicket11: \"Back\",\r\n    infoAccount: \"Upload new avatar\",\r\n    infoAccount2: \"Personality\",\r\n    infoAccount3: \"Team\",\r\n    infoAccount4: \"Save changes\",\r\n    infoAccount5: \"Cancel\",\r\n    infoAccount6: \"Info account\",\r\n    infoAccount7: \"Contacts\",\r\n    infoAccount8: \"Permissions \",\r\n    infoAccount9: \"Change password\",\r\n    infoAccount10: \"Full name\",\r\n    Commit: \"Team Name\",\r\n    Commit2: \"Ticket info\",\r\n    Commit3: \"Ticket ID\",\r\n    Commit4: \"Rating\",\r\n    Commit5: \"Source\",\r\n    Commit6: \"Responsibility\",\r\n    Commit7: \"Receiver \",\r\n    Commit8: \"Sender\",\r\n    Commit9: \"Youк feedback\",\r\n    Commit10: \"Submit\",\r\n    Commit11: \"Created\",\r\n    Commit12: \"No rated\",\r\n    Commit13: \"Created manually\",\r\n    login: \"Login or password error\",\r\n    crAgent: \"User not created\",\r\n    Type: \"Type of ticket\",\r\n    Update: \"Update\"\r\n\r\n}\r\n","import {RU} from './RU';\r\nimport {EN} from './EN';\r\nimport {SITE_LANG} from \"../tools/constants\";\r\n\r\n\r\n\r\n\r\nexport function getText(word){\r\n    if (localStorage.getItem(SITE_LANG) === \"en\"){\r\n        return EN[word];\r\n    } else return RU[word];\r\n}\r\n\r\nexport function getLang(){\r\n    return localStorage.getItem(SITE_LANG);\r\n}","import axios from \"axios\";\nimport {API_PATH, TOKEN_NAME} from \"../../tools/constants\";\nimport {CREATE_AGENT} from \"../actionTypes/authType\";\nimport {updateState} from \"./TicketsAction\";\nimport {toast} from \"react-toastify\";\nimport {getText} from \"../../locales\";\n\nexport function createAgent(data, history)  {\n    return function (dispatch) {\n\n        dispatch({\n            type: CREATE_AGENT\n        });\n\n        let createAgentData = new  FormData();\n        createAgentData.append(\"email\", data.email)\n        createAgentData.append(\"password\", data.password)\n        createAgentData.append(\"password2\", data.password2)\n\n         axios.post(API_PATH + \"user/v1/register/\", createAgentData ,\n             {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n             .then(res =>{\n\n                 history.push( \"/agents/info-account-edit/\" + res.data.data.id)\n\n             })\n             .catch(error =>{\n                 toast.error(getText(\"crAgent\"))\n\n\n             })\n\n    }\n\n\n}\n\nexport function getInfoAccount(){\n    return function (dispatch){\n        axios.get(API_PATH + \"user/v1/get-user/\", {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n            .then(res =>{\n\n                dispatch(updateState({getAccount: res.data.data}));\n\n            })\n            .catch(err =>{\n                console.log(err)\n            })\n\n\n    }\n}\n\nexport function saveFileForEdit(data, accountId){\n    return function (dispatch) {\n        let image = new FormData();\n        image.append(\"image\", data);\n\n\n        axios.put(API_PATH + \"user/v1/update-own-image/\" + accountId + \"/\", image ,{headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n            .then(res => {\n                toast.success(\"image update\");\n                dispatch(getInfoAccount())\n            })\n            .catch(err =>{\n                toast.error(\"Access to only owner\");\n\n            })\n    }\n}\n\nexport function getInfoAccountForEdit(infoId){\n\n    return function (dispatch){\n        axios.get(API_PATH + \"user/v1/update/\" + infoId + \"/\", {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n            .then(res =>{\n                dispatch(updateState({getAccountForEdit: res.data.data}));\n\n\n\n\n\n\n\n\n                axios.get(  API_PATH + 'ticket/v1/list/' +  \"?receiver=\" + res.data.data.email , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n\n                    .then(res =>{\n\n                        // dispatch(updateState({openCount: res.data.data}));\n                        // dispatch(updateState({ClosedCount: res.data.data}));\n                        dispatch(updateState({AllCount: res.data}));\n\n\n                    })\n                    .catch(err =>{\n\n                    })\n\n\n                axios.get(  API_PATH + 'ticket/v1/list/?status=Open' +  \"&receiver=\" + res.data.data.email, {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n\n                    .then(res =>{\n\n                        dispatch(updateState({openCount: res?.data}));\n                        // dispatch(updateState({ClosedCount: res.data.data}));\n                        // dispatch(updateState({AllCount: res.data}));\n\n\n                    })\n                    .catch(err =>{\n\n                    })\n\n\n\n\n                axios.get(  API_PATH + 'ticket/v1/list/?status=Closed' +  \"&receiver=\" + res.data.data.email, {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n\n                    .then(res =>{\n\n                        // dispatch(updateState({openCount: res.data.data}));\n                        dispatch(updateState({ClosedCount: res.data}));\n                        // dispatch(updateState({AllCount: res.data}));\n\n\n                    })\n                    .catch(err =>{\n\n                    })\n\n\n\n\n\n            })\n            .catch(err =>{\n\n            })\n    }\n}\n\nexport function changeInfoAccountData(data ,infoId  ){\n\n    // console.log(data)\n\n\n\n    return function (dispatch){\n        axios.put(API_PATH + \"user/v1/update/\" + infoId + \"/\",data,  {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n            .then(res =>{\n                dispatch(updateState({getAccountForEdit: res.data.data}));\n\n            })\n            .catch(err =>{\n\n            })\n    }\n}\n\nexport function changePasswordForSend(data, history){\n    return function (dispatch){\n\n        axios.post(API_PATH + \"user/v1/password-change/\",  {email: data}  )\n            .then(res =>{\n                toast.success(<a className=\"text-white  text-decoration-none\"   target=\"_blank\" href=\"https://gmail.com/\">check your email</a>)\n\n            })\n    }\n}\n\nexport function changePasswordForSend2(data, history){\n    return function (dispatch){\n\n        axios.post(API_PATH + \"user/v1/password-change/\",    data   )\n            .then(res =>{\n                toast.success(<a className=\"text-white  text-decoration-none\"  target=\"_blank\" href=\"https://gmail.com/\">check your email</a>)\n            })\n    }\n}\n\n\nexport function getAllAgents(){\n    return function (dispatch){\n\n\n        axios.get(API_PATH + \"user/v1/list/\", {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n            .then(res =>{\n\n                dispatch(updateState({getAllAgentsList: res.data.data}))\n                dispatch(updateState({getAllAgentsListCount: res.data.data.length}))\n\n\n            })\n            .catch(err =>{\n            })\n    }\n}\n\nexport function getAllAgentsListCountFunction(){\n    return function (dispatch){\n\n\n        axios.get(API_PATH + \"user/v1/list/\", {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n            .then(res =>{\n                dispatch(updateState({getAllAgentsListCount: res.data.data.length}))\n             })\n            .catch(err =>{\n            })\n    }\n}\n\n                        export function saveFile(data, accountId){\n                            return function (dispatch) {\n                                let image = new FormData();\n                                image.append(\"image\", data);\n\n\n                                axios.put(API_PATH + \"user/v1/update-own-image/\" + accountId + \"/\", image ,{headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n                                    .then(res => {\n                                        toast.success(\"image update\");\n                                        dispatch(getInfoAccount())\n                                    })\n                                    .catch(err =>{\n                                        toast.error(\"Error !!!\");\n\n                                    })\n                            }\n                        }\n\nexport function updateUserInfo(data, AccountID, dataEmail) {\n\n    return function (dispatch) {\n\n\n\n        let bigData = new FormData();\n        bigData.append(\"full_name\", data.full_name);\n        bigData.append(\"phone\", data.phone);\n        bigData.append(\"team\", data.team);\n        bigData.append(\"role\", data.role);\n        bigData.append(\"email\", dataEmail);\n\n\n\n        axios.put(API_PATH + \"user/v1/update/\" + AccountID + \"/\", bigData ,{headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n            .then(res =>{\n\n\n\n\n                toast.success(\"Успешно редактировать\")\n\n            })\n            .catch(err =>{\n                toast.error(\"Не может быть изменено\")\n            })\n\n    }\n\n}\n\nexport function updateInfoAccount(data, history){\n    return function (dispatch){\n        dispatch(updateState({agentListModal: false}))\n        history.push(\"/agents/info-account-edit/\" + data.id)\n\n    }\n}\n\n\n\n\nexport function topAgents(){\n    return function (dispatch){\n        axios.get(API_PATH + \"user/v1/report-top-users\", {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n            .then(res => {\n                dispatch(updateState({topUsers : res.data.data}))\n            })\n            .catch(err =>{\n\n            })\n    }\n}","import React, {useEffect} from 'react';\nimport {Link, NavLink, useHistory} from \"react-router-dom\";\nimport {getInfoAccount} from \"../redux/action/createAgentAction\";\nimport {connect} from \"react-redux\";\nimport {  getAllTicketToHandle} from \"../redux/action/TicketsAction\";\nimport {SITE_LANG} from \"../tools/constants\";\n\nconst AccountNavbar = (props) => {\n    let history = useHistory();\n\n    const logOut =()=>{\n        localStorage.removeItem(\"help-desk\")\n        history.push(\"/\")\n        window.location.reload();\n    }\n\n    useEffect(()=>{\n        props.getInfoAccount()\n        props.getAllTicketToHandle()\n\n    }, [])\n\n\n    const  changeLang = (lang) =>{\n        localStorage.setItem(SITE_LANG, (lang));\n        window.location.reload();\n    }\n\n\n    return (\n        <div className=\"all-tickets-right\">\n\n\n\n            <div className=\"dropdown\">\n\n\n                <button className=\"dropbtn\">\n                    {localStorage.getItem(\"language\") === \"en\" ? \" EN\" : \"RU\" }\n                </button>\n\n                <div className=\"dropdown-content\">\n                    <button onClick={() => changeLang('en')}>EN</button>\n                    <button onClick={() => changeLang('ru')}>RU</button>\n                </div>\n\n\n            </div>\n            <Link to=\"/tickets/tickets-to-handle\"className=\"bell-icon\">\n                <img src=\"/img/icon/bellFree.png\"  />\n                {\n                props.getTicketsToHandle?.filter(item => !item.is_read).length  > 0   ?\n                    <img src=\"/img/icon/ordot.png\" className=\"orange-dot\"  />\n\n                   :\n                   \"\"\n\n\n                }\n            </Link>\n            <NavLink to='info-account' className=\"d-flex\">\n\n               <div className=\"account-img\">\n                   <img src={props.getAccount.image ? props.getAccount.image  : \"/img/icon/account.png\" } alt=\"account\"/>\n\n               </div>\n               <div className=\"account-name\">\n                   <h4 className=\"open-sans-light\">{props.getAccount.full_name ?  props.getAccount.full_name  : \"Agents name\"}</h4>\n                   <h6 className=\"open-sans-light\">{props.getAccount.email ?  props.getAccount.email  : \"Agents email\"}</h6>\n               </div>\n\n            </NavLink>\n            <button onClick={  logOut } className=\"log-out-btn\"><img src=\"img/icon/logout.svg\" alt=\"\"/></button>\n        </div>\n    );\n};\n\n\nconst mapStateToProps=(state)=>{\n    return {\n        getAccount: state.createAgentData.getAccount,\n        getTicketsToHandle: state.ticketData.getTicketsToHandle,\n\n    }\n}\n\nexport default connect(mapStateToProps, {getInfoAccount, getAllTicketToHandle})(AccountNavbar);","import {UPDATE_STATE} from \"../actionTypes/createAgentType\";\nimport axios from \"axios\";\nimport {API_PATH, TOKEN_NAME} from \"../../tools/constants\";\nimport {toast} from \"react-toastify\";\n\n\n\nexport function updateState (data){\n    return {\n        type: UPDATE_STATE,\n        payload: data\n    }\n}\n\n\n\nexport function createTeam(data, history){\n    return function (dispatch){\n\n        // console.log(data)\n\n        let createTeamData = new FormData()\n        createTeamData.append(\"name\", data.name)\n        createTeamData.append(\"description\", data.description)\n        createTeamData.append(\"is_active\", true)\n\n        axios.post(API_PATH + \"team/v1/create/\", createTeamData, {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n            .then(res =>{\n                toast.success(\"successfully added\")\n                history.push( \"/agents\")\n\n            })\n            .catch(err =>{\n                toast.error(err)\n            })\n    }\n}\n\n\nexport function getActiveTeamList()\n{\n    return function (dispatch){\n\n\n\n\n\n        axios.get(API_PATH + 'team/v1/active-list/', {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n            .then(res =>  {\n                dispatch(updateState({activeAgentslList: res.data.data}));\n            })\n            .catch(err =>{\n\n            })\n    }\n}\n\n\nexport function getActiveTeamListCountFunction()\n{\n    return function (dispatch){\n\n\n\n\n\n        axios.get(API_PATH + 'team/v1/active-list/', {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n            .then(res =>  {\n                dispatch(updateState({activeAgentslListCount: res.data.data.length}));\n            })\n            .catch(err => {\n\n            })\n    }\n}\n\n\n\nexport function getCountPermissions (){\n    return function (dispatch){\n        axios.get(API_PATH + 'user/v1/list/?role=0', {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n            .then(res => {\n                dispatch(updateState({adminCount: res.data.data?.length}))\n            })\n            .catch(err => {\n\n            })\n\n        axios.get(API_PATH + 'user/v1/list/?role=2', {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n            .then(res => {\n                dispatch(updateState({agentCount: res.data.data?.length}))\n            })\n            .catch(err => {\n\n            })\n        axios.get(API_PATH + 'user/v1/list/?role=1', {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n            .then(res => {\n                dispatch(updateState({viewerCount: res.data.data?.length}))\n            })\n            .catch(err => {\n\n            })\n\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n","import React, {useEffect} from 'react';\nimport {connect} from \"react-redux\";\nimport {getActiveTeamList} from \"../../redux/action/CreateTeamAction\";\nimport {getAllAgents, getInfoAccount, updateInfoAccount} from \"../../redux/action/createAgentAction\";\nimport {getText} from \"../../locales\";\nimport {getAllTicketForId} from \"../../redux/action/TicketsAction\";\n\nconst AgentsTable = (props) => {\n\n    useEffect( ()=>{\n\n\n\n        props.getAllAgents()\n        // props.updateInfoAccount()\n        // props.getInfoAccount()\n\n    }, [])\n\n\n    const editOpen =(value)=> {\n        props.getAllTicketForId(value.email)\n\n        props.updateInfoAccount(value, props.history)\n    }\n\n\n    return (\n        <div className='agents-table'>\n           <table>\n               <thead>\n\n               <tr>\n                   <th></th>\n                   <th>\n                       <button><img src=\"./img/icon/arrowUpDown.png\" alt=\"\"/>{getText(\"Agents3\")}</button>\n                   </th>\n                   <th>\n                       <button><img src=\"./img/icon/arrowUpDown.png\" alt=\"\"/>{getText(\"Agents9\")}</button>\n                   </th>\n                   <th>\n                       <button>\n                           {getText(\"Agents4\")}\n                       </button>\n                   </th>\n               </tr>\n               </thead>\n\n               <tbody>\n\n\n\n\n\n\n               {\n                   props.getAllAgentsList ?  props.getAllAgentsList.map(item =>(\n                       <tr>\n\n                           <td>\n                               <div className=\"agents-table-body-account\">\n                                   <img src={item.image ? item.image : \"img/icon/account3.png\" } alt=\"\"/>\n                               </div>\n                           </td>\n                           <td>\n                               <div className=\"agents-table-body-name\">\n                                   <h3>{item.full_name}</h3>\n                                   <p>{item.email}</p>\n                               </div>\n                           </td>\n                           <td>\n                               <div className=\"agents-table-body-role\">\n                                   <span className={item.role_name === \"Admin\" ? \"agents-role-admin\" : item.role_name === \"Agent\" ? \"agents-role-agents\" : \"agents-role-viewer \"} >{item.role_name}</span>\n                               </div>\n                           </td>\n                           <td>\n\n                               {\n\n                                   props.getAccount.role_name === \"Admin\" ?\n                                       <button className=\"agent-team-edit-btn\" onClick={() => editOpen(item)}>\n                                       <img src=\"/img/icon/edit.png\" alt=\"\"/>\n                                   </button>\n                                       :\n                                       ''\n                               }\n\n                           </td>\n                       </tr>\n                   ))\n                       :\n\n                       ''\n               }\n\n\n\n\n               </tbody>\n\n\n           </table>\n        </div>\n    );\n};\n\n\nconst mapStateToProps =(state)=>{\n\n    return{\n        getAllAgentsList: state.createAgentData.getAllAgentsList,\n        getAccount: state.createAgentData.getAccount,\n\n    }\n}\n\nexport default connect(mapStateToProps, {getAllAgents, getInfoAccount,getAllTicketForId, updateInfoAccount })(AgentsTable);","import React, {useEffect} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {getActiveTeamList} from \"../../redux/action/CreateTeamAction\";\r\nimport {getAllAgents, getInfoAccount, updateInfoAccount} from \"../../redux/action/createAgentAction\";\r\nimport {getText} from \"../../locales\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst AgentsInTeam = (props) => {\r\n    const history = useHistory();\r\n    useEffect( ()=>{\r\n\r\n\r\n\r\n\r\n        // props.getAllAgents()\r\n        // props.updateInfoAccount()\r\n        // props.getInfoAccount()\r\n\r\n    }, [])\r\n\r\n\r\n    const editOpen =(value)=> {\r\n\r\n        props.updateInfoAccount(value, history)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='agents-table'>\r\n            <table>\r\n                <thead>\r\n\r\n                <tr>\r\n                    <th></th>\r\n                    <th>\r\n                        <button><img src=\"./img/icon/arrowUpDown.png\" alt=\"\"/>{getText(\"Agents3\")}</button>\r\n                    </th>\r\n                    <th>\r\n                        <button><img src=\"./img/icon/arrowUpDown.png\" alt=\"\"/>{getText(\"Agents9\")}</button>\r\n                    </th>\r\n                    <th>\r\n                        <button>\r\n                            {getText(\"Agents4\")}\r\n                        </button>\r\n                    </th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n\r\n\r\n                {\r\n                    props.activeAgentslListForTeam ?  props.activeAgentslListForTeam.map(item =>(\r\n                            <tr>\r\n\r\n                                <td>\r\n                                    <div className=\"agents-table-body-account\">\r\n                                        <img src={item.image ? item.image : \"img/icon/account3.png\" } alt=\"\"/>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"agents-table-body-name\">\r\n                                        <h3>{item.full_name}</h3>\r\n                                        <p>{item.email}</p>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"agents-table-body-role\">\r\n                                        <span className={item.role === \"Admin\" ? \"agents-role-admin\" : item.role === \"Agent\" ? \"agents-role-agents\" : \"agents-role-viewer \"} >{item.role}</span>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n\r\n                                    {\r\n\r\n                                        props.getAccount.role === \"Admin\" ?\r\n                                            <button className=\"agent-team-edit-btn\" onClick={() => editOpen(item, props.history)}>\r\n                                                <img src=\"/img/icon/edit.png\" alt=\"\"/>\r\n                                            </button>\r\n                                            :\r\n                                            ''\r\n                                    }\r\n\r\n                                </td>\r\n                            </tr>\r\n                        ))\r\n                        :\r\n\r\n                        ''\r\n                }\r\n\r\n\r\n\r\n\r\n                </tbody>\r\n\r\n\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps =(state)=>{\r\n\r\n    return{\r\n        activeAgentslListForTeam: state.createAgentData.activeAgentslListForTeam,\r\n        getAccount: state.createAgentData.getAccount,\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getAllAgents, getInfoAccount, updateInfoAccount })(AgentsInTeam);","import React, {useEffect, useState} from 'react';\nimport {connect} from \"react-redux\";\nimport {getActiveTeamList, updateState} from \"../../redux/action/CreateTeamAction\";\nimport {Link, match} from \"react-router-dom\";\nimport {Modal, ModalBody} from \"reactstrap\";\nimport {getText} from \"../../locales\";\nimport {getAllAgents} from \"../../redux/action/createAgentAction\";\nimport AgentsTable from \"./AgentsTable\";\nimport AgentsInTeam from \"./AgentInTeam\";\n\nconst AgentsTeamTable = (props) => {\n\n    const [teamName, setTeamName] = useState(\"\")\n\n    useEffect( ()=>{\n        props.getActiveTeamList()\n        props.getAllAgents()\n\n\n    }, [])\n\n    const teamTableView =()=>{\n        props.updateState({editModal: !props.editModal})\n    }\n\n    const OpenModal =(data)=>{\n        props.updateState({agentListModal: !props.agentListModal})\n\n\n        props.updateState({activeAgentslListForTeam: props.activeAgentslList.filter(item => item.id == data.id)[0].agents})\n\n\n        setTeamName(data.name)\n    }\n\n    return (\n        <div className='agents-team-table'>\n            <table>\n                <thead>\n\n                <tr>\n                    <th></th>\n                    <th>\n                        <button><img src=\"./img/icon/arrowUpDown.png\" alt=\"\"/>{getText(\"Agents3\")}</button>\n                    </th>\n                    <th>\n                        <button><img src=\"./img/icon/arrowUpDown.png\" alt=\"\"/>{getText(\"Agents\")}</button>\n                    </th>\n\n                    <th>\n\n                    </th>\n                </tr>\n                </thead>\n\n                <tbody>\n\n                {\n                    props.activeAgentslList ?  props.activeAgentslList.map(item =>(\n                        <tr>\n\n                            <td>\n                                <div className=\"agents-table-body-account\">\n                                    <img src=\"/img/icon/account3.png\" alt=\"account\"/>\n                                </div>\n                            </td>\n                            <td>\n                                <div className=\"agents-table-body-name\">\n                                    <h3>{item.name}</h3>\n                                    <p>{item.agents_count ? item.agents_count : \"0\"} {getText(\"Agents\")} </p>\n                                </div>\n                            </td>\n                            <td>\n                                <div className=\"agents-table-body-role\">\n                                    <img src=\"/img/icon/account3.png\" alt=\"account\"/>\n                                    <img src=\"/img/icon/account3.png\" alt=\"account\"/>\n                                    <img src=\"/img/icon/account3.png\" alt=\"account\"/>\n                                    <img src=\"/img/icon/account3.png\" alt=\"account\"/>\n\n                                    <span  >+20 {getText(\"Agents13\")}</span>\n                                </div>\n                            </td>\n                            \n\n                            <td>\n                                <button onClick={() => OpenModal(item)} className=\"agent-team-edit-btn\">\n                                    <img src=\"/img/icon/edit.png\" alt=\"\"/>\n                                </button>\n\n\n                            </td>\n                        </tr>\n\n                    ))\n                        :\n                        \"\"\n                }\n\n                </tbody>\n\n\n            </table>\n\n\n\n\n\n\n\n            <Modal isOpen={props.agentListModal} fade={false}  >\n\n\n                <div className=\"d-flex justify-content-between align-items-center mt-4 mb-0 pb-0 pl-4 pr-4\">\n                    <h3 className=\"font-weight-bold \">{teamName}</h3>\n                    <button onClick={() => props.updateState({agentListModal: !props.agentListModal})} className=\"close  \">&#x2715;</button>\n                </div>\n\n                <div className=\"pr-4 pl-4 pb-4 pt-0\">\n\n\n                    <AgentsInTeam history={props.history}/>\n                </div>\n            </Modal>\n\n        </div>\n\n    );\n};\n\n\nconst mapStateToProps =(state)=>{\n\n    return{\n        activeAgentslList: state.createTeamData.activeAgentslList,\n        activeAgentslListForTeam: state.createTeamData.activeAgentslListForTeam,\n        agentListModal: state.createTeamData.agentListModal,\n        getAllAgentsList: state.createAgentData.getAllAgentsList,\n\n\n    }\n}\n\nexport default connect(mapStateToProps, {getActiveTeamList,getAllAgents, updateState})(AgentsTeamTable);\n\n","import React, {useEffect} from 'react';\nimport {getInfoAccount} from \"../../redux/action/createAgentAction\";\nimport {connect} from \"react-redux\";\nimport {getActiveTeamList} from \"../../redux/action/CreateTeamAction\";\nimport {getText} from \"../../locales\";\n\nconst AgentsDetails = (props) => {\n\n\n    useEffect(()=>{\n        // props.getInfoAccount()\n        props.getActiveTeamList()\n    }, [])\n\n    return (\n        <div className=\"agents-details\">\n            <div className=\"agents-details-headers d-flex justify-content-between\">\n                <h2> {getText(\"Agents5\")}</h2>\n                {/*<NavLink to='agents/info-account' className=\"d-flex\">*/}\n\n                {/*    <img src=\"/img/icon/edit.png\" alt=\"edit\"/>Edit*/}\n                {/*</NavLink>*/}\n            </div>\n\n            <div className=\"agents-details-body\">\n                <div className=\"account-img\">\n                    <img src={props.getAccount.image ?  props.getAccount.image : \"/img/icon/account2.png\"} alt=\"account\"/>\n                    <span>{props.getAccount.role_name\n\n\n                    }</span>\n                </div>\n\n                <h3>{props.getAccount.full_name}</h3>\n                <p>{props.getAccount.email}</p>\n\n\n\n                <button>\n                    <img src=\"/img/icon/arrow.png\" alt=\"omg\"/>\n                    {getText(\"Agents7\")}\n                </button>\n\n\n                <div className=\"team-list\">\n\n\n                    {\n                        props.activeAgentslList\n                        ?\n                        props.activeAgentslList.slice(0, 4).map(item=>(\n                            <h4><img src=\"/img/icon/account3.png\"/>{item.name}</h4>\n\n                        ))\n                            :\n                            \"\"\n                    }\n\n\n\n\n                </div>\n            </div>\n\n        </div>\n    );\n};\n\nconst mapStateToProps =(state)=>{\n    return {\n        getAccount: state.createAgentData.getAccount,\n        activeAgentslList: state.createTeamData.activeAgentslList,\n\n    }\n}\n\nexport default connect(mapStateToProps, {getInfoAccount, getActiveTeamList})(AgentsDetails) ;","import React, {useEffect} from 'react';\nimport {connect} from \"react-redux\";\nimport {\n    ClosedStatusCount,\n    getAllTicket,\n    OpenStatusCount,\n    PendingStatusCount,\n    todayTicket\n} from \"../redux/action/TicketsAction\";\nimport {getText} from \"../locales\";\nimport {Link, NavLink} from \"react-router-dom\";\n\nconst SubNavbarMenu = (props) => {\n\n    var date = new Date();\n    date.setDate(date.getDate() - 7);\n\n\n\n\n    let currentDate = new Date()\n    let day = currentDate.getDate()\n    let month = currentDate.getMonth() + 1\n    let year = currentDate.getFullYear()\n\n    let today = year + \"-\" + month + \"-\" + day\n\n\n    useEffect(() => {\n        props.OpenStatusCount()\n        props.ClosedStatusCount()\n        props.PendingStatusCount()\n        props.getAllTicket()\n        props.todayTicket(today)\n\n\n    }, [])\n\n    return (\n        <div className='sub-navbar-menu'>\n\n\n            <div className=\"sub-navbar-menu-child\">\n                <Link to=\"/tickets/all-tickets\" className=\"tickets-count\">\n                    <div className=\"gm-father\">\n                        <img src=\"/img/icon/gm1.png\" alt=\"\"/>\n                    </div>\n\n                    <div>\n                        <h1>\n                            {props.AllCount.count}\n                            <span>+\n                                {\n                                   props.subAllTickets.count ?  props.subAllTickets.count : \"0\"\n                                }\n                       </span>\n                        </h1>\n                        <p>{getText(\"SideBarMenus3\")}</p>\n                    </div>\n                </Link>\n\n                <Link to=\"/tickets/filter/Open\" className=\"tickets-count\">\n                    <div className=\"gm-father\">\n                        <img src=\"/img/icon/gm2.png\" alt=\"\"/>\n                    </div>\n                    <div>\n                        <h1>\n                            {props.openCount.count}\n                            <span>+\n                                {\n                                    props.subOpen.count ?  props.subOpen.count : \"0\"\n                                }\n                       </span>\n                        </h1>\n                        <p>{getText(\"SideBarMenus6\")}</p>\n                    </div>\n                </Link>\n\n                <Link to=\"/tickets/filter/Pending\" className=\"tickets-count\">\n                    <div className=\"gm-father\">\n                        <img src=\"/img/icon/gm3.png\" alt=\"\"/>\n                    </div>\n\n                    <div>\n                        <h1>\n                            {props.PendingCount.count}\n\n                            <span>+\n\n                                    {\n                                        props.subPending.count ?  props.subPending.count : \"0\"\n                                    }\n\n                       </span>\n                        </h1>\n                        <p>{getText(\"SideBarMenus5\")}</p>\n                    </div>\n                </Link>\n\n                <Link to=\"/tickets/filter/Closed\" className=\"tickets-count\">\n                    <div className=\"gm-father\">\n                        <img src=\"/img/icon/gm4.png\" alt=\"\"/>\n                    </div>\n\n                    <div>\n                        <h1>\n                            {props.ClosedCount.count}\n\n                            <span>+\n                                {\n                                    props.subClosed.count ?  props.subClosed.count : \"0\"\n                                }\n                       </span>\n                        </h1>\n                        <p>{getText(\"SideBarMenus4\")}</p>\n                    </div>\n                </Link>\n\n            </div>\n\n        </div>\n    );\n};\n\n\nconst mapStateToProps = (state) => {\n    return {\n        openCount: state.ticketData.openCount,\n        PendingCount: state.ticketData.PendingCount,\n        ClosedCount: state.ticketData.ClosedCount,\n        AllCount: state.ticketData.AllCount,\n        subAllTickets: state.ticketData.subAllTickets,\n        subOpen: state.ticketData.subOpen,\n        subClosed: state.ticketData.subClosed,\n        subPending: state.ticketData.subPending,\n    }\n}\n\nexport default connect(mapStateToProps, {\n    OpenStatusCount,\n    todayTicket,\n    PendingStatusCount,\n    getAllTicket,\n    ClosedStatusCount\n})(SubNavbarMenu);","import React, {useEffect, useState} from 'react';\nimport AllTicketsNavbar from \"../component/AllTicketsNavbar\";\nimport AgentsTable from \"./agents/AgentsTable\";\nimport AgentsTeamTable from \"./agents/AgentsTeamTable\";\nimport AgentsDetails from \"./agents/AgentsDetails\";\nimport {Link} from \"react-router-dom\";\nimport AccountNavbar from \"../component/AccountNavbar\";\nimport SubNavbarMenu from \"../component/SubNavbarMenu\";\nimport SideBar from \"../component/SideBar\";\nimport {getActiveTeamList, getActiveTeamListCountFunction} from \"../redux/action/CreateTeamAction\";\nimport {connect} from \"react-redux\";\nimport {getAllAgentsListCount, getAllAgentsListCountFunction} from \"../redux/action/createAgentAction\";\nimport {getText} from \"../locales\";\n\nconst Agents = (props) => {\n    const [activeIndex, setActiveIndex] = useState(0);\n\n    const handleOnClick = index => {\n        setActiveIndex({index});\n    };\n\n\n\n\n    useEffect(() =>{\n\n        props.getAllAgentsListCountFunction()\n        props.getActiveTeamListCountFunction()\n    }, [])\n\n\n\n    return (\n\n\n        <div className=' d-flex w-100'>\n\n\n\n            <div className=\"agents  \">\n               <div className=\"w-100\">\n                   <div className=\"all-tickets-navbar\">\n\n                       <div className=\"all-tickets-navbar-child\">\n                           <h1>{getText(\"Agents\")}</h1>\n                           <AccountNavbar />\n                       </div>\n                   </div>\n\n\n\n                   <div className=\"d-flex w-100 h-100\">\n\n                       <div className='  agents-nav-tabs'>\n\n                           <ul className=\"nav nav-tabs\" role=\"tablist\">\n\n                               <li className=\"nav-item active\">\n                                   <a className=\"nav-link2  \" data-toggle=\"tab\" href=\"#tabs-1\" role=\"tab\"><span>{getText(\"Agents\")}</span>\n                                       <span>{props.getAllAgentsListCount}</span></a>\n                               </li>\n                               <li className=\"nav-item\">\n                                   <a className=\"nav-link2\" data-toggle=\"tab\" href=\"#tabs-2\" role=\"tab\"><span>{getText(\"Agents7\")}</span>\n                                       <span>{props.activeAgentslListCount}</span></a>\n                               </li>\n\n\n                               <div className='nav-tabs-right-control'>\n\n                                   <div>\n                                       <img src=\"/img/icon/loupe.png\" className=\"search-loupe\" alt=\"\"/>\n                                       <input type=\"text\" placeholder={getText(\"Search\") + \"...\"}/>\n                                   </div>\n\n                                   <div className=\"dropdown show dropdown-add-role\">\n                                       <a className=\"btn btn-primary dropdown-toggle\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\"\n                                          data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                           <img src=\"/img/icon/plus.png\" alt=\"\"/> {getText(\"Agents8\")}\n                                       </a>\n\n                                       <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n\n                                           <Link to='/agents/create-agent' className=\"dropdown-item\" href=\"#\"> <img src=\"./img/icon/userplus.png\" alt=\"\"/><span>{getText(\"Agents6\")}</span></Link>\n                                           <Link to='/agents/create-team' className=\"dropdown-item\" href=\"#\"> <img src=\"./img/icon/users.png\" alt=\"\"/><span>{getText(\"Agents12\")}</span></Link>\n                                       </div>\n                                   </div>\n\n                               </div>\n                               <div>\n\n                               </div>\n\n\n                           </ul>\n                           <div className=\"tab-content\">\n                               <div className=\"tab-pane active\" id=\"tabs-1\" role=\"tabpanel\">\n                                   <AgentsTable history={props.history}/>\n                               </div>\n                               <div className=\"tab-pane\" id=\"tabs-2\" role=\"tabpanel\">\n                                   <AgentsTeamTable/>\n                               </div>\n\n                           </div>\n                       </div>\n\n\n                       <AgentsDetails/>\n                   </div>\n               </div>\n            </div>\n        </div>\n    );\n};\nconst mapStateToProps =(state)=>{\n\n    return{\n\n        activeAgentslList: state.createTeamData.activeAgentslList,\n        activeAgentslListCount: state.createTeamData.activeAgentslListCount,\n        getAllAgentsListCount: state.createAgentData.getAllAgentsListCount,\n\n    }\n}\nexport default connect(mapStateToProps, {getActiveTeamList, getAllAgentsListCountFunction, getActiveTeamListCountFunction})(Agents) ;","import React, {useEffect} from 'react';\nimport AllTicketsNavbar from \"../../component/AllTicketsNavbar\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport AccountNavbar from \"../../component/AccountNavbar\";\nimport {MultiSelectComponent} from '@syncfusion/ej2-react-dropdowns';\nimport {AvForm, AvField} from \"availity-reactstrap-validation\"\nimport {CustomInput} from \"reactstrap\";\nimport {connect} from \"react-redux\";\nimport {createTeam} from \"../../redux/action/CreateTeamAction\";\nimport {getText} from \"../../locales\";\n\n\nconst CreateTeamPair = (props) => {\n\n    const createTeamFunction =(event, values)=>{\n        props.createTeam(values, props.history)\n    }\n    let history = useHistory();\n\n    return (\n        <div className='create-team-pair'>\n            <div className=\"all-tickets-navbar\">\n\n                <div className=\"all-tickets-navbar-child\">\n                    <button onClick={() => history.goBack()}  className='bg-transparent arrow-left-back'><img src=\"/img/icon/arrowleft.png\" alt=\"back img\"/>{getText(\"NewTicket11\")}</button>\n                    <h1>{getText(\"Agents12\")}</h1>\n                    <AccountNavbar/>\n                </div>\n            </div>\n\n\n            <AvForm className=\"create-team-inputs\" onValidSubmit={createTeamFunction}>\n                <h3>{getText(\"Agents7\")}</h3>\n                <AvField type=\"text\" name=\"name\" className=\"form-control\" placeholder={getText(\"Agents11\")}/>\n                <AvField type=\"text\" name=\"description\" className=\"form-control\" placeholder={getText(\"Agents14\")}/>\n\n                <div className=\"create-button-group\">\n                    <Link to='/agents'>{getText(\"CreateAgent5\")}</Link>\n\n\n                    <button className=\"btn\">\n                        {getText(\"Agents12\")}\n                        <img src=\"/img/icon/rightArrow.png\" alt=\"\"/>\n                    </button>\n                </div>\n            </AvForm>\n\n        </div>\n    );\n};\nconst mapStateToProps =(state)=>{\n    return {\n        createTeamObject: state.createTeamData.createTeamObject\n\n    }\n}\nexport default connect(mapStateToProps, {createTeam})(CreateTeamPair) ;","import React from 'react';\nimport {Link, useHistory} from \"react-router-dom\";\nimport AccountNavbar from \"../../component/AccountNavbar\";\nimport {AvForm, AvField} from 'availity-reactstrap-validation'\nimport {createAgent} from \"../../redux/action/createAgentAction\";\nimport {connect} from \"react-redux\";\nimport {getText} from \"../../locales\";\nconst CreateAgentPair = (props) => {\n\n\n    let history = useHistory();\n\n    const createAgentFunction =(event, values)=>{\n\n        props.createAgent(values, props.history);\n\n    }\n\n    return (\n        <div className=\"create-agent-pair w-100\">\n            <div className=\"all-tickets-navbar \">\n\n                <div className=\"all-tickets-navbar-child\">\n                    <button onClick={() => history.goBack()}  className='bg-transparent arrow-left-back'><img src=\"/img/icon/arrowleft.png\" alt=\"back img\"/>{getText(\"NewTicket11\")}</button>\n\n                    <h1>{getText(\"CreateAgent\")}</h1>\n                    <AccountNavbar/>\n                </div>\n            </div>\n\n            <div className=\"create-agent-inputs\">\n\n\n                <AvForm onValidSubmit={createAgentFunction}>\n\n                    <h3> {getText(\"CreateAgent8\")}</h3>\n\n                    <div className=\"row-for-input for-email\">\n                        <img src=\"/img/icon/envelope.png\" alt=\"\"/>\n                        <AvField\n\n                            required\n                            name=\"email\"\n                            placeholder={getText(\"CreateAgent2\")}\n\n                        />\n\n                    </div>\n\n                    <h3>{getText(\"CreateAgent3\")}</h3>\n\n                    <div className=\"row-for-input\">\n\n                        <AvField\n                            name=\"password\"\n                            type=\"password\"\n                            required\n                            placeholder={getText(\"CreateAgent3\")}\n                        />\n\n                        <AvField\n                            name=\"password2\"\n                            type=\"password\"\n                            required\n                            placeholder={getText(\"CreateAgent4\")}\n\n                        />\n                    </div>\n\n                    <div className=\"create-button-group\">\n                        <Link to='/agents'>{getText(\"CreateAgent5\")}</Link>\n                        <button className=\"btn\" type=\"submit\">\n                            {getText(\"CreateAgent\")}\n                            <img src=\"/img/icon/rightArrow.png\" alt=\"\"/>\n                        </button>\n                    </div>\n\n                </AvForm>\n\n            </div>\n        </div>\n    );\n};\n\n\n\nconst mapStateToProps =(state)=>{\n    return{\n        createAgentObject: state.createAgentData.createAgentObject\n    }\n}\n\nexport default connect(mapStateToProps, {createAgent})(CreateAgentPair);","import {CREATE_TICKET, LOGIN} from \"../actionTypes/authType\";\nimport axios from \"axios\";\nimport {API_PATH, TOKEN_NAME} from \"../../tools/constants\";\nimport {toast} from \"react-toastify\";\nimport {getText} from \"../../locales\";\n\n\nexport function LoginUser(data, history){\n\n\n    return function (dispatch){\n\n\n        dispatch({\n            type:LOGIN\n        })\n        let authData = new FormData();\n        authData.append(\"email\", data.email)\n        authData.append(\"password\", data.password)\n        axios.post(API_PATH + \"user/v1/login/\", authData)\n            .then(res =>{\n                localStorage.setItem(TOKEN_NAME, res.data.data.tokens.access)\n\n                history.push(\"/tickets\")\n                window.location.reload();\n\n            })\n            .catch(err =>{\n                toast.error(\"Логин или пароль неверный\")\n\n            })\n    }\n}\n\n\n","import React from 'react';\nimport {AvForm, AvField} from 'availity-reactstrap-validation'\nimport {Link} from \"react-router-dom\";\nimport {LoginUser} from \"../redux/action/authAction\";\nimport {connect} from \"react-redux\";\nconst Login = (props) => {\n\n\n    const login = (events, values   ) =>{\n        props.LoginUser(values, props.history)\n    }\n\n\n    return (\n        <div className='login-page'>\n            <div className=\"login-form-group\">\n\n                <h3>\n                    Войти\n                </h3>\n\n                <AvForm onValidSubmit={login}>\n                    <AvField\n\n                        name='email'\n                        required\n                        placeholder=\"Email\"\n                        type=\"text\"\n                    />\n                    <AvField\n\n                        name='password'\n                        required\n                        placeholder=\"Пароль\"\n                        type=\"password\"\n                    />\n\n\n\n                    <div type=\"submit\" className=\"create-button-group\">\n\n\n                        <button type=\"submit\" className=\"btn w-100\">\n                            Войти\n                            <img src=\"/img/icon/rightArrow.png\" alt=\"\"/>\n                        </button>\n                    </div>\n                </AvForm>\n\n\n\n                <div className=\"forgot-password mt-3 text-center\">\n                    <Link to=\"/forgot-password\">Забыли пароль ?</Link>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        isLoading: state.login.isLoading\n    }\n}\n\nexport default connect(mapStateToProps, {LoginUser})(Login);","\nimport React, {  useMemo, useState} from 'react';\nimport ReactApexChart from 'react-apexcharts'\nimport axios from \"axios\";\nimport {API_PATH, TOKEN_NAME} from \"../../tools/constants\";\nimport {updateState} from \"../../redux/action/TicketsAction\";\n\nconst PieChart = () => {\n\n\n    const [s1, setS1] = useState(0)\n    const [s2, setS2] = useState(0)\n    const [series, setseries] = useState([])\n    const [s3, setS3] = useState(0)\n\n\n    const op = useMemo(() => {\n\n        axios.get(API_PATH + 'ticket/v1/list?status=Open' , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n\n            .then(res =>{\n                setS1(res.data?.count)\n\n            })\n            .catch(err =>{\n\n            })\n\n\n        axios.get(API_PATH + 'ticket/v1/list?status=Closed' , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n\n\n            .then(res =>{\n                setS2(res.data?.count)\n            })\n            .catch(err =>{\n\n            })\n\n\n\n        axios.get(API_PATH + 'ticket/v1/list?status=Pending' , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n\n\n            .then(res =>{\n                setS3(res.data?.count)\n\n            })\n            .catch(err =>{\n\n            })\n\n\n\n    }, [ ])\n\n\n\n    let totalValue\n\n\n\n    const options = {\n        chart: {\n            width: 380,\n\n        },\n        labels: [' ' + s1 + ' - Open', ' ' + s2 +  ' - Pending', ' ' + s3 +  ' - Closed'],\n\n        dataLabels: {\n            enabled: false\n        },\n        responsive: [{\n            breakpoint: 480,\n            options: {\n                chart: {\n                    width: 200\n                },\n                legend: {\n                    show: false\n                }\n            }\n        }],\n        legend: {\n            position: 'right',\n            offsetY: 0,\n            height: 230,\n        }\n    }\n\n\n\n    //\n    // axios.get(API_PATH + 'ticket/v1/list?status=Open' , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n    //\n    //     .then(res =>{\n    //         setS1(res.data?.count)\n    //\n    //     })\n    //     .catch(err =>{\n    //\n    //     })\n\n\n\n\n    return (\n        <div>\n\n\n\n            <div className=\"chart-wrap\">\n                <div id=\"chart\" >\n                    <h3 className=\"d-flex justify-content-between pb-5 \">\n\n                        <span>Tickets status</span>\n\n                        <span> Total: {s1 + s2 + s3}</span>\n                    </h3>\n                    <ReactApexChart className=\"pl-5\" options={options} type=\"donut\" series={[s1, s2, s3]} width={380}/>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default PieChart;\n","import react, {Component, useEffect, useMemo} from 'react'\nimport ReactApexChart from 'react-apexcharts'\nimport {connect} from \"react-redux\";\nimport {prHigh, prLow, prMedium, prUrgent, prVeryLow} from \"../../redux/action/TicketsAction\";\n\nimport React from 'react';\n\nconst RadialBars = (props) => {\n\n    const totalValue = props.UrgentCount + props.HighCount   +  props.MediumCount + props.LowCount + props.VeryLowCount\n\n\n\n        const   series = [\n                props.UrgentCount,\n                props.HighCount,\n                props.MediumCount,\n                props.LowCount,\n                props.VeryLowCount,\n            ]\n\n\n    const  options = {\n        chart: {\n            height: 280,\n            type: 'radialBar',\n        },\n        labels: ['Urgent', 'High', 'Medium', 'Low', 'Very low'],\n        plotOptions: {\n            radialBar: {\n                dataLabels: {\n                    name: {\n                        fontSize: '22px',\n                    },\n                    value: {\n                        fontSize: '16px',\n                    },\n                    total: {\n                        show: false,\n                        label: 'Total',\n                        formatter: function () {\n                            // By default this function returns the average of all series. The below is just an example to show the use of custom formatter function\n                            return totalValue\n                        }\n                    }\n                }\n            }\n        },\n\n    }\n\n\n\n    useEffect(()=> {\n        props.prUrgent()\n        props.prHigh()\n        props.prMedium()\n        props.prLow()\n        props.prVeryLow()\n\n\n    }, )\n\n\n\n    return (\n\n        <div className=\"my-radial-bars  \">\n            <div id=\"chart\">\n\n\n                <h3 className=\"d-flex justify-content-between\">\n                    <span>Tickets priority</span>\n                    <span> Total: {totalValue}</span>\n                </h3>\n             <div className=\"bar-part\">\n                 <ReactApexChart options={options} series={series} type=\"radialBar\" className ={{ width:'80%'}} height={280} />\n\n\n             </div>\n\n\n            </div>\n\n            <ul className=\"counts\">\n                <li> <span>{ props.UrgentCount}</span> <span> - Urgent</span></li>\n                <li> <span>{ props.HighCount}</span> <span> - High</span></li>\n                <li> <span>{ props.MediumCount}</span> <span> - Medium</span></li>\n                <li> <span>{ props.LowCount}</span> <span> - Low</span></li>\n                <li> <span>{ props.VeryLowCount}</span> <span> - Very low</span></li>\n\n            </ul>\n\n        </div>\n\n\n    )\n}\n\n\n    const mapStateToProps =(state)=> {\n        return {\n\n            UrgentCount: state.ticketData.UrgentCount,\n            HighCount: state.ticketData.HighCount,\n            MediumCount: state.ticketData.MediumCount,\n            LowCount: state.ticketData.LowCount,\n            VeryLowCount: state.ticketData.VeryLowCount,\n        }\n    }\n\n\n\n\nexport default connect(mapStateToProps, {prVeryLow, prLow, prMedium, prHigh, prUrgent})(RadialBars);","import {UPDATE_STATE} from \"../actionTypes/createAgentType\";\n\n\nconst initialState ={\n\n    createTeamObject: {},\n    activeAgentslList: [],\n    activeAgentslListForTeam: [],\n    activeAgentslListCount: null,\n    editModal: false,\n    adminCount: null,\n    agentCount: null,\n    viewerCount: null,\n    agentListModal: false\n\n\n}\nexport const createTeamReducer = (state= initialState, action) => {\n    switch (action.type){\n        case UPDATE_STATE:\n            return {...state, ...action.payload}\n        default: return state;\n    }\n}\n","import React, {useEffect} from 'react';\nimport {connect} from \"react-redux\";\nimport {getCountPermissions} from \"../../redux/action/CreateTeamAction\";\nimport {createTeamReducer} from \"../../redux/reducer/createTeamReducer\";\n\nconst Permission = (props) => {\n\n    useEffect(()=>{\n        props.getCountPermissions()\n    }, [])\n    return (\n        <div className=\"permission-pair\">\n            <h3>Permission</h3>\n\n            <div className=\"title-per\">\n                <span>Permissions</span>\n                <span>Users</span>\n            </div>\n\n\n            <div className=\"title-con\">\n                <div className=\"title-con-item\">\n                    <h4><span><img src=\"/img/icon/AdminIcon.png\" alt=\"img\"/></span>Admin</h4>\n                    <h4>{props.adminCount ? props.adminCount : \"0\"}</h4>\n                </div>\n\n                <div className=\"title-con-item\">\n                    <h4><span><img src=\"/img/icon/AgentsIcon.png\" alt=\"img\"/></span>Agents</h4>\n                    <h4>{props.agentCount ? props.agentCount : \"0\"}</h4>\n                </div>\n\n\n                <div className=\"title-con-item\">\n                    <h4><span><img src=\"/img/icon/ViewerIcon.png\" alt=\"img\"/></span>Viewer</h4>\n                    <h4>{props.viewerCount ? props.viewerCount : \"0\"}</h4>\n                </div>\n\n            </div>\n        </div>\n\n    );\n};\n\nconst mapStateToProps =(state)=>{\n    return{\n        adminCount: state.createTeamData.adminCount,\n        agentCount: state.createTeamData.agentCount,\n        viewerCount: state.createTeamData.viewerCount,\n    }\n}\nexport default connect(mapStateToProps, {getCountPermissions})(Permission);","import React, {useEffect} from 'react';\nimport {connect} from \"react-redux\";\nimport {topAgents} from \"../../redux/action/createAgentAction\";\n\nconst Priority = (props) => {\n\n    useEffect(()=>{\n        props.topAgents()\n    }, [])\n    return (\n        <div className=\"priority-pair\">\n\n            <h3>Top agents</h3>\n\n\n            <div className=\"  top-title\">\n                <h5>Fulll name</h5>\n                <h5>Closed tickets</h5>\n            </div>\n\n            <div className=\"top-users\">\n\n                {\n\n                    props.topUsers?.map( item =>\n                    <div className=\"users-list\">\n                          <img src={item.image ? item.image  :  \"/img/icon/account.png\"} alt=\"\"/>\n\n                        <div>\n                            <h4>{item.full_name}</h4>\n                            <h6>{item.closed_tickets}</h6>\n                        </div>\n                    </div>\n                    )\n                }\n            </div>\n\n\n        </div>\n    );\n};\n\nconst mapStateToProps =(state)=>{\n    return{\n        topUsers: state.createAgentData.topUsers\n    }\n}\nexport default connect(mapStateToProps, {topAgents})(Priority) ;","import React, {useEffect, useMemo, useState} from 'react'\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\nimport axios from \"axios\";\r\nimport {API_PATH, TOKEN_NAME} from \"../../tools/constants\";\r\n\r\nconst ExportToExcel = ({apiData, fileName}) => {\r\n\r\n\r\n    const [data, setData] = useState([])\r\n    const [count, setCount] = useState(null)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n    const op = useMemo(() => {\r\n\r\n        axios.get(API_PATH + 'ticket/v1/list/', {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(r => {\r\n                    setData(r.data.data)\r\n                }\r\n            )\r\n\r\n\r\n\r\n    },[])\r\n\r\n        const fileType =\r\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n    const fileExtension = \".xlsx\";\r\n\r\n    const exportToCSV = (apiData, fileName) => {\r\n\r\n        axios.get(API_PATH + 'ticket/v1/list/', {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(r => {\r\n\r\n                setCount(r.data.count)\r\n\r\n\r\n\r\n                axios.get(API_PATH + 'ticket/v1/list/?per_page=' + r.data.count, {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n                    .then(res => {\r\n                        const ws = XLSX.utils.json_to_sheet(res.data.data);\r\n                        const wb = {Sheets: {data: ws}, SheetNames: [\"data\"]};\r\n                        const excelBuffer = XLSX.write(wb, {bookType: \"xlsx\", type: \"array\"});\r\n                        const data = new Blob([excelBuffer], {type: fileType});\r\n                        FileSaver.saveAs(data, fileName + fileExtension);\r\n\r\n                    })\r\n\r\n\r\n                }\r\n            )\r\n\r\n\r\n\r\n    };\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n        <button onClick={(e) => exportToCSV(apiData, fileName) } className=\"bg-transparent ml-4\" style={{border: \"1px solid #E8E8EA\", borderRadius: \"18px\", width: \"48px\", height: \"48px\",  }}><img src=\"/img/icon/download.svg\" style={{ marginTop: \"-5px\"}}/></button>\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default ExportToExcel;","import react, {Component, useEffect, useState} from 'react'\r\nimport ReactApexChart from 'react-apexcharts'\r\nimport axios from \"axios\";\r\nimport {API_PATH, TOKEN_NAME} from \"../../tools/constants\";\r\nimport React from \"react\";\r\nimport ExportToExcel from \"./ExportToExcel\";\r\n\r\n\r\nconst Test = () => {\r\n    const currYear = () => {\r\n        var year = new Date().getFullYear();\r\n        return year;\r\n    }\r\n\r\n    const [data, setData] = useState([])\r\n    const fileName = \"myfile\"; // here enter filename for your excel file\r\n\r\n\r\n\r\n\r\n    const [january, setjanuary] = useState(0)\r\n    const [february, setfebruary] = useState(0)\r\n    const [march, setmarch] = useState(0)\r\n    const [april, setapril] = useState(0)\r\n    const [may, setmay] = useState(0)\r\n    const [june, setjune] = useState(0)\r\n    const [july, setjuly] = useState(0)\r\n    const [august, setaugust] = useState(0)\r\n    const [september, setseptember] = useState(0)\r\n    const [october, setoctober] = useState(0)\r\n    const [november, setNovember] = useState(0)\r\n    const [december, setdecember] = useState(0)\r\n\r\n\r\n    const options = {\r\n        chart: {\r\n            type: 'bar',\r\n            height: 350\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                horizontal: false,\r\n                columnWidth: '55%',\r\n                endingShape: 'rounded'\r\n            },\r\n        },\r\n        dataLabels: {\r\n            enabled: false,\r\n\r\n        },\r\n        stroke: {\r\n            show: true,\r\n            width: 2,\r\n            colors: ['transparent'],\r\n\r\n        },\r\n        xaxis: {\r\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n        },\r\n        yaxis: {\r\n            title: {\r\n                text: ''\r\n            }\r\n        },\r\n        fill: {\r\n            opacity: 1,\r\n            colors: ['#003CFF', '#D96FF8']\r\n        },\r\n        dropShadow: {\r\n            enabled: true,\r\n            top: 0,\r\n            left: 0,\r\n            blur: 3,\r\n            opacity: 0.5\r\n        },\r\n        grid: {\r\n            row: {\r\n                colors: ['#fff']\r\n            },\r\n            column: {\r\n                colors: ['#fff']\r\n            }\r\n        },\r\n\r\n        tooltip: {\r\n            y: {\r\n                formatter: function (val) {\r\n                    return val + \" ticket\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const series = [{\r\n        name: '',\r\n        data: [\r\n            january,\r\n            february?.february,\r\n            march?.march,\r\n            april?.april,\r\n            may?.may,\r\n            june?.june,\r\n            july?.july,\r\n            august?.august,\r\n            september?.september,\r\n            october?.october,\r\n            november,\r\n            december?.december,\r\n\r\n        ]\r\n    },\r\n    ]\r\n\r\n    let totalValue;\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        axios.get(API_PATH + 'ticket/v1/list?start_date=' + currYear() + '-01-01' + '&end_date=' + currYear() + '-01-31', {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res => {\r\n                setjanuary({january: res.data?.count})\r\n            })\r\n            .catch(err => {\r\n                // console.log(err)\r\n            })\r\n\r\n\r\n        axios.get(API_PATH + 'ticket/v1/list?start_date=' + currYear() + '-02-01' + '&end_date=' + currYear() + '-02-28', {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res => {\r\n                setfebruary({february: res.data?.count})\r\n            })\r\n            .catch(err => {\r\n                // console.log(err)\r\n            })\r\n\r\n\r\n        axios.get(API_PATH + 'ticket/v1/list?start_date=' + currYear() + '-03-01' + '&end_date=' + currYear() + '-03-31', {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res => {\r\n                setmarch({march: res.data?.count})\r\n            })\r\n            .catch(err => {\r\n                // console.log(err)\r\n            })\r\n\r\n\r\n        axios.get(API_PATH + 'ticket/v1/list?start_date=' + currYear() + '-04-01' + '&end_date=' + currYear() + '-04-30', {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res => {\r\n                setapril({april: res.data?.count})\r\n            })\r\n            .catch(err => {\r\n                // console.log(err)\r\n            })\r\n\r\n\r\n        axios.get(API_PATH + 'ticket/v1/list?start_date=' + currYear() + '-05-01' + '&end_date=' + currYear() + '-05-31', {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res => {\r\n                setmay({may: res.data?.count})\r\n            })\r\n            .catch(err => {\r\n                // console.log(err)\r\n            })\r\n\r\n\r\n        axios.get(API_PATH + 'ticket/v1/list?start_date=' + currYear() + '-06-01' + '&end_date=' + currYear() + '-06-30', {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res => {\r\n                setjune({june: res.data?.count})\r\n            })\r\n            .catch(err => {\r\n                // console.log(err)\r\n            })\r\n\r\n\r\n        axios.get(API_PATH + 'ticket/v1/list?start_date=' + currYear() + '-07-01' + '&end_date=' + currYear() + '-07-31', {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res => {\r\n                setjuly({july: res.data?.count})\r\n            })\r\n            .catch(err => {\r\n                // console.log(err)\r\n            })\r\n\r\n\r\n        axios.get(API_PATH + 'ticket/v1/list?start_date=' + currYear() + '-08-01' + '&end_date=' + currYear() + '-08-31', {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res => {\r\n                setaugust({august: res.data?.count})\r\n            })\r\n            .catch(err => {\r\n                // console.log(err)\r\n            })\r\n\r\n\r\n        axios.get(API_PATH + 'ticket/v1/list?start_date=' + currYear() + '-09-01' + '&end_date=' + currYear() + '-09-30', {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res => {\r\n                setseptember({september: res.data?.count})\r\n            })\r\n            .catch(err => {\r\n                // console.log(err)\r\n            })\r\n\r\n\r\n        axios.get(API_PATH + 'ticket/v1/list?start_date=' + currYear() + '-10-01' + '&end_date=' + currYear() + '-10-31', {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res => {\r\n                setoctober({october: res.data?.count})\r\n            })\r\n            .catch(err => {\r\n                // console.log(err)\r\n            })\r\n\r\n\r\n        axios.get(API_PATH + 'ticket/v1/list?start_date=' + currYear() + '-12-01' + '&end_date=' + currYear() + '-12-31', {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res => {\r\n                setdecember({december: res.data?.count})\r\n            })\r\n            .catch(err => {\r\n                // console.log(err)\r\n            })\r\n\r\n\r\n        axios.get(API_PATH + 'ticket/v1/list?start_date=' + currYear() + '-11-01' + '&end_date=' + currYear() + '-11-30', {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res => {\r\n\r\n\r\n                // setState(state.november: res.data.count)\r\n                setNovember(res.data?.count)\r\n            })\r\n            .catch(err => {\r\n                // console.log(err)\r\n            })\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    totalValue = (january > 0 ? january : 0) + (february > 0 ? february : 0) +\r\n        (march > 0 ? march : 0) + (april > 0 ? april : 0) + (may > 0 ? may : 0) +\r\n        (june > 0 ? june : 0) + (july > 0 ? july : 0) + (august > 0 ? august : 0) +\r\n        (september > 0 ? september : 0) + (october > 0 ? october : 0) + (november > 0 ? november : 0) +\r\n        (december > 0 ? december : 0)\r\n\r\n\r\n    return (\r\n        <div id=\"chart\">\r\n\r\n\r\n            <h3 className=\"d-flex justify-content-between pr-5\">\r\n\r\n\r\n                <span> Tickets statistics</span>\r\n\r\n\r\n             <span>\r\n                    <span> Total: {totalValue}</span>\r\n                    <ExportToExcel  apiData={data} fileName={fileName}/>\r\n             </span>\r\n\r\n            </h3>\r\n            <ReactApexChart options={options} series={series} type=\"bar\" height={350}/>\r\n        </div>\r\n\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Test","import React from 'react';\nimport SubNavbarMenu from \"../component/SubNavbarMenu\";\nimport AccountNavbar from \"../component/AccountNavbar\";\nimport PieChart from \"./Report/PieChart\";\nimport RadialBars from \"./Report/RadialBars\";\nimport Permission from \"./Report/Permission\";\nimport Priority from \"./Report/Priority\";\nimport Test from \"./Report/Test\";\n\n\nconst Report = () => {\n\n\n\n    return (\n\n\n\n\n\n\n\n            <div className='report'>\n                <div className=\"all-tickets-navbar\">\n\n                    <div className=\"all-tickets-navbar-child\">\n                        <h1>Report</h1>\n                        <AccountNavbar />\n                    </div>\n                </div>\n\n                <SubNavbarMenu/>\n\n\n\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <div className=\"chart-pair\">\n                            <PieChart />\n                        </div>\n                    </div>\n\n                    <div className=\"col-md-8\">\n                        <div className=\"chart-pair-column\">\n                            {/*<ColumnChart/>*/}\n                            <Test/>\n                        </div>\n                    </div>\n                </div>\n\n\n\n\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <div className=\"radial-bars\">\n                            <RadialBars/>\n                        </div>\n                    </div>\n                    <div className=\"col-md-3\">\n\n                        <Permission/>\n                    </div>\n                    <div className=\"col-md-5\">\n                        <Priority/>\n\n                    </div>\n                </div>\n            </div>\n\n\n    );\n};\n\nexport default Report;","import React, {useEffect} from 'react';\nimport AccountNavbar from \"./AccountNavbar\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport {AvForm, AvField} from 'availity-reactstrap-validation'\nimport {connect} from \"react-redux\";\nimport {changePasswordForSend, getInfoAccount, saveFile, updateUserInfo} from \"../redux/action/createAgentAction\";\nimport {getActiveTeamList} from \"../redux/action/CreateTeamAction\";\nimport {ClosedStatusCount, getAllTicket, OpenStatusCount, PendingStatusCount} from \"../redux/action/TicketsAction\";\nimport {getText} from \"../locales\";\n\nconst InfoAccount = (props) => {\n\n\n    useEffect(() => {\n        // props.getInfoAccount()\n        props.getActiveTeamList()\n        props.OpenStatusCount()\n        props.ClosedStatusCount()\n        props.PendingStatusCount()\n        props.getAllTicket()\n    }, [])\n\n\n    const sendChangePassword = () => {\n        props.changePasswordForSend(props.getAccount.email, props.history)\n\n    }\n\n\n    const savePhoto = (e) => {\n        // console.log(e.target.files[0])\n        props.saveFile(e.target.files[0], props.getAccount.id);\n    }\n\n\n    const updateUser = (event, value) => {\n\n        props.updateUserInfo(value, props.getAccount.id)\n    }\n\n    let history = useHistory();\n\n    return (\n        <div className=\"info-account w-100\">\n            <div className=\"all-tickets-navbar\">\n\n                <div className=\"all-tickets-navbar-child\">\n                    <button onClick={() => history.goBack()} className='bg-transparent arrow-left-back'><img\n                        src=\"/img/icon/arrowleft.png\" alt=\"back img\"/>{getText(\"NewTicket11\")}</button>\n                    <h1>{getText(\"infoAccount6\")}</h1>\n                    <AccountNavbar/>\n                </div>\n            </div>\n\n\n            <div className=\"row w-100\">\n                <div className=\"col-md-3\">\n\n\n                    <div className=\"account-img\">\n                        <img src={props.getAccount.image} alt=\"\"/>\n\n                        <span>{props.getAccount.role_name}</span>\n                    </div>\n\n                    <h3>{props.getAccount.full_name}</h3>\n                    <p>{props.getAccount.email}</p>\n\n\n                    <div className=\"count-tickets\">\n                        <h4>\n                            <span>  {props.AllCount.count ? props.AllCount.count : \"0\"}</span>\n                            <span>{getText(\"SideBarMenus3\")}</span>\n                        </h4>\n\n                        <h4>\n\n                            <span>  {props.ClosedCount.count ? props.ClosedCount.count : \"0\"}</span>\n                            <span>{getText(\"SideBarMenus4\")}</span>\n                        </h4>\n\n                        <h4>\n                            <span>  {props.openCount.count ? props.openCount.count : \"0\"}</span>\n                            <span>{getText(\"SideBarMenus6\")}</span>\n                        </h4>\n                    </div>\n\n\n                    <AvForm>\n\n\n                        <h3 className=\"mb-3\">{getText(\"infoAccount\")}</h3>\n\n                        <AvField type=\"file\"\n                                 id=\"file\"\n                                 onChange={savePhoto}\n                                 name=\"image\"\n\n                        />\n\n\n                    </AvForm>\n\n\n                    {/*<button className=\"delete-avatar-btn\">*/}\n                    {/*    Delete Avatar*/}\n                    {/*</button>*/}\n\n\n                    <img src=\"/img/Border.png\" className='img-top-border' alt=\"\"/>\n                </div>\n\n                <div className=\"col-md-7\">\n\n\n                    <AvForm onValidSubmit={updateUser}>\n                        <h3>{getText(\"infoAccount2\")}</h3>\n                        <div className=\"row-for-input\">\n                            <AvField\n                                name=\"full_name\"\n                                placeholder={getText(\"infoAccount10\")}\n                                disabled={props.getAccount.role == 0 ? false : true}\n                                value={props.getAccount.full_name}\n                            />\n\n\n                        </div>\n\n\n                        <h3>{getText(\"infoAccount7\")}</h3>\n                        <div className=\"row-for-input for-email\">\n                            {/*<img src=\"/img/icon/envelope.png\" alt=\"\"/>*/}\n                            {/*<AvField*/}\n\n                            {/*    name=\"email\"*/}\n                            {/*    placeholder=\"E-mail\"*/}\n                            {/*    value={props.getAccount.email}*/}\n                            {/*/>*/}\n\n                            <AvField\n                                name=\"phone\"\n                                placeholder={getText(\"NewTicket4\")}\n                                disabled={props.getAccount.role == 0 ? false : true}\n                                value={props.getAccount.phone}\n                            />\n\n                        </div>\n\n\n                        <h3>{getText(\"infoAccount3\")}</h3>\n                        <div className=\"row-for-input\">\n                            <AvField type=\"select\" name=\"team\" disabled={props.getAccount.role == 0 ? false : true}\n                                     classname=\"select-style\">\n\n                                {\n                                    props.activeAgentslList\n                                        ?\n                                        props.activeAgentslList.map(item =>\n                                            (\n                                                <option>{item.name}</option>\n\n                                            )\n                                        )\n                                        :\n                                        \"\"\n                                }\n\n\n                            </AvField>\n\n\n                        </div>\n\n\n                        <h3>\n                            {getText(\"infoAccount8\")}\n                        </h3>\n\n\n                        <div className=\"row-for-input\">\n\n\n                        </div>\n\n\n                        <div className=\"create-button-group\">\n\n                            <div>\n                                {\n                                    props.getAccount.role === \"Admin\"\n                                        ?\n\n                                        <button type='submit' className=\"btn\">\n                                            {getText(\"infoAccount4\")}\n                                        </button>\n\n                                        :\n                                        ''\n                                }\n\n\n                                <button onClick={sendChangePassword} className=\"change-password-btn btn ml-3\">\n                                    {getText(\"infoAccount9\")}\n                                </button>\n\n                            </div>\n\n                            <Link to='/agents'>{getText(\"infoAccount5\")}</Link>\n\n                        </div>\n\n\n                    </AvForm>\n\n\n                    <img src=\"/img/Divider.png\" className='img-bottom-border' alt=\"\"/>\n\n\n                </div>\n                <div className=\"col-md-2\">\n\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\nconst mapStateToProps = (state) => {\n    return {\n\n        getAccount: state.createAgentData.getAccount,\n        activeAgentslList: state.createTeamData.activeAgentslList,\n        openCount: state.ticketData.openCount,\n        ClosedCount: state.ticketData.ClosedCount,\n        AllCount: state.ticketData.AllCount,\n\n    }\n}\n\nexport default connect(mapStateToProps, {\n    getInfoAccount,\n    saveFile,\n    OpenStatusCount,\n    PendingStatusCount,\n    getAllTicket,\n    ClosedStatusCount,\n    updateUserInfo,\n    getActiveTeamList,\n    changePasswordForSend\n})(InfoAccount);","import React, {useEffect, useState} from 'react';\nimport {Link, useHistory} from \"react-router-dom\";\nimport AccountNavbar from \"../../component/AccountNavbar\";\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\nimport {MultiSelectComponent} from '@syncfusion/ej2-react-dropdowns';\nimport {connect} from \"react-redux\";\nimport {getActiveTeamList, updateState} from \"../../redux/action/CreateTeamAction\";\nimport {getStatusList, createTIcket} from \"../../redux/action/TicketsAction\";\nimport {getAllAgents} from \"../../redux/action/createAgentAction\";\nimport {getText} from \"../../locales\";\nimport NumberFormat from 'react-number-format';\n\n\nconst NewTicket = (props) => {\n\n\n    const [maskNumber, setMaskNumber] = useState(null)\n\n    useEffect(() => {\n        props.getActiveTeamList()\n        props.getStatusList()\n        props.getAllAgents()\n\n\n\n\n\n    }, [])\n    const ticketForm = (events, values) => {\n        props.createTIcket(values, props.history, maskNumber)\n    }\n\n\n    const selectTeam = (data) => {\n        // props.updateState({selectTeamReducer: data})\n        // console.log(data.target.value)\n        // console.log(props.getAllAgentsList)\n        // console.log(props.activeAgentslList)\n        props.updateState({getAllAgentsList: props.activeAgentslList.filter(item => item.id == data.target.value)[0].agents})\n\n        // props.activeAgentslList.filter(item => )\n    }\n\n\n\n    let history = useHistory();\n\n    return (\n        <div className='new-ticket-create-page w-100'>\n            <div className=\"all-tickets-navbar\">\n\n                <div className=\"all-tickets-navbar-child\">\n                    <button onClick={() => history.goBack()} className='bg-transparent arrow-left-back'><img\n                        src=\"/img/icon/arrowleft.png\" alt=\"back img\"/>{getText(\"NewTicket11\")}\n                    </button>\n                    <h1>{getText(\"NewTicket\")}</h1>\n                    <AccountNavbar/>\n\n\n                </div>\n            </div>\n\n\n            <AvForm className=\"create-team-inputs\" onValidSubmit={ticketForm}>\n\n\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <h3>{getText(\"NewTicket2\")}</h3>\n                        <AvField type=\"text\" name=\"subject\" required className=\"form-control\" placeholder={getText(\"NewTicket2\")}/>\n                    </div>\n                    <div className=\"col-md-6\">\n                        <h3>{getText(\"Type\")}</h3>\n                        <AvField  type=\"select\" name='from_where' required>\n\n                            <option value=\"0\" selected>Incoming</option>\n                            <option value=\"1\">Outgoing</option>\n                            <option value=\"3\">Social Media</option>\n\n                        </AvField>\n\n                    </div>\n\n                </div>\n\n                <div className=\"row\">\n\n                    <div className=\"col-md-6\">\n                        <h3>{getText(\"NewTicket3\")}</h3>\n\n                        <AvField type=\"text\" name=\"client_full_name\" className=\"form-control\" required\n                                 placeholder={getText(\"NewTicket3\")}/>\n\n                    </div>\n                    <div className=\"col-md-6\">\n                        <h3>{getText(\"NewTicket4\")}</h3>\n\n                        <AvField   id='numberInput'  value=\"+998\" type=\"text\" name=\"client_phone_number\"\n                                 className=\"form-control\" required placeholder={getText(\"NewTicket4\")}/>\n\n                        {/*<NumberFormat format=\"+998 (##) ###-##-##\"  className=\"form-control\"  name=\"client_phone_number\" onChange={(e) => setMaskNumber(e.target.value) }  allowEmptyFormatting mask=\"_\" />*/}\n\n                    </div>\n                </div>\n\n                <div className=\"row\">\n\n                    <div className=\"col-md-6\">\n                        <h3>{getText(\"NewTicket5\")}</h3>\n\n                        <div className=\"multi-select2\">\n                            <AvField onChange={selectTeam} type=\"select\" name='team' required>\n\n                                <option value=\"0\"></option>\n\n                                {\n                                    props.activeAgentslList.map(item => (\n                                        <option value={item.id}>{item.name}</option>\n                                    ))\n                                }\n\n\n                                {/*<MultiSelectComponent  id=\"mtselement\" fields={fields} dataSource={posts}*/}\n                                {/*                      placeholder=\"Select a team\"/>*/}\n\n                            </AvField>\n\n                        </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                        <h3>{getText(\"NewTicket6\")}</h3>\n                        <div className=\"multi-select\">\n                            <img src=\"/img/icon/account3.png\" className=\"select-img-account\" alt=\"account\"/>\n                            <AvField name=\"receiver\" type=\"select\" className=\"pl-5\" required>\n\n\n                                <option value=\"0\"></option>\n                                {\n                                    props.getAllAgentsList.map(item => (\n                                        <option value={item.id}>{item.full_name}</option>\n                                    ))\n                                }\n\n\n                            </AvField>\n\n\n                            {/*<img src=\"/img/icon/down.png\" className=\"select-img-down\" alt=\"account\"/>*/}\n\n                        </div>\n                    </div>\n                </div>\n\n\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <h3>{getText(\"NewTicket7\")}</h3>\n\n                        <div className=\"multi-select2\">\n\n                            {/*<img src=\"/img/icon/down.png\" className=\"select-img-down\" alt=\"account\"/>*/}\n\n                            <AvField name=\"ticket_status\" type=\"select\" required>\n                                <option value=\"0\"></option>\n                                {\n                                    props.ticketStatusList.map(item => (\n                                        <option value={item.id}>{item.name}</option>\n                                    ))\n                                }\n                                {/*<MultiSelectComponent id=\"mtselement\"  fields={fields} dataSource={posts}*/}\n                                {/*                      placeholder=\"Priority\"/>*/}\n                            </AvField>\n                        </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                        <h3>{getText(\"NewTicket8\")}</h3>\n\n                        <div className=\"multi-select2\">\n\n                            <AvField name=\"priority\" type=\"select\" required>\n\n\n                                <option></option>\n                                <option value=\"2\">Urgent</option>\n                                <option value=\"1\">High</option>\n                                <option value=\"0\">Medium</option>\n                                <option value=\"-1\">low</option>\n                                <option value=\"-2\">Very low</option>\n\n                            </AvField>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <AvField\n                            type='textarea'\n                            name=\"content\"\n\n                            style={{height: '200px'}}\n                            required\n                        />\n                    </div>\n                </div>\n                <div className=\"create-button-group\">\n                    <Link to='/agents'>{getText(\"NewTicket9\")}</Link>\n\n\n                    <button className=\"btn\">\n                        {getText(\"NewTicket10\")}\n                        <img src=\"/img/icon/rightArrow.png\" alt=\"\"/>\n                    </button>\n                </div>\n            </AvForm>\n\n\n        </div>\n    );\n};\n\n\nconst mapStateToProps = (state) => {\n    return {\n        activeAgentslList: state.createTeamData.activeAgentslList,\n        getAllAgentsList: state.createAgentData.getAllAgentsList,\n        ticketStatusList: state.ticketData.ticketStatusList,\n    }\n}\nexport default connect(mapStateToProps, {\n    createTIcket,\n    getAllAgents,\n    updateState,\n    getActiveTeamList,\n    getStatusList\n})(NewTicket);","import React, {useEffect} from 'react';\nimport {API_PATH} from \"../tools/constants\";\nimport axios from \"axios\";\nimport {toast} from \"react-toastify\";\n\nconst Verified = (props) => {\n\n\n        useEffect(()=> {\n                const query = new URLSearchParams(props.location.search);\n                const token = query.get('token')\n\n\n                axios.get(API_PATH + \"user/v1/verify-email/?token=\" + token, )\n                    .then(res =>{\n\n                            res.success ? toast.error(\"failed\") : toast.success(\"success\")\n\n\n                        props.history.push('/')\n                    })\n                    .catch(err =>{\n                            console.log(err)\n                    })\n\n\n        }, [])\n    return (\n        <div className=\"w-100 \">\n\n\n            <h1 className=\"mt-5 text-center w-100 justify-content-center text-primary\">Email successfully verified</h1>\n        </div>\n    );\n};\n\nexport default Verified;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst NotFound = () => {\n    return (\n        <div>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-4 offset-4 my-5 text-center\">\n\n\n                        <h4>Bunday sahifa mavjud emas!</h4>\n\n                        <Link to='/'>Bosh sahifaga o'tish</Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default NotFound;","import React from 'react';\nimport {TOKEN_NAME} from \"../tools/constants\";\nimport {Route, Redirect} from 'react-router-dom'\nimport NotFound from \"./NotFound\";\nconst PrivateRoute = (props) => {\n    return (\n        localStorage.getItem(TOKEN_NAME) ?\n            <Route component={props.component} path={props.path} exact={props.exact}/>\n            : <Route component={NotFound}/>\n        // : <Redirect to=\"/login\"/>\n    );\n};\n\nexport default PrivateRoute;","import React, {useEffect, useState} from 'react';\nimport {Link, NavLink} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {\n    filterStatusFunction,\n    getAllTicket, getAllTicketForSearch,\n    getAllTicketToHandle,\n    getMyOpenTicket,\n    getStatusList, getTicketsSevenDays, updateState\n} from \"../redux/action/TicketsAction\";\nimport axios from \"axios\";\nimport {API_PATH, TOKEN_NAME} from \"../tools/constants\";\nimport {getText} from \"../locales\";\n\n\nconst SideBarMenus = (props) => {\n\n\n    var date = new Date();\n    date.setDate(date.getDate() - 7);\n\n    var finalDate = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\n\n\n    let currentDate = new Date()\n    let day = currentDate.getDate()\n    let month = currentDate.getMonth() + 1\n    let year = currentDate.getFullYear()\n    let today = year + \"-\" + month + \"-\" + day\n    const [pathSearch , setPathSearch] = useState(false)\n    const [pathSearch2 , setPathSearch2] = useState(false)\n\n    useEffect(() => {\n        props.getStatusList()\n        props.getMyOpenTicket()\n        props.getAllTicketToHandle()\n        props.getAllTicket()\n        props.getTicketsSevenDays(finalDate, today)\n        setPathSearch( window.location.pathname == \"/tickets/all-tickets\" ? true : false)\n        setPathSearch2( window.location.pathname == \"/tickets\" ? true : false)\n    },  [])\n\n    const filterByStatus = (data) => {\n\n        props.filterStatusFunction(data)\n\n    }\n    const getAllStatusList = () => {\n        props.getAllTicket()\n    }\n    const searchTicket = (e) => {\n        props.updateState({forSerPagfilter: e.target.value})\n\n\n        e.target.value > 0 ?\n\n            props.updateState({forSerPag: true})\n            :\n            props.updateState({forSerPag: false})\n\n        axios.get(\"http://w1.citynet.uz:4440/ticket/v1/list/?q=\" + e.target.value , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n            .then(res => {\n                props.updateState({changeGetTickets2: res.data})\n\n\n\n            })\n    }\n    return (\n        <div className=\"side-bar-menus\">\n            <div className=\"side-bar-menus-child\">\n                <h1 className=\"open-sans-extra-bold\">{getText(\"SideBarMenus\")}</h1>\n                <Link to='/tickets/new-ticket' className=\"new-ticket open-sans-extra-bold\">\n                    <img src=\"/img/icon/plus.png\" alt=\"plus icon\"/>\n                    {getText(\"SideBarMenus2\")}\n                </Link>\n                {\n                    (pathSearch || pathSearch2 )?\n                        <div className=\"ticket-search \"  >\n                        <img src=\"/img/icon/loupe.png\" alt=\"\"/>\n                        <input    id=\"search\" type=\"text\"  onChange={searchTicket} placeholder={getText(\"Search\") + \"...\"}/>\n                       </div>\n                        :\n                        <div className=\"ticket-search \"  >\n                            <img src=\"/img/icon/loupe.png\" alt=\"\"/>\n                            <input    id=\"search\" type=\"text\"  disabled onChange={searchTicket} placeholder={getText(\"Search\") + \"...\"}/>\n                        </div>\n                }\n                <div className=\"menus\">\n                    <Link to=\"/tickets/all-tickets\" className=\"    w-100\">\n                        <button onClick={() => getAllStatusList()} className=\" p-0 \"><span>{getText(\"SideBarMenus3\")}</span>\n                            <span className=\"\">\n                            {\n                                props.AllCount.count\n                            }\n                        </span></button>\n\n                    </Link>\n\n\n                    <div className=\"ml-4 status-style\">\n                        {\n                            props.ticketStatusList.map(item => (\n                                <Link /* onClick={() => filterByStatus(item.name)}*/ to={\"/tickets/filter/\" + item.name}><span>{item.name}</span></Link>\n\n                            ))\n                        }\n                    </div>\n                    <Link to=\"/tickets/tickets-to-handle\"  >\n                        <span>{getText(\"SideBarMenus7\")}</span><span>\n                        {\n                            props.btc.count\n\n                        }\n                    </span></Link>\n                    <Link to=\"/tickets/open-tickets\"><span>{getText(\"SideBarMenus8\")}</span><span>\n                          {\n                              props.boc.count\n                          }\n                    </span></Link>\n\n                    <Link to=\"/tickets/last-days\"><span>{getText(\"SideBarMenus9\")}</span><span>\n                          {\n                              props.bot.count\n                          }\n                    </span></Link>\n                </div>\n            </div>\n        </div>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        ticketStatusList: state.ticketData.ticketStatusList,\n        btc: state.ticketData.btc,\n        boc: state.ticketData.boc,\n        bot: state.ticketData.bot,\n        AllCount: state.ticketData.AllCount,\n        getTicketsToHandle: state.ticketData.getTicketsToHandle,\n        getOpenTickets: state.ticketData.getOpenTickets,\n        openCount: state.ticketData.openCount,\n        PendingCount: state.ticketData.PendingCount,\n        ClosedCount: state.ticketData.ClosedCount,\n        getTickets: state.ticketData.getTickets,\n        getTickets2: state.ticketData.getTickets2,\n        changeGetTickets2: state.ticketData.changeGetTickets2,\n        forSerPag: state.ticketData.forSerPag,\n    }\n}\nexport default connect(mapStateToProps, {\n    getStatusList,\n    getTicketsSevenDays,\n    getAllTicketToHandle,\n    updateState,\n    getAllTicketForSearch,\n    getMyOpenTicket,\n    getAllTicket,\n    filterStatusFunction\n})(SideBarMenus);","import React, {useEffect, useRef, useState} from 'react';\nimport {\n    changeTicketStatus,\n    getCommit,\n    getAllTicket,\n    getStatusList,\n    changeTicketPr,\n    AllFunc,\n    allNext,\n    updateState,\n    allNextSearch, getAllTicketFilter, changeCheckPriorty, changeCheckStatus, editAllAgent, getAllTicketSortByDate, getAllTicketFilterWithAgent,\n} from \"../redux/action/TicketsAction\";\nimport {connect} from \"react-redux\";\nimport {useHistory} from \"react-router-dom\";\nimport {getAllAgents} from \"../redux/action/createAgentAction\";\nimport {Modal} from 'reactstrap';\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\nimport {getActiveTeamList} from \"../redux/action/CreateTeamAction\";\nimport {getText} from \"../locales\";\n\n\nconst MainTableForTickets = (props) => {\n    const {\n        className\n    } = props;\n    const [modal, setModal] = useState(false);\n    const [check, setCheck] = useState(false);\n    const toggle = () => setModal(!modal);\n    let history = useHistory();\n    const changeStatusFunction = (data, values) => {\n        props.changeTicketStatus(data, values)\n    }\n    const changePrFunction = (data, values) => {\n        props.changeTicketPr(data, values)\n    }\n    const visitCommit = (values, events) => {\n        props.getCommit(values, history)\n    }\n    const filterList = (data) => {\n        props.getAllTicketFilter(data)\n        props.updateState({forSerPagPriority: data})\n    }\n\n    const filterListForAgent = (data) => {\n        props.getAllTicketFilterWithAgent(data)\n        props.updateState({forSerPagPriority: data})\n    }\n\n    let pagesNumbers = []\n    for (let i = 0; i < props.changeGetTickets2.last_page; i++) {\n        pagesNumbers.push(i);\n    }\n    const removeFilter = () => {\n        props.updateState({forSerPagPriority: null})\n        props.getAllTicket()\n    }\n    const [collectState, setCollectState] = useState([])\n    const collect = (data, index, e) => {\n        if (e.target.checked) {\n            collectState.push(data)\n        } else {\n            const newList = collectState?.filter((item) => item.id !== data.id);\n            setCollectState(newList)\n        }\n    }\n    const changePriorty = (priorityId) => {\n        props.changeCheckPriorty(collectState, priorityId)\n        setCollectState([])\n    }\n    const changeCheckStatusFunction = (statusId) => {\n        props.changeCheckStatus(collectState, statusId)\n        setCollectState([])\n    }\n    const sendAgentsId = (e, value) => {\n        props.editAllAgent(collectState, value)\n    }\n    const checkEl = useRef(null);\n    useEffect(() => {\n        props.getAllTicket()\n        props.getAllAgents()\n        props.getStatusList()\n        props.getCommit()\n        props.updateState({forSerPagPriority: null})\n        props.getActiveTeamList()\n        props.getAllTicketSortByDate()\n        props.changeTicketStatus()\n\n    }, [])\n    const selectTeam = (data) => {\n        props.updateState({getAllAgentsList: props.activeAgentslList.filter(item => item.id == data.target.value)[0].agents})\n    }\n    const allChecked = (data) => {\n        setCheck(!check)\n        if (check) {\n            setCollectState(data)\n        } else {\n            setCollectState([])\n        }\n    }\n    const withData = () => {\n        let startDate = document.getElementById(\"startDate\").value\n        let endDate = document.getElementById(\"endDate\").value\n        if (startDate !== \"\" && endDate !== \"\") {\n            props.getAllTicketSortByDate(startDate, endDate)\n        } else {\n            props.getAllTicket()\n        }\n    }\n\n    return (\n        <div className='main-table-for-tickets'>\n            <div className=\"main-table-filter\">\n                <div className=\"row flex-nowrap \">\n\n                    <div className=\"w-75\">\n                        <div className=\"dropdown  mb-3 \">\n                            <button className=\"all-tickets-event dropbtn add-filter pl-3\">\n                                {getText(\"SubNavbarMenu\")}\n                                <img src=\"/img/icon/arrow.png\" alt=\"\"/>\n                            </button>\n                            <div className=\"all-tickets-event-menu dropdown-content\">\n                                {\n                                    props.ticketStatusList.map(item2 => (\n                                        <button\n                                            onClick={() => changeCheckStatusFunction(item2.id)}>{item2.name}</button>\n                                    ))\n                                }\n                            </div>\n                        </div>\n                        <div className=\"dropdown\">\n                            <button className=\"all-tickets-event dropbtn add-filter pl-3 ml-3\">\n                                {getText(\"SubNavbarMenu2\")}\n                                <img src=\"/img/icon/arrow.png\" alt=\"\"/>\n                            </button>\n                            <div className=\"all-tickets-event-menu dropdown-content\">\n                                <button onClick={() => changePriorty(2)}>\n                                    <img src=\"/img/icon/fast.png\"\n                                         className=\"mr-2\"\n                                         alt=\"\"/> {getText(\"SubNavbarMenu10\")}\n                                </button>\n                                <button onClick={() => changePriorty(1)}><img src=\"/img/icon/open.png\"\n                                                                              className=\"mr-2\"\n                                                                              alt=\"\"/> {getText(\"SubNavbarMenu11\")}\n                                </button>\n                                <button onClick={() => changePriorty(0)}><img src=\"/img/icon/onHold.png\"\n                                                                              className=\"mr-2\"\n                                                                              alt=\"\"/> {getText(\"SubNavbarMenu12\")}\n                                </button>\n                                <button onClick={() => changePriorty(-1)}><img src=\"/img/icon/close.png\"\n                                                                               className=\"mr-2\"\n                                                                               alt=\"\"/> {getText(\"SubNavbarMenu13\")}\n                                </button>\n                                <button onClick={() => changePriorty(-2)}><img src=\"/img/icon/pw.png\"\n                                                                               className=\"mr-2\"\n                                                                               alt=\"\"/> {getText(\"SubNavbarMenu14\")}\n                                </button>\n                            </div>\n                        </div>\n                        <button className=\"all-tickets-event dropbtn add-filter pl-4 ml-3 pt-2  pr-4\"\n                                onClick={() => toggle()}> {getText(\"SubNavbarMenu3\")}</button>\n                        <div className=\"dropdown\">\n                            <input id=\"startDate\" onChange={withData} className=\"date-picker-simple ml-3\" type=\"date\"/>\n                            <input id=\"endDate\" onChange={withData} className=\"date-picker-simple ml-3 mr-2\" type=\"date\"/>\n                        </div>\n\n\n\n                        <div className=\"dropdown\">\n                            <button className=\"all-tickets-event dropbtn add-filter \">\n                                <img src=\"/img/icon/filt.svg\" alt=\"\"/>\n                                {getText(\"SubNavbarMenu7\")}\n                                <img src=\"/img/icon/arrow.png\" alt=\"\"/>\n                            </button>\n                            <div className=\"all-tickets-event-menu dropdown-content\" style={{width: \"200px\"}}>\n\n                                {\n                                    props.getAllAgentsList?.map(item => (\n                                        <button onClick={() => filterListForAgent(item.email)}>\n                                            {item.full_name}\n                                        </button>\n                                    ))\n                                }\n                            </div>\n                        </div>\n\n                    </div>\n\n                    <div className=\"d-flex position-relative  w-25\">\n                        <div className=\"d-flex position-absolute\" style={{right: \"10px\", top: \"5px\"}}>\n\n                            {\n\n                                props.forSerPagPriority === 2 ?\n                                    <button onClick={() => removeFilter()}\n                                            className=\"prFilter\">{getText(\"SubNavbarMenu10\")}<img\n                                        src=\"/img/icon/x.svg\" alt=\"\"/></button>\n                                    : props.forSerPagPriority === 1 ?\n                                    <button onClick={() => removeFilter()}\n                                            className=\"prFilter\">{getText(\"SubNavbarMenu11\")} <img\n                                        src=\"/img/icon/x.svg\" alt=\"\"/></button>\n                                    : props.forSerPagPriority === 0 ?\n                                        <button onClick={() => removeFilter()}\n                                                className=\"prFilter\">{getText(\"SubNavbarMenu12\")} <img\n                                            src=\"/img/icon/x.svg\" alt=\"\"/></button>\n                                        : props.forSerPagPriority === -1 ?\n                                            <button onClick={() => removeFilter()}\n                                                    className=\"prFilter\">{getText(\"SubNavbarMenu13\")} <img\n                                                src=\"/img/icon/x.svg\" alt=\"\"/></button>\n                                            : props.forSerPagPriority === -2 ?\n                                                <button onClick={() => removeFilter()}\n                                                        className=\"prFilter\">{getText(\"SubNavbarMenu14\")}<img\n                                                    src=\"/img/icon/x.svg\" alt=\"\"/></button>\n\n\n                                                :\n                                                ''\n                            }\n                        </div>\n                        <div className=\"dropdown\">\n                            <button className=\"all-tickets-event dropbtn add-filter \">\n                                <img src=\"/img/icon/filt.svg\" alt=\"\"/>\n                                {getText(\"SubNavbarMenu4\")}\n\n                                <img src=\"/img/icon/arrow.png\" alt=\"\"/>\n                            </button>\n                            <div className=\"all-tickets-event-menu dropdown-content\">\n                                {/*<img src=\"/img/icon/Divider.png\" alt=\"\"/>*/}\n                                <button onClick={() => filterList(2)}>\n                                    <img src=\"/img/icon/fast.png\"\n                                         className=\"mr-2\"\n                                         alt=\"\"/> {getText(\"SubNavbarMenu10\")}\n                                </button>\n                                <button onClick={() => filterList(1)}><img src=\"/img/icon/open.png\"\n                                                                           className=\"mr-2\"\n                                                                           alt=\"\"/> {getText(\"SubNavbarMenu11\")}\n                                </button>\n                                <button onClick={() => filterList(0)}><img src=\"/img/icon/onHold.png\"\n                                                                           className=\"mr-2\"\n                                                                           alt=\"\"/>{getText(\"SubNavbarMenu12\")}\n                                </button>\n                                <button onClick={() => filterList(-1)}><img src=\"/img/icon/close.png\"\n                                                                            className=\"mr-2\"\n                                                                            alt=\"\"/> {getText(\"SubNavbarMenu13\")}\n                                </button>\n                                <button onClick={() => filterList(-2)}><img src=\"/img/icon/pw.png\"\n                                                                            className=\"mr-2\"\n                                                                            alt=\"\"/> {getText(\"SubNavbarMenu14\")}\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <table>\n                <thead>\n                <tr className=\"main-table-header\">\n                    <th></th>\n                    <th>\n                        {getText(\"SubNavbarMenu5\")}\n                    </th>\n                    <th>\n                        {getText(\"SubNavbarMenu0\")}\n                    </th>\n                    <th>\n                        {getText(\"SubNavbarMenu6\")}\n                    </th>\n                    <th>\n                        {getText(\"SubNavbarMenu7\")}\n                    </th>\n                    <th>\n                        {getText(\"SubNavbarMenu8\")}\n                    </th>\n                    <th>\n                        {getText(\"SubNavbarMenu9\")}\n                    </th>\n                    <th>\n                    </th>\n                    <th></th>\n                </tr>\n\n                </thead>\n                <tbody>\n                {\n\n                    props.changeGetTickets2.data?.map((item, index) => (\n                            <tr key={index}>\n                                <td>\n                                    <input ref={checkEl} onClick={(e) => collect(item, index, e)} type=\"checkbox\"/>\n                                </td>\n                                <td className=\"requester-name\" onClick={() => visitCommit(item.id)}\n                                    style={{cursor: \"pointer\"}}>\n                                    <h4>{item.client_full_name}</h4>\n                                    <span>{item.sender_name}</span>\n                                </td>\n                                <td>\n                                    {item.client_phone_number}\n                                </td>\n                                <td className=\"subject-name\">\n                                    {item.priority === 1 ? <img src=\"/img/icon/open.png\" alt=\"\"/> : item.priority === 2 ?\n                                        <img src=\"/img/icon/fast.png\" alt=\"\"/> :\n                                        item.priority === 0 ?\n                                            <img src=\"/img/icon/onHold.png\" alt=\"\"/> : item.priority === -1 ?\n                                            <img src=\"/img/icon/close.png\" alt=\"\"/> : item.priority === -2 ?\n                                                <img src=\"/img/icon/pw.png\" alt=\"\"/> : ''}\n                                    {\" \" + item.subject.length > 20 ? item.subject.slice(0, 20) + \"...\" : item.subject}\n                                </td>\n                                <td>\n                                    {item.receiver_name}\n                                </td>\n                                <td><span\n                                    className={item.ticket_status_name === \"Open\" ?\n                                        \"open\" : item.ticket_status_name === \"Closed\" ?\n                                            \"closed\" : item.ticket_status_name === \"Pending\" ?\n                                                \"pending\" : \"\"}>\n                                {item.ticket_status_name}\n                    </span>\n                                </td>\n                                <td>\n                                    <h4 style={{\n                                        fontSize: \"14px\",\n                                        marginBottom: \"0\"\n                                    }}>   {item.date_created.slice(11, 16)} </h4>\n                                    <span style={{\n                                        color: \"#8E8C94\",\n                                        fontSize: \"12px\"\n                                    }}> {item.date_created.slice(0, 10)}</span>\n                                </td>\n                                <td className=\"all-tickets-event-menu-father dropdown\">\n                                    <button className=\"all-tickets-event dropbtn\">\n                                        <img src=\"/img/icon/verDots.png\" alt=\"\"/>\n                                    </button>\n                                    <div className=\"all-tickets-event-menu dropdown-content\">\n                                        {\n                                            props.ticketStatusList.map(item2 => (\n                                                <button\n                                                    onClick={() => changeStatusFunction(item.id, item2.id)}>{item2.name}</button>\n                                            ))\n                                        }\n                                        <img src=\"/img/icon/Divider.png\" alt=\"\"/>\n                                        <button onClick={() => changePrFunction(item.id, 2)}><img src=\"/img/icon/fast.png\"\n                                                                                                  className=\"mr-2\"\n                                                                                                  alt=\"\"/> {getText(\"SubNavbarMenu10\")}\n                                        </button>\n                                        <button onClick={() => changePrFunction(item.id, 1)}><img src=\"/img/icon/open.png\"\n                                                                                                  className=\"mr-2\"\n                                                                                                  alt=\"\"/> {getText(\"SubNavbarMenu11\")}\n                                        </button>\n                                        <button onClick={() => changePrFunction(item.id, 0)}><img src=\"/img/icon/onHold.png\"\n                                                                                                  className=\"mr-2\"\n                                                                                                  alt=\"\"/> {getText(\"SubNavbarMenu12\")}\n                                        </button>\n                                        <button onClick={() => changePrFunction(item.id, -1)}><img src=\"/img/icon/close.png\"\n                                                                                                   className=\"mr-2\"\n                                                                                                   alt=\"\"/> {getText(\"SubNavbarMenu13\")}\n                                        </button>\n                                        <button onClick={() => changePrFunction(item.id, -2)}><img src=\"/img/icon/pw.png\"\n                                                                                                   className=\"mr-2\"\n                                                                                                   alt=\"\"/> {getText(\"SubNavbarMenu14\")}\n                                        </button>\n                                    </div>\n                                </td>\n                            </tr>\n                        )\n                    )\n                }\n\n                </tbody>\n            </table>\n            {\n                props.changeGetTickets2 ? props.changeGetTickets2.last_page > 1 ?\n                    <ul className=\"pageNumbersManual d-flex    \">\n                        <li className=\"arrow\">\n                            <button onClick={() => props.AllFunc(props.changeGetTickets2?.previous)}><img\n                                src=\"/img/icon/left.svg\" alt=\"\"/></button>\n                        </li>\n                        {\n                            props.forSerPag ?\n                                pagesNumbers.map(item => (\n                                    <button\n                                        className={\"numbers\" + (props.pActive ? props.pActive === item + 1 ? \" selected\" : \" \" : \"\")}\n                                        onClick={() => props.allNextSearch(item + 1, props.forSerPagfilter, props.forSerPagPriority)}>\n                                        {item + 1}\n                                    </button>\n                                ))\n                                :\n                                pagesNumbers.map(item => (\n                                    <button\n                                        className={\"numbers\" + (props.pActive ? props.pActive === item + 1 ? \" selected\" : \" \" : \"\")}\n                                        onClick={() => props.allNext(item + 1, props.forSerPagfilter)}>\n                                        {item + 1}\n                                    </button>\n                                ))\n                        }\n                        <li className=\"arrow\">\n                            <button onClick={() => props.AllFunc(props.changeGetTickets2?.next)}><img\n                                src=\"/img/icon/right.svg\" alt=\"\"/></button>\n                        </li>\n                    </ul>\n                    :\n                    \"\"\n                    :\n                    \"\"\n            }\n            <Modal isOpen={modal} fade={false} toggle={toggle} className={className}>\n\n                <div className=\"p-5 changeAgentDiv\">\n                    <AvForm onValidSubmit={sendAgentsId}>\n                        <button onClick={() => setModal(!modal)} className=\"close \">&#x2715;</button>\n                        <h3>{getText(\"Agents7\")}</h3>\n                        <AvField onChange={selectTeam} className=\"form-control\" type=\"select\" name='team'>\n\n                            <option value=\"0\" hidden></option>\n\n                            {\n                                props.activeAgentslList.map(item => (\n                                    <option value={item.id}>{item.name}</option>\n                                ))\n                            }\n\n\n                            {/*<MultiSelectComponent  id=\"mtselement\" fields={fields} dataSource={posts}*/}\n                            {/*                      placeholder=\"Select a team\"/>*/}\n\n                        </AvField>\n\n                        <h3 className=\"pt-3\">{getText(\"Commit7\")}</h3>\n                        <AvField name=\"receiver\" className=\"form-control\" type=\"select\">\n\n\n                            <option value=\"0\" hidden></option>\n                            {\n                                props.getAllAgentsList.map(item => (\n                                    <option value={item.id}>{item.full_name}</option>\n                                ))\n                            }\n\n\n                        </AvField>\n\n\n                        <div className=\"w-100 d-flex justify-content-end mt-5\">\n                            <button className=\"changeAgentBtn\" onClick={() => setModal(!modal)}>Change agent</button>\n\n                        </div>\n\n                    </AvForm>\n                </div>\n            </Modal>\n        </div>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        getTickets: state.ticketData.getTickets,\n        getTickets2: state.ticketData.getTickets2,\n        changeGetTickets2: state.ticketData.changeGetTickets2,\n        getTicketsSearch: state.ticketData.getTicketsSearch,\n        AllCount: state.ticketData.AllCount,\n        ticketStatusList: state.ticketData.ticketStatusList,\n        pageIndex: state.ticketData.pageIndex,\n        pActive: state.ticketData.pActive,\n        forSerPag: state.ticketData.forSerPag,\n        forSerPagfilter: state.ticketData.forSerPagfilter,\n        forSerPagPriority: state.ticketData.forSerPagPriority,\n        getAllAgentsList: state.createAgentData.getAllAgentsList,\n        activeAgentslList: state.createTeamData.activeAgentslList,\n    }\n}\n\nexport default connect(mapStateToProps, {\n    getAllTicket,\n    changeTicketPr,\n    getAllAgents,\n    changeCheckPriorty,\n    changeCheckStatus,\n    getCommit,\n    getAllTicketFilter,\n    AllFunc,\n    allNext,\n    getActiveTeamList,\n    editAllAgent,\n    getAllTicketSortByDate,\n    allNextSearch,\n    changeTicketStatus,\n    getStatusList,\n    updateState,\n    getAllTicketFilterWithAgent\n})(MainTableForTickets);\n","import React from 'react';\r\nimport SideBarMenus from \"../../component/SideBarMenus\";\r\nimport AccountNavbar from \"../../component/AccountNavbar\";\r\nimport SubNavbarMenu from \"../../component/SubNavbarMenu\";\r\nimport MainTableForTickets from \"../../component/MainTableForTickets\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatusList} from \"../../redux/action/TicketsAction\";\r\nimport {getText} from \"../../locales\";\r\n\r\nconst AllTickets = () => {\r\n    return (\r\n        <div className=\"all-tickets d-flex \">\r\n\r\n\r\n\r\n            <SideBarMenus/>\r\n\r\n\r\n\r\n            <div className=\"all-tickets-right-pair\">\r\n               <div className=\"for-fixed\">\r\n                   <div className=\"all-tickets-navbar\">\r\n\r\n                       <div className=\"all-tickets-navbar-child\">\r\n                           <h1>{getText(\"SideBarMenus3\")}</h1>\r\n                           <AccountNavbar />\r\n                       </div>\r\n                   </div>\r\n\r\n                   <SubNavbarMenu/>\r\n               </div>\r\n                <MainTableForTickets/>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst mapStateToProps = () =>{\r\n    return{\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {getStatusList})(AllTickets);","import React, {useEffect, useState} from 'react';\nimport {API_PATH, TOKEN_NAME} from \"../tools/constants\";\nimport axios from \"axios\";\nimport {toast} from \"react-toastify\";\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\nimport {Link, useParams} from \"react-router-dom\";\n\nconst VerifiedChangePassword = (props) => {\n\nconst [permission, setPermission] = useState(false)\nconst [tokenST, setTokenST] = useState(false)\nconst [uidb64ST, setUidb64ST] = useState(false)\n\n\n\n        useEffect(()=> {\n                const query = new URLSearchParams(props.location.search);\n                const token = query.get('token')\n                const uidb64 = query.get('uidb64')\n\n                setUidb64ST(uidb64);\n                setTokenST(token)\n\n                axios.get(API_PATH + \"user/v1/password-change-confirm/\"+ uidb64 + \"/\" +  token )\n                    .then(res =>{\n                            // console.log(res)\n                            res.success ? toast.error(\"failed\") : toast.success(\"success\")\n                             setPermission(true)\n\n                    })\n                    .catch(err =>{\n                            console.log(err)\n                    })\n\n        }, [])\n\n\n\n\n    const changePass =(event, values)=>{\n\n        let Data = new FormData();\n        Data.append(\"password\", values.password)\n        Data.append(\"password2\", values.password2)\n        Data.append(\"uidb64\",  uidb64ST)\n        Data.append(\"token\",tokenST)\n\n\n    axios.patch(API_PATH + \"user/v1/password-change-completed/\" , Data )\n        .then(res =>{\n            toast.success(\"success\")\n            props.history.push(\"/\")\n        })\n    }\n    return (\n        <div className=\"verified-change-password w-100\">\n\n\n\n            {/*{*/}\n            {/*    permission ?*/}\n\n\n                    <div className='login-page '>\n                        <div className=\"login-form-group\">\n\n                            <h3>\n                                Change password\n                            </h3>\n\n                            <AvForm onValidSubmit={changePass}>\n                                <AvField\n\n                                    name='password'\n                                    required\n                                    placeholder=\"Password\"\n                                    type=\"password\"\n\n                                />\n                                <AvField\n\n                                    name='password2'\n                                    required\n                                    placeholder=\"Verify password\"\n                                    type=\"password\"\n                                />\n\n\n\n                                <div type=\"submit\" className=\"create-button-group\">\n\n\n                                    <button type=\"submit\" className=\"btn w-100\">\n                                        Change\n                                        {/*<img src=\"/img/icon/rightArrow.png\" alt=\"\"/>*/}\n                                    </button>\n                                </div>\n                            </AvForm>\n                        </div>\n                    </div>\n\n            {/*        :*/}\n\n\n            {/*        <div className=\"   d-flex justify-content-center mt-5 pt-5   align-items-center\">*/}\n            {/*            {*/}\n            {/*                ()=> alert(\"retry again\")*/}\n            {/*            }*/}\n\n            {/*            <Link  to=\"/\" className=\"btn btn-primary\" > Login page</Link>*/}\n\n            {/*        </div>*/}\n            {/*}*/}\n\n\n\n        </div>\n    );\n};\n\nexport default VerifiedChangePassword;","import React, {useEffect} from 'react';\r\nimport {\r\n    changeTicketStatus,\r\n    createTIcket, editTicketReciever,\r\n    getStatusList,\r\n    ticketInfo,\r\n    updateState\r\n} from \"../../redux/action/TicketsAction\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {API_PATH, TOKEN_NAME} from \"../../tools/constants\";\r\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\r\nimport {getAllAgents} from \"../../redux/action/createAgentAction\";\r\nimport {getActiveTeamList} from \"../../redux/action/CreateTeamAction\";\r\nimport {getText} from \"../../locales\";\r\n\r\nconst TicketInfoRightPair = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.ticketInfo(window.location.pathname.split(\"/\").pop())\r\n        props.changeTicketStatus()\r\n        props.getStatusList()\r\n        props.getActiveTeamList()\r\n        props.getAllAgents()\r\n\r\n    }, [])\r\n\r\n    const changeStatusFunction = (data, values) => {\r\n        props.changeTicketStatus(data, values)\r\n\r\n    }\r\n\r\n\r\n    const selectTeam = (data) => {\r\n        // props.updateState({selectTeamReducer: data})\r\n        // console.log(data.target.value)\r\n        // console.log(props.getAllAgentsList)\r\n        // console.log(props.activeAgentslList)\r\n        props.updateState({getAllAgentsList: props.activeAgentslList.filter(item => item.id == data.target.value)[0].agents})\r\n\r\n        // props.activeAgentslList.filter(item => )\r\n    }\r\n\r\n\r\n    const ticketEditAgent =(receiver)=>{\r\n        props.ticketInfo(window.location.pathname.split(\"/\").pop())\r\n\r\n        props.editTicketReciever(props.ticketInfoObject.id, receiver)\r\n    }\r\n\r\n    return (\r\n        <div className=\"ticket-info-right-pair\">\r\n\r\n\r\n            <div className=\"ticket-info-right-pair-header\">\r\n                <h2>{getText(\"Agents5\")}</h2>\r\n\r\n                <div className=\"ticket-drp\">\r\n                    <button className=\" ticket-dropbtn\">\r\n                        <img src=\"/img/icon/verDots.png\" alt=\"\"/>\r\n                    </button>\r\n\r\n                    <div className=\" ticket-dropdown-content\">\r\n                        {\r\n\r\n                            props.ticketStatusList.map(item2 => (\r\n                                <button\r\n                                    onClick={() => changeStatusFunction(props.ticketInfoObject.id, item2.id)}>{item2.name}</button>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"ticket-info-right-pair-body\">\r\n\r\n                <h2>{getText(\"Commit2\")}</h2>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <h5>\r\n                            {getText(\"Commit3\")}\r\n                        </h5>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <h6>ticketid/\r\n                            {\r\n                                props.ticketInfoObject.id\r\n                            }\r\n                        </h6>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <h5>\r\n                            {getText(\"Commit11\")}:\r\n                        </h5>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <h6>\r\n                            {\r\n                                props.ticketInfoObject.date_created?.slice(0, 10)\r\n\r\n                            }\r\n                            <span>\r\n\r\n                                 {\r\n\r\n                                     \"/\" +\r\n                                     props.ticketInfoObject.date_created?.slice(11, 16)\r\n\r\n                                 }\r\n                            </span>\r\n                        </h6>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <h5>\r\n                            {getText(\"SubNavbarMenu9\")}:\r\n                        </h5>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <h6>\r\n                            {\r\n                                props.ticketInfoObject.date_modified?.slice(0, 10)\r\n                            }\r\n\r\n                            <span>\r\n                                {\r\n                                    \"/\" +\r\n                                    props.ticketInfoObject.date_modified?.slice(11, 16)\r\n\r\n                                }\r\n                            </span>\r\n                        </h6>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <h5>\r\n                            {getText(\"SubNavbarMenu8\")}:\r\n                        </h5>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <h6>\r\n                            {\r\n                                props.ticketInfoObject.ticket_status_name\r\n                            }\r\n                        </h6>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <h5>\r\n                            {getText(\"Commit4\")}:\r\n                        </h5>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <h6>\r\n                            {getText(\"Commit12\")}:\r\n\r\n                        </h6>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <h5>\r\n\r\n                            {getText(\"NewTicket8\")}:\r\n\r\n                        </h5>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <h6>\r\n                            {\r\n                                props.ticketInfoObject.from_where\r\n                            }\r\n                        </h6>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <h5>\r\n                            {getText(\"Commit5\")}:\r\n\r\n                        </h5>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <h6>\r\n                            {getText(\"Commit13\")}:\r\n\r\n                        </h6>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <img src=\"/img/Border.png\" className=\"w-100 mt-3\" alt=\"\"/>\r\n\r\n\r\n                <div className=\"ticket-responsibility mt-3\">\r\n                    <h2 className=\"mb-5\">{getText(\"Commit6\")}</h2>\r\n\r\n                    <AvForm>\r\n                        <h3>{getText(\"Agents7\")}</h3>\r\n                        <AvField onChange={selectTeam} type=\"select\"   name='team'  >\r\n\r\n                            <option value=\"0\" hidden > </option>\r\n\r\n                            {\r\n                                props.activeAgentslList.map(item => (\r\n                                    <option value={item.id}>{item.name}</option>\r\n                                ))\r\n                            }\r\n\r\n                        </AvField>\r\n\r\n                        <h3>{getText(\"Commit7\")}</h3>\r\n                        <AvField onChange={(e) => ticketEditAgent(e.target.value)}     name=\"receiver\" type=\"select\"    >\r\n\r\n\r\n                            <option value=\"0\" hidden ></option>\r\n                            {\r\n                                props.getAllAgentsList.map(item => (\r\n                                    <option value={item.id}>{item.full_name}</option>\r\n                                ))\r\n                            }\r\n\r\n\r\n                        </AvField>\r\n                    </AvForm>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 d-flex justify-content-between\">\r\n                            <h3>{getText(\"Commit8\")}</h3>\r\n                            {/*<span className=\"change\">Change</span>*/}\r\n                        </div>\r\n\r\n                        <div className=\"ticket-team-info col-12  \">\r\n                            <img src=\"/img/icon/account3.png\" className=\"mr-3\" alt=\"\"/>\r\n                            <span className=\"team-name\">{props.ticketInfoObject.sender_name}</span>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"multi-select22\">\r\n\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ticketInfoObject: state.ticketData.ticketInfoObject,\r\n        ticketStatusList: state.ticketData.ticketStatusList,\r\n        activeAgentslList: state.createTeamData.activeAgentslList,\r\n        getAllAgentsList: state.createAgentData.getAllAgentsList,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    ticketInfo,\r\n    getStatusList,\r\n    getAllAgents,\r\n    updateState,\r\n    getActiveTeamList,\r\n    editTicketReciever,\r\n    changeTicketStatus\r\n})(TicketInfoRightPair);","import React, {useEffect, useRef, useState} from 'react';\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport AccountNavbar from \"../../component/AccountNavbar\";\r\nimport {connect} from \"react-redux\";\r\nimport ScrollToBottom from \"react-scroll-to-bottom\"\r\nimport {getCommit, sendCommit, ticketInfo} from \"../../redux/action/TicketsAction\";\r\nimport {getInfoAccount} from \"../../redux/action/createAgentAction\";\r\nimport {AvForm, AvField} from \"availity-reactstrap-validation\"\r\nimport TicketInfoRightPair from \"./TicketInfoRightPair\";\r\nimport {getText} from \"../../locales\";\r\nconst Commit = (props) => {\r\n\r\n\r\n    var url = document.URL\r\n\r\n const last  =  url.substr(url.lastIndexOf('/') + 1) ;\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n\r\n        // props.getInfoAccount()\r\n        props.ticketInfo()\r\n\r\n        props.getCommit(last )\r\n\r\n\r\n        window.scrollTo(0, 0)\r\n\r\n\r\n\r\n    }, [])\r\n\r\n    const inputRef = useRef()\r\n\r\n    const handleClick= () => {\r\n        inputRef.current.value = \"\";\r\n        return \"\"\r\n\r\n    }\r\n\r\n    const sendMessage =(event, values)=>{\r\n        props.sendCommit(values , props.ticketInfoObject.id )\r\n        props.ticketInfo()\r\n        // handleClick()\r\n        //\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    let history = useHistory();\r\n\r\n    return (\r\n        <div className=\"commit w-100 \">\r\n            <div className=\"all-tickets-navbar bg-white\">\r\n\r\n                <div className=\"all-tickets-navbar-child\">\r\n                    <button onClick={() => history.goBack()}  className='bg-transparent arrow-left-back'><img src=\"/img/icon/arrowleft.png\" alt=\"back img\"/>{getText(\"NewTicket11\")}</button>\r\n                    <h1>\r\n                        {props.ticketInfoObject.subject  }  <Link to=\"/tickets/new-ticket-update\"  className=\"ml-3 mb-1\">\r\n                         {  props.ticketInfoObject.sender === props.getAccount.id ?\r\n                             <img src=\"/img/icon/edit.png\" alt=\"\"/> : \"\"\r\n                         }\r\n                    </Link>\r\n                        </h1>\r\n                    <AccountNavbar/>\r\n                </div>\r\n            </div>\r\n            <div className=\"commit-main-pair\">\r\n                <div className=\"commit-body \"    >\r\n                    <div  className=\"commit-list-items    \"  >\r\n                        <ScrollToBottom className=\"commit-list-last-child\">\r\n                            <div className=\"ticket-subject\">\r\n                                <p><b>{props.ticketInfoObject.client_full_name}:</b> {props.ticketInfoObject.content}</p>\r\n                                <span> <b>{props.ticketInfoObject?.date_created?.slice(11, 16)}</b></span>    <span className=\"ml-1\">{props.ticketInfoObject?.date_created?.slice(0, 10)}</span>\r\n                            </div>\r\n                            {\r\n                                props.commitList.map(item =>\r\n                                    (\r\n                                        <div className={ props.getAccount.id  === item.agent ? \"receiver fath-com\" : \"sender fath-com\"}>\r\n                                            <div className=\"commit-big-box \" >\r\n                                                <img src=\"/img/icon/account2.png\" alt=\"\"/>\r\n                                                <div className=\"commit-content\">\r\n                                                    <h3>{item.agent_name}</h3>\r\n                                                    <p>{item.message}</p>\r\n                                                </div>\r\n                                                <span className=\"text-right\">\r\n                                                   <b> {item.date_created.slice(11, 16)}</b> <br/>\r\n                                                    {item.date_created.slice(0, 10)}\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                )\r\n                            }\r\n                        </ScrollToBottom>\r\n                        <div className=\"text-box-for-send\">\r\n                            <span className=\"my-placeholder\">{getText(\"Commit9\")}</span>\r\n                            <AvForm onValidSubmit={sendMessage}>\r\n                                <AvField id=\"textContent\"  name=\"message\" ref={inputRef} type=\"textarea\"/>\r\n                                <button className=\"btn\">\r\n                                    {getText(\"Commit10\")}\r\n                                    <img src=\"/img/icon/rightArrow.png\" alt=\"\"/>\r\n                                </button>\r\n                            </AvForm>\r\n                        </div>\r\n                    </div >\r\n                </div>\r\n                <div className=\"commit-info\">\r\n                    <TicketInfoRightPair/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        commitList: state.ticketData.commitList,\r\n        selectedCommitId: state.ticketData.selectedCommitId,\r\n        getAccount: state.createAgentData.getAccount,\r\n        ticketInfoObject: state.ticketData.ticketInfoObject,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {getCommit, ticketInfo,  sendCommit,getInfoAccount})(Commit);","import React, {useEffect, useState} from 'react';\r\nimport {\r\n    changeTicketStatus,\r\n    getCommit,\r\n    getAllTicketToHandle,\r\n    getStatusList,\r\n    changeTicketPr,\r\n    thtNext,\r\n    thtFunc,\r\n    updateState\r\n} from \"../redux/action/TicketsAction\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {getText} from \"../locales\";\r\n\r\n\r\nconst TicketsHandleTable = (props) => {\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        props.getAllTicketToHandle()\r\n        props.getStatusList()\r\n        props.changeTicketStatus()\r\n        props.changeTicketPr()\r\n\r\n        props.updateState({pActive: null })\r\n\r\n    }, [])\r\n\r\n\r\n    const changePrFunction = (data, values) => {\r\n        props.changeTicketPr(data, values)\r\n\r\n    }\r\n\r\n    let history = useHistory();\r\n\r\n\r\n    const changeStatusFunction = (data, values) => {\r\n        props.changeTicketStatus(data, values)\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const visitCommit = (values, events) => {\r\n        props.getCommit(values, history)\r\n    }\r\n\r\n\r\n    let pagesNumbers = []\r\n    // const [pagesNumbers, setPagesNumbers] = useState([])\r\n    for (let i =0; i < props.btc.last_page; i++) {\r\n        pagesNumbers.push(i);\r\n\r\n    }\r\n\r\n        return (\r\n        <div className='main-table-for-tickets'>\r\n\r\n\r\n            <table>\r\n\r\n                <tr className=\"main-table-header\">\r\n                    <th><input type=\"checkbox\"/></th>\r\n                    <th>\r\n                        {getText(\"SubNavbarMenu5\")}\r\n                    </th>\r\n                    <th>\r\n                        {getText(\"SubNavbarMenu6\")}\r\n                    </th>\r\n                    <th>\r\n                        {getText(\"SubNavbarMenu7\")}\r\n                    </th>\r\n                    <th>\r\n                        {getText(\"SubNavbarMenu8\")}\r\n                    </th>\r\n                    <th>\r\n                        {getText(\"SubNavbarMenu9\")}\r\n                    </th>\r\n                    <th>\r\n\r\n                    </th>\r\n                    <th></th>\r\n                </tr>\r\n\r\n\r\n                {\r\n                    props.btc.data?.map((item, index) => (\r\n                        <tr >\r\n                            <td>\r\n                                <input type=\"checkbox\"/>\r\n                            </td>\r\n                            <td className=\"requester-name\" onClick={() => visitCommit(item.id)} style={{cursor: \"pointer\"}}>\r\n                                <h4>{item.client_full_name}</h4>\r\n                                <span>{item.sender_name}</span>\r\n                            </td>\r\n                            <td className=\"subject-name\">\r\n\r\n                                {\r\n                                    item.priority === 1 ? <img src=\"/img/icon/open.png\" alt=\"\"/> : item.priority === 2 ?\r\n                                    <img src=\"/img/icon/fast.png\" alt=\"\"/> :\r\n                                    item.priority === 0 ?\r\n                                        <img src=\"/img/icon/onHold.png\" alt=\"\"/> : item.priority === -1 ?\r\n                                            <img src=\"/img/icon/close.png\" alt=\"\"/> : item.priority === -2 ? \"iconnnn\" : ''}\r\n\r\n\r\n                                {\" \" + item.subject.length > 20 ? item.subject.slice(0, 20) + \"...\" : item.subject}\r\n                            </td>\r\n\r\n                            <td>\r\n                                {item.receiver_name}\r\n                            </td>\r\n                            <td><span\r\n                                className={item.ticket_status_name === \"Open\" ?\r\n                                    \"open\" : item.ticket_status_name === \"Closed\" ?\r\n                                        \"closed\" : item.ticket_status_name === \"Pending\" ?\r\n                                            \"pending\" : \"\"}>\r\n                       {item.ticket_status_name}\r\n                    </span></td>\r\n                            <td>\r\n                                {\r\n                                    item.date_created.slice(0, 10)\r\n                                }\r\n                            </td>\r\n                            <td className=\"all-tickets-event-menu-father dropdown\">\r\n                                <button className=\"all-tickets-event dropbtn\">\r\n                                    <img src=\"/img/icon/verDots.png\" alt=\"\"/>\r\n                                </button>\r\n\r\n\r\n                                <div className=\"all-tickets-event-menu dropdown-content\">\r\n\r\n\r\n                                    {\r\n                                        props.ticketStatusList.map(item2 => (\r\n                                            <button\r\n                                                onClick={() => changeStatusFunction(item.id, item2.id)}>{item2.name}</button>\r\n                                        ))\r\n                                    }\r\n\r\n                                    <img src=\"/img/icon/Divider.png\" alt=\"\"/>\r\n\r\n\r\n                                    <button onClick={() => changePrFunction(item.id, 2)}><img src=\"/img/icon/fast.png\"\r\n                                                                                              className=\"mr-2\"\r\n                                                                                              alt=\"\"/> {getText(\"SubNavbarMenu10\")}\r\n                                    </button>\r\n                                    <button onClick={() => changePrFunction(item.id, 1)}><img src=\"/img/icon/open.png\"\r\n                                                                                              className=\"mr-2\"\r\n                                                                                              alt=\"\"/> {getText(\"SubNavbarMenu11\")}\r\n                                    </button>\r\n                                    <button onClick={() => changePrFunction(item.id, 0)}><img src=\"/img/icon/onHold.png\"\r\n                                                                                              className=\"mr-2\"\r\n                                                                                              alt=\"\"/> {getText(\"SubNavbarMenu12\")}\r\n                                    </button>\r\n                                    <button onClick={() => changePrFunction(item.id, -1)}><img src=\"/img/icon/close.png\"\r\n                                                                                               className=\"mr-2\"\r\n                                                                                               alt=\"\"/> {getText(\"SubNavbarMenu13\")}\r\n                                    </button>\r\n                                    <button onClick={() => changePrFunction(item.id, -2)}><img src=\"/img/icon/pw.png\"\r\n                                                                                               className=\"mr-2\"\r\n                                                                                               alt=\"\"/> {getText(\"SubNavbarMenu14\")}\r\n                                    </button>\r\n\r\n\r\n                                </div>\r\n\r\n\r\n                            </td>\r\n                            {/*<td> </td>*/}\r\n\r\n                        </tr>\r\n\r\n                    ))\r\n                }\r\n\r\n\r\n            </table>\r\n\r\n\r\n\r\n\r\n\r\n                 {\r\n                    props.btc ?  props.btc.last_page > 1 ?\r\n                        <ul className=\"pageNumbersManual d-flex    \">\r\n                            <li className=\"arrow\" >\r\n                                <button   onClick={() => props.thtFunc(props.btc?.previous)}><img src=\"/img/icon/left.svg\" alt=\"\"/></button>\r\n\r\n                            </li>\r\n                            {\r\n                                pagesNumbers.map(item => (\r\n                                    <button className={ \"numbers \"+ (props.pActive ? props.pActive === item+1 ? \"selected\" : \"\" : \"\")}\r\n                                            onClick={() => props.thtNext(item+1)}>\r\n                                        {item + 1}\r\n                                    </button>\r\n                                ))\r\n                            }\r\n                            <li className=\"arrow\" >\r\n                                <button onClick={() => props.thtFunc(props.btc?.next)}><img src=\"/img/icon/right.svg\" alt=\"\"/></button>\r\n                            </li>\r\n                        </ul>\r\n                        :\r\n                        \"\"\r\n                        :\r\n                        \"\"\r\n\r\n                }\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n//\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n        getTickets: state.ticketData.getTickets,\r\n        getTicketsToHandle: state.ticketData.getTicketsToHandle,\r\n        ticketStatusList: state.ticketData.ticketStatusList,\r\n        btc: state.ticketData.btc,\r\n        pActive: state.ticketData.pActive,\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    getAllTicketToHandle,\r\n    changeTicketPr,\r\n    getCommit,\r\n    changeTicketStatus,\r\n    getStatusList,\r\n    thtNext,\r\n    updateState,\r\n    thtFunc,\r\n})(TicketsHandleTable);","import React from 'react';\r\nimport SideBarMenus from \"../../component/SideBarMenus\";\r\nimport AccountNavbar from \"../../component/AccountNavbar\";\r\nimport SubNavbarMenu from \"../../component/SubNavbarMenu\";\r\nimport MainTableForTickets from \"../../component/MainTableForTickets\";\r\nimport TicketsHandleTable from \"../../component/TicketsHandleTable\";\r\nimport {getText} from \"../../locales\";\r\n\r\nconst TicketsToHandle = () => {\r\n    return (\r\n        <div className=\"all-tickets d-flex \">\r\n\r\n\r\n\r\n            <SideBarMenus/>\r\n\r\n\r\n\r\n            <div className=\"all-tickets-right-pair\">\r\n                <div className=\"all-tickets-navbar\">\r\n\r\n                    <div className=\"all-tickets-navbar-child\">\r\n                        <h1>{getText(\"SubNavbarMenu18\")}</h1>\r\n                        <AccountNavbar />\r\n                    </div>\r\n                </div>\r\n\r\n                <SubNavbarMenu/>\r\n                <TicketsHandleTable/>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default TicketsToHandle;","import React, {useEffect, useState} from 'react';\r\nimport {\r\n    changeTicketPr,\r\n    changeTicketStatus,\r\n    getCommit,\r\n    getMyOpenTicket,\r\n\r\n    getStatusList, myOpenFunc, myOpenNext,\r\n    updateState\r\n\r\n} from \"../redux/action/TicketsAction\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {getText} from \"../locales\";\r\n\r\n\r\nconst OpenTicketsTable = (props) => {\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        props.getMyOpenTicket()\r\n        props.getStatusList()\r\n        props.changeTicketStatus()\r\n        props.changeTicketPr()\r\n\r\n        props.updateState({pActive: null })\r\n\r\n    }, [])\r\n\r\n    let history = useHistory();\r\n    const changeStatusFunction = (data, values) => {\r\n        props.changeTicketStatus(data, values)\r\n\r\n    }\r\n\r\n\r\n    const changePrFunction = (data, values) => {\r\n        props.changeTicketPr(data, values)\r\n\r\n    }\r\n\r\n\r\n    const visitCommit = (values, events) => {\r\n        props.getCommit(values, history)\r\n    }\r\n\r\n\r\n\r\n    let pagesNumbers = []\r\n    // const [pagesNumbers, setPagesNumbers] = useState([])\r\n    for (let i =0; i < props.boc.last_page; i++) {\r\n        pagesNumbers.push(i);\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='main-table-for-tickets'>\r\n\r\n\r\n            <table>\r\n\r\n                <tr className=\"main-table-header\">\r\n                    <th><input type=\"checkbox\"/></th>\r\n                    <th>\r\n                        {getText(\"SubNavbarMenu5\")}\r\n                    </th>\r\n                    <th>\r\n                        {getText(\"SubNavbarMenu6\")}\r\n                    </th>\r\n                    <th>\r\n                        {getText(\"SubNavbarMenu7\")}\r\n                    </th>\r\n                    <th>\r\n                        {getText(\"SubNavbarMenu8\")}\r\n                    </th>\r\n                    <th>\r\n                        {getText(\"SubNavbarMenu9\")}\r\n                    </th>\r\n                    <th>\r\n\r\n                    </th>\r\n                    <th></th>\r\n                </tr>\r\n\r\n\r\n                {\r\n                    props.boc.data?.map((item, index) => (\r\n                        <tr>\r\n                            <td>\r\n                                <input type=\"checkbox\"/>\r\n                            </td>\r\n                            <td className=\"requester-name\" onClick={() => visitCommit(item.id)}\r\n                                style={{cursor: \"pointer\"}}>\r\n                                <h4>{item.client_full_name}</h4>\r\n                                <span>{item.sender_name}</span>\r\n                            </td>\r\n                            <td className=\"subject-name\">\r\n\r\n                                {item.priority === 1 ? <img src=\"/img/icon/open.png\" alt=\"\"/> : item.priority === 2 ?\r\n                                    <img src=\"/img/icon/fast.png\" alt=\"\"/> :\r\n                                    item.priority === 0 ?\r\n                                        <img src=\"/img/icon/onHold.png\" alt=\"\"/> : item.priority === -1 ?\r\n                                            <img src=\"/img/icon/close.png\" alt=\"\"/> : item.priority === -2 ? \"iconnnn\" : ''}\r\n\r\n\r\n                                {\" \" + item.subject.length > 20 ? item.subject.slice(0, 20) + \"...\" : item.subject}\r\n                            </td>\r\n\r\n                            <td>\r\n                                {item.receiver_name}\r\n                            </td>\r\n                            <td><span\r\n                                className={item.ticket_status_name === \"Open\" ?\r\n                                    \"open\" : item.ticket_status_name === \"Closed\" ?\r\n                                        \"closed\" : item.ticket_status_name === \"Pending\" ?\r\n                                            \"pending\" : \"\"}>\r\n                       {item.ticket_status_name}\r\n                    </span></td>\r\n                            <td>\r\n                                {\r\n                                    item.date_created.slice(0, 10)\r\n                                }\r\n                            </td>\r\n                            <td className=\"all-tickets-event-menu-father dropdown\">\r\n                                <button className=\"all-tickets-event dropbtn\">\r\n                                    <img src=\"/img/icon/verDots.png\" alt=\"\"/>\r\n                                </button>\r\n\r\n\r\n                                <div className=\"all-tickets-event-menu dropdown-content\">\r\n\r\n\r\n                                    {\r\n                                        props.ticketStatusList.map(item2 => (\r\n                                            <button\r\n                                                onClick={() => changeStatusFunction(item.id, item2.id)}>{item2.name}</button>\r\n                                        ))\r\n                                    }\r\n\r\n                                    <img src=\"/img/icon/Divider.png\" alt=\"\"/>\r\n\r\n\r\n                                    <button onClick={() => changePrFunction(item.id, 2)}><img src=\"/img/icon/fast.png\"\r\n                                                                                              className=\"mr-2\"\r\n                                                                                              alt=\"\"/> {getText(\"SubNavbarMenu10\")}\r\n                                    </button>\r\n                                    <button onClick={() => changePrFunction(item.id, 1)}><img src=\"/img/icon/open.png\"\r\n                                                                                              className=\"mr-2\"\r\n                                                                                              alt=\"\"/> {getText(\"SubNavbarMenu11\")}\r\n                                    </button>\r\n                                    <button onClick={() => changePrFunction(item.id, 0)}><img src=\"/img/icon/onHold.png\"\r\n                                                                                              className=\"mr-2\"\r\n                                                                                              alt=\"\"/> {getText(\"SubNavbarMenu12\")}\r\n                                    </button>\r\n                                    <button onClick={() => changePrFunction(item.id, -1)}><img src=\"/img/icon/close.png\"\r\n                                                                                               className=\"mr-2\"\r\n                                                                                               alt=\"\"/> {getText(\"SubNavbarMenu13\")}\r\n                                    </button>\r\n                                    <button onClick={() => changePrFunction(item.id, -2)}><img src=\"/img/icon/pw.png\"\r\n                                                                                               className=\"mr-2\"\r\n                                                                                               alt=\"\"/> {getText(\"SubNavbarMenu14\")}\r\n                                    </button>\r\n\r\n\r\n                                </div>\r\n\r\n\r\n                            </td>\r\n                            {/*<td> </td>*/}\r\n\r\n                        </tr>\r\n\r\n                    ))\r\n                }\r\n\r\n\r\n            </table>\r\n\r\n\r\n\r\n            {\r\n                props.boc ?  props.boc.last_page > 1 ?\r\n                    <ul className=\"pageNumbersManual d-flex    \">\r\n                        <li className=\"arrow\" >\r\n                            <button   onClick={() => props.myOpenFunc(props.boc?.previous)}><img src=\"/img/icon/left.svg\" alt=\"\"/></button>\r\n\r\n                        </li>\r\n                        {\r\n                            pagesNumbers.map(item => (\r\n                                <button className={ \"numbers \"+ (props.pActive ? props.pActive === item+1 ? \"selected\" : \"\" : \"\")}\r\n                                        onClick={() => props.myOpenNext(item+1)}>\r\n                                    {item + 1}\r\n                                </button>\r\n                            ))\r\n                        }\r\n                        <li className=\"arrow\" >\r\n                            <button onClick={() => props.myOpenFunc(props.boc?.next)}><img src=\"/img/icon/right.svg\" alt=\"\"/></button>\r\n                        </li>\r\n                    </ul>\r\n                    :\r\n                    \"\"\r\n                    :\r\n                    \"\"\r\n\r\n            }\r\n\r\n \r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n        getOpenTickets: state.ticketData.getOpenTickets,\r\n        ticketStatusList: state.ticketData.ticketStatusList,\r\n        boc: state.ticketData.boc,\r\n        pActive: state.ticketData.pActive,\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    getMyOpenTicket,\r\n    changeTicketPr,\r\n    getCommit,\r\n    changeTicketStatus,\r\n    getStatusList,\r\n    myOpenNext,\r\n    myOpenFunc,\r\n    updateState,\r\n\r\n\r\n})(OpenTicketsTable);","import React from 'react';\r\nimport SideBarMenus from \"../../component/SideBarMenus\";\r\nimport AccountNavbar from \"../../component/AccountNavbar\";\r\nimport SubNavbarMenu from \"../../component/SubNavbarMenu\";\r\nimport MainTableForTickets from \"../../component/MainTableForTickets\";\r\nimport OpenTicketsTable from \"../../component/OpenTicketsTable\";\r\nimport {getText} from \"../../locales\";\r\n\r\nconst TicketOpen = () => {\r\n    return (\r\n        <div className=\"all-tickets d-flex \">\r\n\r\n\r\n\r\n            <SideBarMenus/>\r\n\r\n\r\n\r\n            <div className=\"all-tickets-right-pair\">\r\n                <div className=\"all-tickets-navbar\">\r\n\r\n                    <div className=\"all-tickets-navbar-child\">\r\n                        <h1>{getText(\"SubNavbarMenu19\")}</h1>\r\n                        <AccountNavbar />\r\n                    </div>\r\n                </div>\r\n\r\n                <SubNavbarMenu/>\r\n                <OpenTicketsTable />\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default TicketOpen;","import React, {useEffect, useState} from 'react';\r\nimport {\r\n    changeTicketPr,\r\n    changeTicketStatus,\r\n    getCommit,\r\n    getMyOpenTicket,\r\n    getStatusList,\r\n    getTicketsSevenDays, sevenDayFunc, sevenDayNext,\r\n    updateState,\r\n\r\n} from \"../redux/action/TicketsAction\";\r\nimport {connect} from \"react-redux\";\r\nimport { useHistory} from \"react-router-dom\";\r\nimport {getText} from \"../locales\";\r\n\r\n\r\nconst LastDaysTable = (props) => {\r\n\r\n\r\n    var date = new Date();\r\n    date.setDate(date.getDate() - 7);\r\n\r\n    var start_date = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\r\n\r\n\r\n    let currentDate = new Date()\r\n    let day = currentDate.getDate()\r\n    let month = currentDate.getMonth() + 1\r\n    let year = currentDate.getFullYear()\r\n\r\n    let end_date = year + \"-\" + month + \"-\" + day\r\n\r\n    const [currentPage, setcurrentPage] = useState(0);\r\n    const [itemsPerPage, setitemsPerPage] = useState(5);\r\n\r\n    const [pageNumberLimit, setpageNumberLimit] = useState(5);\r\n    const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(2);\r\n    const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\r\n\r\n    const handleClick = (event) => {\r\n        props.getTicketsSevenDays(start_date, end_date)\r\n\r\n\r\n    };\r\n\r\n\r\n    const changePrFunction = (data, values) => {\r\n        props.changeTicketPr(data, values)\r\n\r\n    }\r\n\r\n    const pages = [];\r\n    for (let i = 1; i <= Math.ceil(props.bot.last_page); i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const indexOfLastItem = currentPage * itemsPerPage;\r\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n    // const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n    const renderPageNumbers = pages.map((number) => {\r\n        // if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\r\n        return (\r\n            <li\r\n                key={number}\r\n                id={number}\r\n                onClick={handleClick}\r\n                className={props.pageIndex == number ? \"active\" : null}\r\n            >\r\n\r\n                {number}\r\n            </li>\r\n        );\r\n        // } else {\r\n        //     return null;\r\n        // }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        props.getMyOpenTicket()\r\n        props.getStatusList()\r\n        props.changeTicketStatus()\r\n        props.getTicketsSevenDays(start_date, end_date)\r\n\r\n        props.updateState({pActive: null })\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    let history = useHistory();\r\n    const changeStatusFunction = (data, values) => {\r\n        props.changeTicketStatus(data, values)\r\n\r\n    }\r\n\r\n    const visitCommit = (values, events) => {\r\n        props.getCommit(values, history)\r\n    }\r\n\r\n\r\n\r\n    let pagesNumbers = []\r\n    // const [pagesNumbers, setPagesNumbers] = useState([])\r\n    for (let i =0; i < props.bot.last_page; i++) {\r\n        pagesNumbers.push(i);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='main-table-for-tickets'>\r\n\r\n\r\n            <table>\r\n\r\n                <tr className=\"main-table-header\">\r\n                    <th><input type=\"checkbox\"/></th>\r\n                    <th>\r\n                        {getText(\"SubNavbarMenu5\")}\r\n                    </th>\r\n                    <th>\r\n                        {getText(\"SubNavbarMenu6\")}\r\n                    </th>\r\n                    <th>\r\n                        {getText(\"SubNavbarMenu7\")}\r\n                    </th>\r\n                    <th>\r\n                        {getText(\"SubNavbarMenu8\")}\r\n                    </th>\r\n                    <th>\r\n                        {getText(\"SubNavbarMenu9\")}\r\n                    </th>\r\n                    <th>\r\n\r\n                    </th>\r\n                    <th></th>\r\n                </tr>\r\n\r\n\r\n                {\r\n                    props.bot ? props.bot.data?.map((item, index) => (\r\n                            <tr>\r\n                                <td>\r\n                                    <input type=\"checkbox\"/>\r\n                                </td>\r\n                                <td onClick={() => visitCommit(item.id)} style={{cursor: \"pointer\"}}\r\n                                    className=\"requester-name\">\r\n                                    <h4>{item.client_full_name}</h4>\r\n                                    <span>{item.sender_name}</span>\r\n                                </td>\r\n                                <td className=\"subject-name\">\r\n\r\n                                    {item.priority === 1 ? <img src=\"/img/icon/open.png\" alt=\"\"/> : item.priority === 2 ?\r\n                                        <img src=\"/img/icon/fast.png\" alt=\"\"/> :\r\n                                        item.priority === 0 ?\r\n                                            <img src=\"/img/icon/onHold.png\" alt=\"\"/> : item.priority === -1 ?\r\n                                                <img src=\"/img/icon/close.png\" alt=\"\"/> : item.priority === -2 ? \"iconnnn\" : ''}\r\n\r\n\r\n                                    {\" \" + item.subject.length > 20 ? item.subject.slice(0, 20) + \"...\" : item.subject}\r\n                                </td>\r\n\r\n                                <td>\r\n                                    {item.receiver_name}\r\n                                </td>\r\n                                <td><span\r\n                                    className={item.ticket_status_name === \"Open\" ?\r\n                                        \"open\" : item.ticket_status_name === \"Closed\" ?\r\n                                            \"closed\" : item.ticket_status_name === \"Pending\" ?\r\n                                                \"pending\" : \"\"}>\r\n                                              {item.ticket_status_name}\r\n                    </span></td>\r\n                                <td>\r\n                                    {\r\n                                        item.date_created.slice(0, 10)\r\n                                    }\r\n                                </td>\r\n                                <td className=\"all-tickets-event-menu-father dropdown\">\r\n                                    <button className=\"all-tickets-event dropbtn\">\r\n                                        <img src=\"/img/icon/verDots.png\" alt=\"\"/>\r\n                                    </button>\r\n\r\n                                    <div className=\"all-tickets-event-menu dropdown-content\">\r\n\r\n\r\n                                        {\r\n                                            props.ticketStatusList.map(item2 => (\r\n                                                <button\r\n                                                    onClick={() => changeStatusFunction(item.id, item2.id)}>{item2.name}</button>\r\n                                            ))\r\n                                        }\r\n\r\n                                        <img src=\"/img/icon/Divider.png\" alt=\"\"/>\r\n\r\n\r\n                                        <button onClick={() => changePrFunction(item.id, 2)}><img src=\"/img/icon/fast.png\"\r\n                                                                                                  className=\"mr-2\"\r\n                                                                                                  alt=\"\"/> {getText(\"SubNavbarMenu10\")}\r\n                                        </button>\r\n                                        <button onClick={() => changePrFunction(item.id, 1)}><img src=\"/img/icon/open.png\"\r\n                                                                                                  className=\"mr-2\"\r\n                                                                                                  alt=\"\"/> {getText(\"SubNavbarMenu11\")}\r\n                                        </button>\r\n                                        <button onClick={() => changePrFunction(item.id, 0)}><img src=\"/img/icon/onHold.png\"\r\n                                                                                                  className=\"mr-2\"\r\n                                                                                                  alt=\"\"/> {getText(\"SubNavbarMenu12\")}\r\n                                        </button>\r\n                                        <button onClick={() => changePrFunction(item.id, -1)}><img src=\"/img/icon/close.png\"\r\n                                                                                                   className=\"mr-2\"\r\n                                                                                                   alt=\"\"/> {getText(\"SubNavbarMenu13\")}\r\n                                        </button>\r\n                                        <button onClick={() => changePrFunction(item.id, -2)}><img src=\"/img/icon/pw.png\"\r\n                                                                                                   className=\"mr-2\"\r\n                                                                                                   alt=\"\"/> {getText(\"SubNavbarMenu14\")}\r\n                                        </button>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </td>\r\n                                {/*<td> </td>*/}\r\n\r\n                            </tr>\r\n\r\n                        ))\r\n                        :\r\n                        \"\"\r\n                }\r\n\r\n\r\n            </table>\r\n\r\n \r\n               \r\n\r\n            {\r\n                props.bot ?  props.bot.last_page > 1 ?\r\n                    <ul className=\"pageNumbersManual d-flex    \">\r\n                        <li className=\"arrow\" >\r\n                            <button   onClick={() => props.sevenDayFunc(  props.bot?.previous)}><img src=\"/img/icon/left.svg\" alt=\"\"/></button>\r\n\r\n                        </li>\r\n                        {\r\n                            pagesNumbers.map(item => (\r\n                                <button className={ \"numbers \"+ (props.pActive ? props.pActive === item+1 ? \"selected\" : \"\" : \"\")}\r\n                                        onClick={() => props.sevenDayNext(start_date, end_date, item+1)}>\r\n                                    {item + 1}\r\n                                </button>\r\n                            ))\r\n                        }\r\n                        <li className=\"arrow\" >\r\n                            <button onClick={() => props.sevenDayFunc(  props.bot?.next)}><img src=\"/img/icon/right.svg\" alt=\"\"/></button>\r\n                        </li>\r\n                    </ul>\r\n                    :\r\n                    \"\"\r\n                    :\r\n                    \"\"\r\n\r\n            }\r\n        \r\n                   \r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n//\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n        getOpenTickets: state.ticketData.getOpenTickets,\r\n        ticketStatusList: state.ticketData.ticketStatusList,\r\n        getLastDaysTickets: state.ticketData.getLastDaysTickets,\r\n        bot: state.ticketData.bot,\r\n        pActive: state.ticketData.pActive,\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    getMyOpenTicket,\r\n    changeTicketPr,\r\n    sevenDayNext,\r\n    sevenDayFunc,\r\n    updateState,\r\n    getTicketsSevenDays,\r\n    getCommit,\r\n    changeTicketStatus,\r\n\r\n    getStatusList\r\n})(LastDaysTable);","import React from 'react';\r\nimport SideBarMenus from \"../../component/SideBarMenus\";\r\nimport AccountNavbar from \"../../component/AccountNavbar\";\r\nimport SubNavbarMenu from \"../../component/SubNavbarMenu\";\r\nimport LastDaysTable from \"../../component/LastDaysTabel\";\r\nimport {getText} from \"../../locales\";\r\n\r\nconst TicketLastDays = () => {\r\n\r\n    return (\r\n        <div className=\"all-tickets d-flex \">\r\n\r\n\r\n\r\n            <SideBarMenus/>\r\n\r\n\r\n\r\n            <div className=\"all-tickets-right-pair\">\r\n                <div className=\"all-tickets-navbar\">\r\n\r\n                    <div className=\"all-tickets-navbar-child\">\r\n                        <h1>{getText(\"SubNavbarMenu20\")}</h1>\r\n                        <AccountNavbar />\r\n                    </div>\r\n                </div>\r\n\r\n                <SubNavbarMenu/>\r\n                <LastDaysTable />\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default TicketLastDays;","import React from 'react';\r\nimport {AvForm, AvField} from 'availity-reactstrap-validation'\r\nimport {LoginUser} from \"../redux/action/authAction\";\r\nimport {connect} from \"react-redux\";\r\nimport {changePasswordForSend2} from \"../redux/action/createAgentAction\";\r\nconst ForgotPassword = (props) => {\r\n\r\n\r\n\r\n\r\n    const forgotPassword = (event , value) => {\r\n      props.changePasswordForSend2(value)\r\n    }\r\n\r\n    return (\r\n        <div className='login-page'>\r\n            <div className=\"login-form-group\">\r\n\r\n                <h3>\r\n                    Log in\r\n                </h3>\r\n\r\n                <AvForm onValidSubmit={forgotPassword}>\r\n                    <AvField\r\n\r\n                        name='email'\r\n                        required\r\n                        placeholder=\"Email\"\r\n                        type=\"text\"\r\n                    />\r\n\r\n                    <div type=\"submit\" className=\"create-button-group\">\r\n\r\n\r\n                        <button   className=\"change-password-btn btn ml-3\">\r\n                            Change password\r\n                        </button>\r\n\r\n                    </div>\r\n                </AvForm>\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoading: state.login.isLoading\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {LoginUser, changePasswordForSend2})(ForgotPassword);","import React, {useEffect, useMemo, useState} from 'react';\nimport AccountNavbar from \"./AccountNavbar\";\nimport {Link} from \"react-router-dom\";\nimport {AvForm, AvField, AvRadio, AvRadioGroup} from 'availity-reactstrap-validation'\nimport {connect} from \"react-redux\";\nimport {\n    changeInfoAccountData,\n    getInfoAccount, getInfoAccountForEdit,\n    saveFileForEdit,\n    updateInfoAccount,\n    updateUserInfo\n} from \"../redux/action/createAgentAction\";\nimport {getActiveTeamList} from \"../redux/action/CreateTeamAction\";\nimport NumberFormat from \"react-number-format\";\nimport {getAllTicketForId} from \"../redux/action/TicketsAction\";\n\n\nconst InfoAccount = (props) => {\n\n\n    var url = document.URL\n\n    const [maskNumber, setMaskNumber] = useState(null)\n\n    const last = url.substr(url.lastIndexOf('/') + 1);\n\n\n    const firstUpload = useMemo(() => {\n        props.getInfoAccountForEdit(last)\n\n\n    } , [])\n    useEffect(() => {\n        // var url = document.URL\n        // props.getAllTicketForId()\n\n\n        // const last  =  url.substr(url.lastIndexOf('/') + 1) ;\n        // props.getInfoAccount()\n        props.getActiveTeamList()\n\n\n        // showNumberEdit()\n\n\n    }, [])\n\n\n    // function showNumberEdit(x) {\n    //     document.getElementById('numberInputEdit').value = \"+ 998\"\n    //\n    //     document.getElementById('numberInputEdit').addEventListener('input', function (e) {\n    //         var x = e.target.value.replace(/\\D/g, '').match(/(\\d{0,3})(\\d{0,2})(\\d{0,3})(\\d{0,2})(\\d{0,2})/);\n    //         e.target.value = '+' + x[1] + ' ' + x[2] + ' ' + x[3] + ' ' + x[4] + ' ' + x[5];\n    //     });\n    // }\n\n    const sendChange = (event, value) => {\n\n\n        props.updateUserInfo(value, last, props.getAccountForEdit.email)\n\n    }\n\n\n    const savePhoto = (e) => {\n        // console.log(e.target.files[0])\n        props.saveFileForEdit(e.target.files[0], props.getAccountForEdit.id);\n    }\n\n\n    return (\n        <div className=\"info-account w-100\">\n            <div className=\"all-tickets-navbar\">\n\n                <div className=\"all-tickets-navbar-child\">\n                    <Link to='/agents' className='arrow-left-back'>\n                        <img src=\"/img/icon/arrowleft.png\"\n                             alt=\"back img\"/>Back</Link>\n                    <h1>Info account</h1>\n                    <AccountNavbar/>\n                </div>\n            </div>\n\n\n            <div className=\"row w-100\">\n                <div className=\"col-md-3\">\n\n\n                    <div className=\"account-img\">\n                        <img src={props.getAccountForEdit.image} alt=\"\"/>\n\n                        <span>{props.getAccountForEdit.role_name}</span>\n                    </div>\n\n                    <h3>{props.getAccountForEdit.full_name}</h3>\n                    <p>{props.getAccountForEdit.email}</p>\n\n\n                    <div className=\"count-tickets\">\n                        <h4>\n                            <span>  {props.AllCount.count ? props.AllCount.count : \"0\"}</span>\n                            <span>All tickets</span>\n                        </h4>\n\n                        <h4>\n\n                            <span>  {props.ClosedCount.count ? props.ClosedCount.count : \"0\"}</span>\n                            <span>Closed</span>\n                        </h4>\n\n                        <h4>\n                            <span>  {props.openCount.count ? props.openCount.count : \"0\"}</span>\n                            <span>Open</span>\n                        </h4>\n                    </div>\n\n\n                    <AvForm>\n\n\n                        <h3 className=\"mb-3\"> Upload New Avatar</h3>\n\n                        <AvField type=\"file\"\n                                 id=\"file\"\n                                 onChange={savePhoto}\n                                 name=\"image\"\n\n                        />\n\n\n                    </AvForm>\n\n\n                    {/*<button className=\"delete-avatar-btn\">*/}\n                    {/*    Delete Avatar*/}\n                    {/*</button>*/}\n\n\n                    <img src=\"/img/Border.png\" className='img-top-border' alt=\"\"/>\n                </div>\n\n                <div className=\"col-md-7\">\n\n\n                    <AvForm onValidSubmit={sendChange} model={props.getAccountForEdit}>\n                        <h3>Personality</h3>\n                        <div className=\"row-for-input\">\n                            <AvField\n                                name=\"full_name\"\n                                placeholder=\"Full name\"\n                                required\n                                value={props.getAccountForEdit.full_name}\n                            />\n\n\n                        </div>\n\n\n                        <h3>Contacts</h3>\n                        <div className=\"row-for-input for-email \">\n                            {/*<img src=\"/img/icon/envelope.png\" alt=\"\"/>*/}\n                            {/*<AvField*/}\n\n                            {/*    name=\"email\"*/}\n                            {/*    placeholder=\"E-mail\"*/}\n                            {/*    value={props.getAccountForEdit.email}*/}\n                            {/*/>*/}\n\n                            <AvField\n                                name=\"phone\"\n                                placeholder=\"Phone\"\n                                id='numberInputEdit'\n                                required\n                                value={props.getAccountForEdit.phone !== \"null\" ? props.getAccountForEdit.phone : \"+998\"}\n                            />\n\n                            {/*<NumberFormat format=\"+998 (##) ###-##-##\" className=\"form-control d-inline-block w-50\"*/}\n                            {/*              placeholder=\"Phone\"*/}\n                            {/*              id='numberInputEdit'*/}\n\n                            {/*              name=\"phone\"*/}\n                            {/*              onChange={(e) => setMaskNumber(e.target.value)}*/}\n                            {/*              allowEmptyFormatting mask=\"_\"*/}\n                            {/*/>*/}\n                        </div>\n\n\n                        <h3>Team</h3>\n                        <div className=\"row-for-input\" >\n                            <AvField type=\"select\" name=\"team\" value={props.getAccountForEdit.team}\n                                     classname=\"select-style\" required>\n\n                                <option selected></option>\n                                {\n                                    props.activeAgentslList\n                                        ?\n                                        props.activeAgentslList.map(item =>\n                                            (\n                                                <option value={item.id}>{item.name}</option>\n\n                                            )\n                                        )\n                                        :\n                                        \"\"\n                                }\n\n\n                            </AvField>\n\n\n                        </div>\n\n\n                        <h3>\n                            Permissions\n                        </h3>\n\n\n                        <div className=\"row-for-input\">\n\n                            <AvRadioGroup name=\"role\" value={props.getAccountForEdit.role}>\n                                <div className=\"d-flex\">\n                                    <AvRadio customInput value={0}/>\n                                    <label>\n                                        <h4>Admin</h4>\n                                        <p>\n                                            Full access to global settings, adding new agents, subscription and all\n                                            actions related to tickets.\n                                        </p>\n                                    </label>\n\n                                </div>\n\n\n                                <div className=\"d-flex\">\n\n                                    <AvRadio customInput value={2}/>\n                                    <label>\n                                        <h4>Agent</h4>\n                                        <p>\n                                            Access to personal settings and all actions related to tickets.\n                                        </p>\n                                    </label>\n                                </div>\n\n\n                                <div className=\"d-flex\">\n\n                                    <AvRadio customInput value={1} className=\"b-0\"/>\n                                    <label>\n                                        <h4>Manager</h4>\n                                        <p>\n                                            Managers can read and browse tickets but can’t take any actions.\n                                        </p>\n                                    </label>\n\n                                </div>\n\n\n                            </AvRadioGroup>\n                        </div>\n\n\n                        <div className=\"create-button-group\">\n\n                            <div>\n                                {\n                                    <button type='submit' className=\"btn\">\n                                        Save changes\n                                    </button>\n                                }\n                            </div>\n\n                            <Link to='/agents'>Cancel</Link>\n\n                        </div>\n\n\n                    </AvForm>\n\n\n                    <img src=\"/img/Divider.png\" className='img-bottom-border' alt=\"\"/>\n\n\n                    {/*<h3>*/}\n                    {/*    Delete agent*/}\n                    {/*</h3>*/}\n                    {/*<p>*/}\n                    {/*    You will delete the agent account and related statistics. <br/> Tickets will not be removed.*/}\n                    {/*</p>*/}\n                    {/*<h5 className='delete-account'>*/}\n                    {/*    Delete account*/}\n                    {/*</h5>*/}\n                </div>\n                <div className=\"col-md-2\">\n\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\nconst mapStateToProps = (state) => {\n    return {\n\n        getAccountForEdit: state.createAgentData.getAccountForEdit,\n        getAccount: state.createAgentData.getAccount,\n        activeAgentslList: state.createTeamData.activeAgentslList,\n        openCount: state.ticketData.openCount,\n        ClosedCount: state.ticketData.ClosedCount,\n        AllCount: state.ticketData.AllCount,\n\n\n    }\n}\n\nexport default connect(mapStateToProps, {\n    getInfoAccountForEdit,\n    getInfoAccount,\n    saveFileForEdit,\n    changeInfoAccountData,\n    getActiveTeamList,\n    updateInfoAccount,\n    updateUserInfo,\n    getAllTicketForId,\n\n})(InfoAccount);","import React, {useEffect, useState} from 'react';\r\nimport {\r\n    changeTicketStatus,\r\n    getCommit,\r\n    getAllTicket,\r\n    getStatusList,\r\n\r\n    changeTicketPr,\r\n    PendingStatusCount,\r\n    PendingNext,\r\n    PendingNextFunc,\r\n    updateState\r\n} from \"../../redux/action/TicketsAction\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport SideBarMenus from \"../../component/SideBarMenus\";\r\nimport AccountNavbar from \"../../component/AccountNavbar\";\r\nimport SubNavbarMenu from \"../../component/SubNavbarMenu\";\r\nimport {getText} from \"../../locales\";\r\n\r\n\r\nconst PendingFilter = (props) => {\r\n\r\n    // const [data, setData] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        // props.getAllTicket(props.pageIndex)\r\n        // props.getStatusList()\r\n        props.getCommit()\r\n\r\n        props.changeTicketStatus()\r\n        props.PendingStatusCount()\r\n\r\n        props.updateState({pActive: null })\r\n    }, [])\r\n\r\n\r\n    let history = useHistory();\r\n    const changeStatusFunction = (data, values) => {\r\n        props.changeTicketStatus(data, values)\r\n\r\n    }\r\n\r\n\r\n    const changePrFunction = (data, values) => {\r\n        props.changeTicketPr(data, values)\r\n\r\n    }\r\n\r\n    const visitCommit = (values, events) => {\r\n        props.getCommit(values, history)\r\n    }\r\n\r\n\r\n    const filterList = () => {\r\n\r\n    }\r\n\r\n\r\n\r\n    let pagesNumbers = []\r\n    // const [pagesNumbers, setPagesNumbers] = useState([])\r\n    for (let i =0; i < props.PendingCount.last_page; i++){\r\n        pagesNumbers.push(i);\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"all-tickets d-flex \">\r\n\r\n\r\n\r\n            <SideBarMenus/>\r\n\r\n\r\n\r\n            <div className=\"all-tickets-right-pair\">\r\n                <div className=\"all-tickets-navbar\">\r\n\r\n                    <div className=\"all-tickets-navbar-child\">\r\n                        <h1>{getText(\"SubNavbarMenu16\")}</h1>\r\n                        <AccountNavbar />\r\n                    </div>\r\n                </div>\r\n\r\n                <SubNavbarMenu/>\r\n\r\n\r\n                <div className='main-table-for-tickets'>\r\n\r\n            <table>\r\n\r\n                <tr className=\"main-table-header\">\r\n                    <th><input type=\"checkbox\"/></th>\r\n                    <th>\r\n                        {getText(\"SubNavbarMenu5\")}\r\n                    </th>\r\n                    <th>\r\n                        {getText(\"SubNavbarMenu6\")}\r\n                    </th>\r\n                    <th>\r\n                        {getText(\"SubNavbarMenu7\")}\r\n                    </th>\r\n                    <th>\r\n                        {getText(\"SubNavbarMenu8\")}\r\n                    </th>\r\n                    <th>\r\n                        {getText(\"SubNavbarMenu9\")}\r\n                    </th>\r\n                    <th>\r\n\r\n                    </th>\r\n                    <th></th>\r\n                </tr>\r\n\r\n\r\n                {\r\n                    props.PendingCount.data?.map((item, index) => (\r\n                        <tr key={index}>\r\n                            <td>\r\n                                <input type=\"checkbox\"/>\r\n                            </td>\r\n                            <td className=\"requester-name\" onClick={() => visitCommit(item.id)}\r\n                                style={{cursor: \"pointer\"}}>\r\n                                <h4>{item.client_full_name}</h4>\r\n                                <span>{item.sender_name}</span>\r\n                            </td>\r\n                            <td className=\"subject-name\">\r\n\r\n                                {item.priority === 1 ? <img src=\"/img/icon/open.png\" alt=\"\"/> : item.priority === 2 ?\r\n                                    <img src=\"/img/icon/fast.png\" alt=\"\"/> :\r\n                                    item.priority === 0 ?\r\n                                        <img src=\"/img/icon/onHold.png\" alt=\"\"/> : item.priority === -1 ?\r\n                                        <img src=\"/img/icon/close.png\" alt=\"\"/> : item.priority === -2 ?\r\n                                            <img src=\"/img/icon/pw.png\" alt=\"\"/> : ''}\r\n\r\n\r\n                                {\" \" + item.subject.length > 20 ? item.subject.slice(0, 20) + \"...\" : item.subject}\r\n                            </td>\r\n\r\n                            <td>\r\n                                {item.receiver_name}\r\n                            </td>\r\n                            <td><span\r\n                                className={item.ticket_status_name === \"Open\" ?\r\n                                    \"open\" : item.ticket_status_name === \"Closed\" ?\r\n                                        \"closed\" : item.ticket_status_name === \"Pending\" ?\r\n                                            \"pending\" : \"\"}>\r\n                                {item.ticket_status_name}\r\n\r\n\r\n                    </span>\r\n                            </td>\r\n                            <td>\r\n\r\n\r\n                                <h4 style={{\r\n                                    fontSize: \"14px\",\r\n                                    marginBottom: \"0\"\r\n                                }}>   {item.date_created.slice(11, 16)} </h4>\r\n                                <span style={{\r\n                                    color: \"#8E8C94\",\r\n                                    fontSize: \"12px\"\r\n                                }}> {item.date_created.slice(0, 10)}</span>\r\n\r\n                            </td>\r\n                            <td className=\"all-tickets-event-menu-father dropdown\">\r\n                                <button className=\"all-tickets-event dropbtn\">\r\n                                    <img src=\"/img/icon/verDots.png\" alt=\"\"/>\r\n                                </button>\r\n\r\n\r\n                                <div className=\"all-tickets-event-menu dropdown-content\">\r\n\r\n\r\n                                    {\r\n                                        props.ticketStatusList.map(item2 => (\r\n                                            <button\r\n                                                onClick={() => changeStatusFunction(item.id, item2.id)}>{item2.name}</button>\r\n                                        ))\r\n                                    }\r\n\r\n                                    <img src=\"/img/icon/Divider.png\" alt=\"\"/>\r\n\r\n\r\n                                    <button onClick={() => changePrFunction(item.id, 2)}><img src=\"/img/icon/fast.png\"\r\n                                                                                              className=\"mr-2\"\r\n                                                                                              alt=\"\"/> {getText(\"SubNavbarMenu10\")}\r\n                                    </button>\r\n                                    <button onClick={() => changePrFunction(item.id, 1)}><img src=\"/img/icon/open.png\"\r\n                                                                                              className=\"mr-2\"\r\n                                                                                              alt=\"\"/> {getText(\"SubNavbarMenu11\")}\r\n                                    </button>\r\n                                    <button onClick={() => changePrFunction(item.id, 0)}><img src=\"/img/icon/onHold.png\"\r\n                                                                                              className=\"mr-2\"\r\n                                                                                              alt=\"\"/> {getText(\"SubNavbarMenu12\")}\r\n                                    </button>\r\n                                    <button onClick={() => changePrFunction(item.id, -1)}><img src=\"/img/icon/close.png\"\r\n                                                                                               className=\"mr-2\"\r\n                                                                                               alt=\"\"/> {getText(\"SubNavbarMenu13\")}\r\n                                    </button>\r\n                                    <button onClick={() => changePrFunction(item.id, -2)}><img src=\"/img/icon/pw.png\"\r\n                                                                                               className=\"mr-2\"\r\n                                                                                               alt=\"\"/> {getText(\"SubNavbarMenu14\")}\r\n                                    </button>\r\n\r\n\r\n                                </div>\r\n\r\n\r\n                            </td>\r\n                            {/*<td> </td>*/}\r\n\r\n                        </tr>\r\n\r\n                    ))\r\n\r\n\r\n                }\r\n\r\n\r\n            </table>\r\n\r\n\r\n            {\r\n                props.PendingCount ?  props.PendingCount.last_page > 1 ?\r\n\r\n                    <ul className=\"pageNumbersManual d-flex    \">\r\n                        <li className=\"arrow\" >\r\n                            <button   onClick={() => props.PendingNextFunc(props.PendingCount?.previous)}><img src=\"/img/icon/left.svg\" alt=\"\"/></button>\r\n\r\n                        </li>\r\n                        {\r\n                            pagesNumbers.map(item => (\r\n                                <button className={ \"numbers \"+ (props.pActive ? props.pActive === item+1 ? \"selected\" : \"\" : \"\")}\r\n                                        onClick={() => props.PendingNext(item+1)}>\r\n                                    {item + 1}\r\n                                </button>\r\n                            ))\r\n                        }\r\n                        <li className=\"arrow\" >\r\n                            <button onClick={() => props.PendingNextFunc(props.PendingCount?.next)}><img src=\"/img/icon/right.svg\" alt=\"\"/></button>\r\n                        </li>\r\n                    </ul>\r\n                    :\r\n                    \"\"\r\n                    :\r\n                    \"\"\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n//\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n        getTickets: state.ticketData.getTickets,\r\n        getTicketsSearch: state.ticketData.getTicketsSearch,\r\n        AllCount: state.ticketData.AllCount,\r\n        ticketStatusList: state.ticketData.ticketStatusList,\r\n        pageIndex: state.ticketData.pageIndex,\r\n        PendingCount: state.ticketData.PendingCount,\r\n        pActive: state.ticketData.pActive,\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    getAllTicket,\r\n    changeTicketPr,\r\n\r\n    getCommit,\r\n    changeTicketStatus,\r\n    getStatusList,\r\n    PendingNext,\r\n    PendingNextFunc,\r\n    PendingStatusCount,\r\n    updateState,\r\n\r\n})(PendingFilter);\r\n","import React, {useEffect, useState} from 'react';\r\nimport {\r\n    changeTicketStatus,\r\n    getCommit,\r\n    getAllTicket,\r\n    getStatusList,\r\n\r\n    changeTicketPr,\r\n    PendingStatusCount,\r\n    PendingNext,\r\n    PendingNextFunc,\r\n    OpenStatusCount, OpenNext, OpenNextFunc, updateState\r\n} from \"../../redux/action/TicketsAction\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link, Switch, useHistory} from \"react-router-dom\";\r\nimport PrivateRoute from \"../../component/PrivateRoute\";\r\nimport ClosedFilter from \"./ClosedFilter\";\r\nimport PendingFilter from \"./PendingFilter\";\r\nimport Commit from \"./Commit\";\r\nimport SideBarMenus from \"../../component/SideBarMenus\";\r\nimport AccountNavbar from \"../../component/AccountNavbar\";\r\nimport SubNavbarMenu from \"../../component/SubNavbarMenu\";\r\nimport {getText} from \"../../locales\";\r\n\r\n\r\nconst OpenFIlter = (props) => {\r\n\r\n    // const [data, setData] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        // props.getAllTicket(props.pageIndex)\r\n        // props.getStatusList()\r\n        props.getCommit()\r\n\r\n        props.changeTicketStatus()\r\n        props.OpenStatusCount()\r\n\r\n\r\n         props.updateState({pActive: null })\r\n\r\n    }, [])\r\n\r\n\r\n    let history = useHistory();\r\n    const changeStatusFunction = (data, values) => {\r\n        props.changeTicketStatus(data, values)\r\n\r\n    }\r\n\r\n\r\n    const changePrFunction = (data, values) => {\r\n        props.changeTicketPr(data, values)\r\n\r\n    }\r\n\r\n    const visitCommit = (values, events) => {\r\n        props.getCommit(values, history)\r\n    }\r\n\r\n\r\n    const filterList = () => {\r\n\r\n    }\r\n\r\n\r\n\r\n    let pagesNumbers = []\r\n    // const [pagesNumbers, setPagesNumbers] = useState([])\r\n    for (let i =0; i < props.openCount.last_page; i++){\r\n        pagesNumbers.push(i);\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"all-tickets d-flex \">\r\n\r\n\r\n\r\n            <SideBarMenus/>\r\n\r\n\r\n\r\n            <div className=\"all-tickets-right-pair\">\r\n                <div className=\"all-tickets-navbar\">\r\n\r\n                    <div className=\"all-tickets-navbar-child\">\r\n                        <h1>{getText(\"SubNavbarMenu17\")}</h1>\r\n                        <AccountNavbar />\r\n                    </div>\r\n                </div>\r\n\r\n                <SubNavbarMenu/>\r\n\r\n\r\n                <div className='main-table-for-tickets'>\r\n\r\n            <table>\r\n\r\n                <tr className=\"main-table-header\">\r\n                    <th><input type=\"checkbox\"/></th>\r\n                    <th>\r\n                        {getText(\"SubNavbarMenu5\")}\r\n                    </th>\r\n                    <th>\r\n                        {getText(\"SubNavbarMenu6\")}\r\n                    </th>\r\n                    <th>\r\n                        {getText(\"SubNavbarMenu7\")}\r\n                    </th>\r\n                    <th>\r\n                        {getText(\"SubNavbarMenu8\")}\r\n                    </th>\r\n                    <th>\r\n                        {getText(\"SubNavbarMenu9\")}\r\n                    </th>\r\n                    <th>\r\n\r\n                    </th>\r\n                    <th></th>\r\n                </tr>\r\n\r\n\r\n                {\r\n                    props.openCount.data?.map((item, index) => (\r\n                        <tr key={index}>\r\n                            <td>\r\n                                <input type=\"checkbox\"/>\r\n                            </td>\r\n                            <td className=\"requester-name\" onClick={() => visitCommit(item.id)}\r\n                                style={{cursor: \"pointer\"}}>\r\n                                <h4>{item.client_full_name}</h4>\r\n                                <span>{item.sender_name}</span>\r\n                            </td>\r\n                            <td className=\"subject-name\">\r\n\r\n                                {item.priority === 1 ? <img src=\"/img/icon/open.png\" alt=\"\"/> : item.priority === 2 ?\r\n                                    <img src=\"/img/icon/fast.png\" alt=\"\"/> :\r\n                                    item.priority === 0 ?\r\n                                        <img src=\"/img/icon/onHold.png\" alt=\"\"/> : item.priority === -1 ?\r\n                                        <img src=\"/img/icon/close.png\" alt=\"\"/> : item.priority === -2 ?\r\n                                            <img src=\"/img/icon/pw.png\" alt=\"\"/> : ''}\r\n\r\n\r\n                                {\" \" + item.subject.length > 20 ? item.subject.slice(0, 20) + \"...\" : item.subject}\r\n                            </td>\r\n\r\n                            <td>\r\n                                {item.receiver_name}\r\n                            </td>\r\n                            <td><span\r\n                                className={item.ticket_status_name === \"Open\" ?\r\n                                    \"open\" : item.ticket_status_name === \"Closed\" ?\r\n                                        \"closed\" : item.ticket_status_name === \"Pending\" ?\r\n                                            \"pending\" : \"\"}>\r\n                                {item.ticket_status_name}\r\n\r\n\r\n                    </span>\r\n                            </td>\r\n                            <td>\r\n\r\n\r\n                                <h4 style={{\r\n                                    fontSize: \"14px\",\r\n                                    marginBottom: \"0\"\r\n                                }}>   {item.date_created.slice(11, 16)} </h4>\r\n                                <span style={{\r\n                                    color: \"#8E8C94\",\r\n                                    fontSize: \"12px\"\r\n                                }}> {item.date_created.slice(0, 10)}</span>\r\n\r\n                            </td>\r\n                            <td className=\"all-tickets-event-menu-father dropdown\">\r\n                                <button className=\"all-tickets-event dropbtn\">\r\n                                    <img src=\"/img/icon/verDots.png\" alt=\"\"/>\r\n                                </button>\r\n\r\n\r\n                                <div className=\"all-tickets-event-menu dropdown-content\">\r\n\r\n\r\n                                    {\r\n                                        props.ticketStatusList.map(item2 => (\r\n                                            <button\r\n                                                onClick={() => changeStatusFunction(item.id, item2.id)}>{item2.name}</button>\r\n                                        ))\r\n                                    }\r\n\r\n                                    <img src=\"/img/icon/Divider.png\" alt=\"\"/>\r\n\r\n\r\n                                    <button onClick={() => changePrFunction(item.id, 2)}><img src=\"/img/icon/fast.png\"\r\n                                                                                              className=\"mr-2\"\r\n                                                                                              alt=\"\"/> {getText(\"SubNavbarMenu10\")}\r\n                                    </button>\r\n                                    <button onClick={() => changePrFunction(item.id, 1)}><img src=\"/img/icon/open.png\"\r\n                                                                                              className=\"mr-2\"\r\n                                                                                              alt=\"\"/> {getText(\"SubNavbarMenu11\")}\r\n                                    </button>\r\n                                    <button onClick={() => changePrFunction(item.id, 0)}><img src=\"/img/icon/onHold.png\"\r\n                                                                                              className=\"mr-2\"\r\n                                                                                              alt=\"\"/> {getText(\"SubNavbarMenu12\")}\r\n                                    </button>\r\n                                    <button onClick={() => changePrFunction(item.id, -1)}><img src=\"/img/icon/close.png\"\r\n                                                                                               className=\"mr-2\"\r\n                                                                                               alt=\"\"/> {getText(\"SubNavbarMenu13\")}\r\n                                    </button>\r\n                                    <button onClick={() => changePrFunction(item.id, -2)}><img src=\"/img/icon/pw.png\"\r\n                                                                                               className=\"mr-2\"\r\n                                                                                               alt=\"\"/> {getText(\"SubNavbarMenu14\")}\r\n                                    </button>\r\n\r\n\r\n                                </div>\r\n\r\n\r\n                            </td>\r\n                            {/*<td> </td>*/}\r\n\r\n                        </tr>\r\n\r\n                    ))\r\n\r\n\r\n                }\r\n\r\n\r\n            </table>\r\n\r\n\r\n            {\r\n                props.openCount ?  props.openCount.last_page > 1 ?\r\n                    <ul className=\"pageNumbersManual d-flex    \">\r\n                        <li className=\"arrow\" >\r\n                            <button   onClick={() => props.OpenNextFunc(props.openCount?.previous)}><img src=\"/img/icon/left.svg\" alt=\"\"/></button>\r\n\r\n                        </li>\r\n                        {\r\n                            pagesNumbers.map(item => (\r\n                                <button className={ \"numbers \"+ (props.pActive ? props.pActive === item+1 ? \"selected\" : \"\" : \"\")}\r\n                                        onClick={() => props.OpenNext(item+1)}>\r\n                                    {item + 1}\r\n                                </button>\r\n                            ))\r\n                        }\r\n                        <li className=\"arrow\" >\r\n                            <button onClick={() => props.OpenNextFunc(props.openCount?.next)}><img src=\"/img/icon/right.svg\" alt=\"\"/></button>\r\n                        </li>\r\n                    </ul>\r\n                    :\r\n                    \"\"\r\n                    :\r\n                    \"\"\r\n\r\n            }\r\n\r\n\r\n\r\n        </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n//\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n        getTickets: state.ticketData.getTickets,\r\n        getTicketsSearch: state.ticketData.getTicketsSearch,\r\n        AllCount: state.ticketData.AllCount,\r\n        ticketStatusList: state.ticketData.ticketStatusList,\r\n        pageIndex: state.ticketData.pageIndex,\r\n        openCount: state.ticketData.openCount,\r\n        pActive: state.ticketData.pActive,\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    getAllTicket,\r\n    changeTicketPr,\r\n\r\n    getCommit,\r\n    updateState,\r\n    OpenStatusCount,\r\n    changeTicketStatus,\r\n    getStatusList,\r\n    OpenNext,\r\n    OpenNextFunc,\r\n    PendingStatusCount,\r\n\r\n})(OpenFIlter);\r\n","import React, {useEffect, useState} from 'react';\r\nimport {\r\n    changeTicketStatus,\r\n    getCommit,\r\n    getAllTicket,\r\n    getStatusList,\r\n\r\n    changeTicketPr,\r\n    ClosedStatusCount,\r\n    ClosedNext,\r\n    ClosedNextFunc,\r\n    updateState\r\n} from \"../../redux/action/TicketsAction\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link, Switch, useHistory} from \"react-router-dom\";\r\nimport SideBarMenus from \"../../component/SideBarMenus\";\r\nimport AccountNavbar from \"../../component/AccountNavbar\";\r\nimport SubNavbarMenu from \"../../component/SubNavbarMenu\";\r\nimport PrivateRoute from \"../../component/PrivateRoute\";\r\nimport PendingFilter from \"./PendingFilter\";\r\nimport OpenFilter from \"./OpenFilter\";\r\nimport {getText} from \"../../locales\";\r\n\r\n\r\nconst ClosedFilter = (props) => {\r\n\r\n\r\n    useEffect(() => {\r\n        // props.getAllTicket(props.pageIndex)\r\n        // props.getStatusList()\r\n        props.getCommit()\r\n\r\n        props.changeTicketStatus()\r\n        props.ClosedStatusCount()\r\n\r\n\r\n        props.updateState({pActive: null})\r\n\r\n    }, [])\r\n\r\n\r\n    let history = useHistory();\r\n    const changeStatusFunction = (data, values) => {\r\n        props.changeTicketStatus(data, values)\r\n\r\n    }\r\n\r\n\r\n    const changePrFunction = (data, values) => {\r\n        props.changeTicketPr(data, values)\r\n\r\n    }\r\n\r\n    const visitCommit = (values, events) => {\r\n        props.getCommit(values, history)\r\n    }\r\n\r\n\r\n    const filterList = () => {\r\n\r\n    }\r\n\r\n\r\n    let pagesNumbers = []\r\n    // const [pagesNumbers, setPagesNumbers] = useState([])\r\n    for (let i = 0; i < props.ClosedCount.last_page; i++) {\r\n        pagesNumbers.push(i);\r\n\r\n\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <div className=\"all-tickets d-flex \">\r\n\r\n\r\n\r\n            <SideBarMenus/>\r\n\r\n\r\n\r\n            <div className=\"all-tickets-right-pair\">\r\n                <div className=\"all-tickets-navbar\">\r\n\r\n                    <div className=\"all-tickets-navbar-child\">\r\n                        <h1>{getText(\"SubNavbarMenu15\")}</h1>\r\n                        <AccountNavbar />\r\n                    </div>\r\n                </div>\r\n\r\n                <SubNavbarMenu/>\r\n\r\n\r\n                <div className='main-table-for-tickets'>\r\n\r\n                    <table>\r\n\r\n                        <tr className=\"main-table-header\">\r\n                            <th><input type=\"checkbox\"/></th>\r\n                            <th>\r\n                                {getText(\"SubNavbarMenu5\")}\r\n                            </th>\r\n                            <th>\r\n                                {getText(\"SubNavbarMenu6\")}\r\n                            </th>\r\n                            <th>\r\n                                {getText(\"SubNavbarMenu7\")}\r\n                            </th>\r\n                            <th>\r\n                                {getText(\"SubNavbarMenu8\")}\r\n                            </th>\r\n                            <th>\r\n                                {getText(\"SubNavbarMenu9\")}\r\n                            </th>\r\n                            <th>\r\n\r\n                            </th>\r\n                            <th></th>\r\n                        </tr>\r\n\r\n\r\n                        {\r\n                            props.ClosedCount.data?.map((item, index) => (\r\n                                <tr key={index}>\r\n                                    <td>\r\n                                        <input type=\"checkbox\"/>\r\n                                    </td>\r\n                                    <td className=\"requester-name\" onClick={() => visitCommit(item.id)}\r\n                                        style={{cursor: \"pointer\"}}>\r\n                                        <h4>{item.client_full_name}</h4>\r\n                                        <span>{item.sender_name}</span>\r\n                                    </td>\r\n                                    <td className=\"subject-name\">\r\n\r\n                                        {item.priority === 1 ? <img src=\"/img/icon/open.png\" alt=\"\"/> : item.priority === 2 ?\r\n                                            <img src=\"/img/icon/fast.png\" alt=\"\"/> :\r\n                                            item.priority === 0 ?\r\n                                                <img src=\"/img/icon/onHold.png\" alt=\"\"/> : item.priority === -1 ?\r\n                                                <img src=\"/img/icon/close.png\" alt=\"\"/> : item.priority === -2 ?\r\n                                                    <img src=\"/img/icon/pw.png\" alt=\"\"/> : ''}\r\n\r\n\r\n                                        {\" \" + item.subject.length > 20 ? item.subject.slice(0, 20) + \"...\" : item.subject}\r\n                                    </td>\r\n\r\n                                    <td>\r\n                                        {item.receiver_name}\r\n                                    </td>\r\n                                    <td><span\r\n                                        className={item.ticket_status_name === \"Open\" ?\r\n                                            \"open\" : item.ticket_status_name === \"Closed\" ?\r\n                                                \"closed\" : item.ticket_status_name === \"Pending\" ?\r\n                                                    \"pending\" : \"\"}>\r\n                                {item.ticket_status_name}\r\n\r\n\r\n                    </span>\r\n                                    </td>\r\n                                    <td>\r\n\r\n\r\n                                        <h4 style={{\r\n                                            fontSize: \"14px\",\r\n                                            marginBottom: \"0\"\r\n                                        }}>   {item.date_created.slice(11, 16)} </h4>\r\n                                        <span style={{\r\n                                            color: \"#8E8C94\",\r\n                                            fontSize: \"12px\"\r\n                                        }}> {item.date_created.slice(0, 10)}</span>\r\n\r\n                                    </td>\r\n                                    <td className=\"all-tickets-event-menu-father dropdown\">\r\n                                        <button className=\"all-tickets-event dropbtn\">\r\n                                            <img src=\"/img/icon/verDots.png\" alt=\"\"/>\r\n                                        </button>\r\n\r\n\r\n                                        <div className=\"all-tickets-event-menu dropdown-content\">\r\n\r\n\r\n                                            {\r\n                                                props.ticketStatusList.map(item2 => (\r\n                                                    <button\r\n                                                        onClick={() => changeStatusFunction(item.id, item2.id)}>{item2.name}</button>\r\n                                                ))\r\n                                            }\r\n\r\n                                            <img src=\"/img/icon/Divider.png\" alt=\"\"/>\r\n\r\n\r\n                                            <button onClick={() => changePrFunction(item.id, 2)}><img src=\"/img/icon/fast.png\"\r\n                                                                                                      className=\"mr-2\"\r\n                                                                                                      alt=\"\"/> {getText(\"SubNavbarMenu10\")}\r\n                                            </button>\r\n                                            <button onClick={() => changePrFunction(item.id, 1)}><img src=\"/img/icon/open.png\"\r\n                                                                                                      className=\"mr-2\"\r\n                                                                                                      alt=\"\"/> {getText(\"SubNavbarMenu11\")}\r\n                                            </button>\r\n                                            <button onClick={() => changePrFunction(item.id, 0)}><img src=\"/img/icon/onHold.png\"\r\n                                                                                                      className=\"mr-2\"\r\n                                                                                                      alt=\"\"/> {getText(\"SubNavbarMenu12\")}\r\n                                            </button>\r\n                                            <button onClick={() => changePrFunction(item.id, -1)}><img src=\"/img/icon/close.png\"\r\n                                                                                                       className=\"mr-2\"\r\n                                                                                                       alt=\"\"/> {getText(\"SubNavbarMenu13\")}\r\n                                            </button>\r\n                                            <button onClick={() => changePrFunction(item.id, -2)}><img src=\"/img/icon/pw.png\"\r\n                                                                                                       className=\"mr-2\"\r\n                                                                                                       alt=\"\"/> {getText(\"SubNavbarMenu14\")}\r\n                                            </button>\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n                                    </td>\r\n                                    {/*<td> </td>*/}\r\n\r\n                                </tr>\r\n\r\n                            ))\r\n\r\n\r\n                        }\r\n\r\n\r\n                    </table>\r\n\r\n\r\n                    {\r\n                        props.ClosedCount ? props.ClosedCount.last_page > 1 ?\r\n                            <ul className=\"pageNumbersManual d-flex    \">\r\n                                <li className=\"arrow\">\r\n                                    <button onClick={() => props.ClosedNextFunc(props.ClosedCount?.previous)}><img\r\n                                        src=\"/img/icon/left.svg\" alt=\"\"/></button>\r\n\r\n                                </li>\r\n                                {\r\n                                    pagesNumbers.map(item => (\r\n                                        <button\r\n                                            className={\"numbers \" + (props.pActive ? props.pActive === item + 1 ? \"selected\" : \"\" : \"\")}\r\n                                            onClick={() => props.ClosedNext(item + 1)}>\r\n                                            {item + 1}\r\n                                        </button>\r\n                                    ))\r\n                                }\r\n                                <li className=\"arrow\">\r\n                                    <button onClick={() => props.ClosedNextFunc(props.ClosedCount?.next)}><img\r\n                                        src=\"/img/icon/right.svg\" alt=\"\"/></button>\r\n                                </li>\r\n                            </ul>\r\n                            :\r\n                            \"\"\r\n                            :\r\n                            \"\"\r\n\r\n                    }\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n//\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n        getTickets: state.ticketData.getTickets,\r\n        getTicketsSearch: state.ticketData.getTicketsSearch,\r\n        AllCount: state.ticketData.AllCount,\r\n        ticketStatusList: state.ticketData.ticketStatusList,\r\n        pageIndex: state.ticketData.pageIndex,\r\n        ClosedCount: state.ticketData.ClosedCount,\r\n        pActive: state.ticketData.pActive,\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    getAllTicket,\r\n    changeTicketPr,\r\n\r\n    getCommit,\r\n    changeTicketStatus,\r\n    getStatusList,\r\n    ClosedNext,\r\n    updateState,\r\n    ClosedNextFunc,\r\n    ClosedStatusCount,\r\n\r\n})(ClosedFilter);\r\n","import React from 'react';\r\nimport SideBarMenus from \"../../component/SideBarMenus\";\r\nimport AccountNavbar from \"../../component/AccountNavbar\";\r\nimport SubNavbarMenu from \"../../component/SubNavbarMenu\";\r\nimport MainTableForTickets from \"../../component/MainTableForTickets\";\r\nimport Agents from \"../Agents\";\r\nimport PrivateRoute from \"../../component/PrivateRoute\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport ClosedFilter from \"./ClosedFilter\";\r\nimport PendingFilter from \"./PendingFilter\";\r\nimport OpenFilter from \"./OpenFilter\";\r\nimport Commit from \"./Commit\";\r\n\r\nconst ByFilter = () => {\r\n    return (\r\n        // <div className=\"all-tickets d-flex \">\r\n        //\r\n        //\r\n        //\r\n        //     <SideBarMenus/>\r\n        //\r\n        //\r\n        //\r\n        //     <div className=\"all-tickets-right-pair\">\r\n        //         <div className=\"all-tickets-navbar\">\r\n        //\r\n        //             <div className=\"all-tickets-navbar-child\">\r\n        //                 <h1>All tickets</h1>\r\n        //                 <AccountNavbar />\r\n        //             </div>\r\n        //         </div>\r\n        //\r\n        //         <SubNavbarMenu/>\r\n\r\n\r\n\r\n                <Switch>\r\n                    <PrivateRoute  path=\"/tickets/filter/closed\"    component={ClosedFilter} />\r\n                    <PrivateRoute  path=\"/tickets/filter/pending\"    component={PendingFilter} />\r\n                    <PrivateRoute  path=\"/tickets/filter/open\"    component={OpenFilter} />\r\n                    <PrivateRoute path=\"/tickets/filter/commit/:id\"  exact component={Commit}/>\r\n\r\n                </Switch>\r\n        //     </div>\r\n        //\r\n        //\r\n        // </div>\r\n    );\r\n};\r\n\r\nexport default ByFilter;","import React, {useEffect, useState} from 'react';\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport AccountNavbar from \"../../component/AccountNavbar\";\r\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\r\nimport {connect} from \"react-redux\";\r\nimport {getActiveTeamList, updateState} from \"../../redux/action/CreateTeamAction\";\r\nimport {getStatusList, createTIcketUpdate} from \"../../redux/action/TicketsAction\";\r\nimport {getAllAgents} from \"../../redux/action/createAgentAction\";\r\nimport {getText} from \"../../locales\";\r\n\r\nconst NewTicketUpdate = (props) => {\r\n    const [maskNumber, setMaskNumber] = useState(null)\r\n    useEffect(() => {\r\n        props.getActiveTeamList()\r\n        props.getStatusList()\r\n        props.getAllAgents()\r\n    }, [])\r\n    const ticketForm = (events, values) => {\r\n        props.createTIcketUpdate(values, props.history, props.ticketInfoObject.id)\r\n    }\r\n    const selectTeam = (data) => {\r\n        props.updateState({getAllAgentsList: props.activeAgentslList.filter(item => item.id == data.target.value)[0].agents})\r\n    }\r\n    let history = useHistory()\r\n    return (\r\n        <div className='new-ticket-create-page w-100'>\r\n            <div className=\"all-tickets-navbar\">\r\n                <div className=\"all-tickets-navbar-child\">\r\n                    <button onClick={() => history.goBack()} className='bg-transparent arrow-left-back'><img\r\n                        src=\"/img/icon/arrowleft.png\" alt=\"back img\"/>{getText(\"NewTicket11\")}\r\n                    </button>\r\n                    <h1>{getText(\"NewTicket0\")}</h1>\r\n                    <AccountNavbar/>\r\n                </div>\r\n            </div>\r\n            <AvForm className=\"create-team-inputs\" model={props.ticketInfoObject} onValidSubmit={ticketForm}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <h3>{getText(\"NewTicket2\")}</h3>\r\n                        <AvField type=\"text\" name=\"subject\" required className=\"form-control\" placeholder={getText(\"NewTicket2\")}/>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <h3>{getText(\"Type\")}</h3>\r\n                        <AvField  type=\"select\" name='from_where' required>\r\n\r\n                            <option value=\"0\" selected>Incoming</option>\r\n                            <option value=\"1\">Outgoing</option>\r\n                            <option value=\"3\">Social Media</option>\r\n                        </AvField>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <h3>{getText(\"NewTicket3\")}</h3>\r\n                        <AvField type=\"text\" name=\"client_full_name\" className=\"form-control\" required\r\n                                 placeholder={getText(\"NewTicket3\")}/>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <h3>{getText(\"NewTicket4\")}</h3>\r\n                        <AvField   id='numberInput'  value={props.ticketInfoObject.client_phone_number ? props.ticketInfoObject.client_phone_number : \"+998\" } type=\"text\" name=\"client_phone_number\"\r\n                                   className=\"form-control\" required placeholder={getText(\"NewTicket4\")}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <h3>{getText(\"NewTicket5\")}</h3>\r\n                        <div className=\"multi-select2\">\r\n                            <AvField onChange={selectTeam} type=\"select\" name='team' required>\r\n                                <option value=\"0\"></option>\r\n                                {\r\n                                    props.activeAgentslList.map(item => (\r\n                                        <option value={item.id}>{item.name}</option>\r\n                                    ))\r\n                                }\r\n                            </AvField>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <h3>{getText(\"NewTicket6\")}</h3>\r\n                        <div className=\"multi-select\">\r\n                            <img src=\"/img/icon/account3.png\" className=\"select-img-account\" alt=\"account\"/>\r\n                            <AvField name=\"receiver\" type=\"select\" className=\"pl-5\" required>\r\n                                <option value=\"0\"></option>\r\n                                {\r\n                                    props.getAllAgentsList.map(item => (\r\n                                        <option value={item.id}>{item.full_name}</option>\r\n                                    ))\r\n                                }\r\n                            </AvField>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <h3>{getText(\"NewTicket7\")}</h3>\r\n                        <div className=\"multi-select2\">\r\n                            <AvField name=\"ticket_status\" type=\"select\" required>\r\n                                <option value=\"0\"></option>\r\n                                {\r\n                                    props.ticketStatusList.map(item => (\r\n                                        <option value={item.id}>{item.name}</option>\r\n                                    ))\r\n                                }\r\n                            </AvField>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <h3>{getText(\"NewTicket8\")}</h3>\r\n                        <div className=\"multi-select2\">\r\n                            <AvField name=\"priority\" type=\"select\" required>\r\n                                <option></option>\r\n                                <option value=\"2\">Urgent</option>\r\n                                <option value=\"1\">High</option>\r\n                                <option value=\"0\">Medium</option>\r\n                                <option value=\"-1\">low</option>\r\n                                <option value=\"-2\">Very low</option>\r\n                            </AvField>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <AvField\r\n                            type='textarea'\r\n                            name=\"content\"\r\n                            style={{height: '200px'}}\r\n                            required\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"create-button-group\">\r\n                    <Link to='/agents'>{getText(\"NewTicket9\")}</Link>\r\n                    <button className=\"btn\">\r\n                        {getText(\"Update\")}\r\n                        <img src=\"/img/icon/rightArrow.png\" alt=\"\"/>\r\n                    </button>\r\n                </div>\r\n            </AvForm>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        activeAgentslList: state.createTeamData.activeAgentslList,\r\n        getAllAgentsList: state.createAgentData.getAllAgentsList,\r\n        ticketStatusList: state.ticketData.ticketStatusList,\r\n        ticketInfoObject: state.ticketData.ticketInfoObject,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    createTIcketUpdate,\r\n    getAllAgents,\r\n    updateState,\r\n    getActiveTeamList,\r\n    getStatusList\r\n})(NewTicketUpdate);","import SideBar from \"./component/SideBar\";\n\nimport {\n    Switch,\n    Route, BrowserRouter,\n\n} from \"react-router-dom\";\nimport React, {useEffect} from \"react\";\nimport Agents from \"./pages/Agents\";\nimport CreateTeamPair from \"./pages/agents/CreateTeamPair\";\nimport CreateAgentPair from \"./pages/agents/CreateAgentPair\";\nimport Login from \"./component/Login\";\nimport Report from \"./pages/Report\";\nimport InfoAccount from \"./component/InfoAccount\";\nimport NewTicket from \"./pages/tickets/NewTicket\";\nimport Verified from \"./component/Verified\";\nimport {ToastContainer} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport PrivateRoute from \"./component/PrivateRoute\";\nimport {TOKEN_NAME} from \"./tools/constants\";\nimport AllTickets from \"./pages/tickets/AllTickets\";\nimport VerifiedChangePassword from \"./component/VerifiedChangePassword\";\nimport Commit from \"./pages/tickets/Commit\";\nimport TicketsToHandle from \"./pages/tickets/TicketsToHandle\";\nimport TicketOpen from \"./pages/tickets/TicketOpen\";\nimport TicketLastDays from \"./pages/tickets/TicketLastDays\";\nimport ForgotPassword from \"./component/ForgotPassword\";\nimport InfoAccountEdit from \"./component/InfoAccountEdit\";\nimport ByFilter from \"./pages/tickets/ByFilter\";\nimport NewTicketUpdate from \"./pages/tickets/NewTicketUpdate\";\n\nfunction App() {\n\n\n  return (\n   <div>\n       <BrowserRouter  >\n           <div className=\"d-flex\">\n\n\n\n               {\n                   window.location.pathname !== \"/\" &&  localStorage.getItem(TOKEN_NAME) &&\n                   window.location.pathname !== \"/change-password-confirm\" &&\n                   window.location.pathname !== \"/user/v1/verify-email/\" &&\n                   window.location.pathname !== \"/forgot-password\" ?\n                   <>\n                       <SideBar/>\n                   </> : \"\"\n\n\n               }\n\n\n\n\n\n\n               <Switch>\n                   <Route path=\"/\" exact component={Login} />\n                   <Route path=\"/forgot-password\" exact component={ForgotPassword} />\n                   <PrivateRoute path=\"/tickets\" exact component={AllTickets} />\n                   <PrivateRoute path=\"/tickets/all-tickets\" exact component={AllTickets} />\n                   <PrivateRoute path=\"/tickets/filter\"   component={ByFilter} />\n                   <PrivateRoute path=\"/tickets/tickets-to-handle\" exact component={TicketsToHandle} />\n                   <PrivateRoute path=\"/tickets/open-tickets\" exact component={TicketOpen} />\n                   <PrivateRoute path=\"/tickets/last-days\" exact component={TicketLastDays} />\n                   <PrivateRoute path=\"/tickets/new-ticket\" exact component={NewTicket} />\n                   <PrivateRoute path=\"/tickets/new-ticket-update\" exact component={NewTicketUpdate} />\n                   <Route path=\"/:user/v1/verify-email/\" exact component={Verified} />\n\n\n\n\n                   <Route path=\"/:change-password-confirm\" exact component={VerifiedChangePassword} />\n\n\n\n\n                   <PrivateRoute path=\"/agents\" exact component={Agents}/>\n                   <PrivateRoute path=\"/tickets/commit/:id\" exact component={Commit}/>\n                   <PrivateRoute path=\"/commit/:id\" exact component={Commit}/>\n                   {/*<PrivateRoute path=\"/tickets/filter/commit/:id\"  exact component={CommitForFilter}/>*/}\n                   <PrivateRoute path=\"/report\" exact component={Report}/>\n                   <PrivateRoute path=\"/info-account\" exact component={InfoAccount}/>\n                   <PrivateRoute path=\"/tickets/info-account\" exact component={InfoAccount}/>\n                   <PrivateRoute path=\"/tickets/filter/info-account\" exact component={InfoAccount}/>\n                   <PrivateRoute path=\"/agents/info-account-edit/:id\" exact component={InfoAccountEdit}/>\n                   <PrivateRoute path={'/agents/create-team/'} exact component={CreateTeamPair}/>\n                   <PrivateRoute path=\"/agents/create-agent\" exact component={CreateAgentPair}/>\n\n\n\n               </Switch>\n           </div>\n\n       </BrowserRouter>\n\n\n       <ToastContainer/>\n\n   </div>\n\n  );\n}\n\nexport default App;\n","import {LOGIN} from \"../actionTypes/authType\";\n\nconst initialState = {\n    isLoading: false,\n}\n\nexport const loginReducer = (state = initialState, action) => {\n\n    switch (action.type){\n        case LOGIN:\n            return {...state, isLoading: !state.isLoading}\n            break;\n\n        default: return state;\n    }\n}","import {UPDATE_STATE} from \"../actionTypes/createAgentType\";\n\n\nconst initialState ={\n\n    createAgentObject: {},\n    getAccount: {},\n    getAccountForEdit: {},\n    getAllAgentsList: [],\n    getAllAgentsListCount: null,\n    topUsers: []\n}\nexport const createAgentReducer = (state= initialState, action) => {\n    switch (action.type){\n        case UPDATE_STATE:\n            return {...state, ...action.payload}\n        default: return state;\n    }\n}\n","import {UPDATE_STATE} from \"../actionTypes/createAgentType\";\r\n\r\n\r\nconst initialState ={\r\n\r\n    getTickets: [],\r\n    getTickets2: [],\r\n    changeGetTickets2: [],\r\n    getTicketsSearch: [],\r\n    getOpenTickets: [],\r\n    getLastDaysTickets: [],\r\n    getTicketsToHandle: [],\r\n    ticketStatusList: [],\r\n    commitList: [],\r\n    ticketInfoObject: {},\r\n    pageIndex: 1,\r\n    btc: {},\r\n    boc: {},\r\n    bot: {},\r\n    openCount: [],\r\n    ClosedCount: [],\r\n    PendingCount: [],\r\n    AllCount: [],\r\n    selectedCommitId: {},\r\n    subAllTickets: [],\r\n    subOpen: [],\r\n    subPending: [],\r\n    subClosed: [],\r\n    selectTeamReducer: {},\r\n    todayNoOpened: {},\r\n    pActive: null,\r\n    forSerPag: false,\r\n    forSerPagfilter: [],\r\n    forSerPagPriority: null,\r\n    agentModal: false,\r\n    getFUllMonth: [],\r\n    UrgentCount : 0,\r\n    HighCount: 0,\r\n    MediumCount: 0,\r\n    LowCount: 0,\r\n    VeryLowCount: 0,\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\nexport const TicketsReducer = (state= initialState, action) => {\r\n    switch (action.type){\r\n        case UPDATE_STATE:\r\n            return {...state, ...action.payload}\r\n        default: return state;\r\n    }\r\n}\r\n","import {combineReducers} from \"redux\";\nimport {loginReducer} from \"./authReducer\";\nimport {createAgentReducer} from \"./createAgentReducer\";\nimport {createTeamReducer} from \"./createTeamReducer\";\nimport {TicketsReducer} from \"./TicketsReducer\";\n\nexport const rootReducer = combineReducers({\n\n    login: loginReducer,\n    createAgentData: createAgentReducer,\n    createTeamData: createTeamReducer,\n    ticketData: TicketsReducer,\n\n});","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './component/main.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {Provider} from \"react-redux\";\nimport {applyMiddleware, compose, createStore} from \"redux\";\nimport {rootReducer} from \".//redux/reducer/rootReducer\"\nimport reportWebVitals from './reportWebVitals';\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk)));\n\n\n     // const store = createStore(rootReducer, compose(applyMiddleware(thunk),\n     // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\n\n\n\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}