{"version":3,"sources":["component/SideBar.js","tools/constants.js","redux/actionTypes/authType.js","redux/actionTypes/createAgentType.js","redux/action/TicketsAction.js","redux/action/createAgentAction.js","component/AccountNavbar.js","component/SubNavbarMenu.js","component/MainTableForTickets.js","component/SideBarMenus.js","redux/action/CreateTeamAction.js","pages/agents/AgentsTable.js","pages/agents/AgentsTeamTable.js","pages/agents/AgentsDetails.js","pages/Agents.js","pages/agents/CreateTeamPair.js","pages/agents/CreateAgentPair.js","redux/action/authAction.js","component/Login.js","pages/Report/PieChart.js","pages/Report/ColumnChart.js","pages/Report/RadialBars.js","pages/Report/Permission.js","pages/Report/Priority.js","pages/Report.js","component/InfoAccount.js","pages/tickets/NewTicket.js","component/Verified.js","component/NotFound.js","component/PrivateRoute.js","pages/tickets/AllTickets.js","component/VerifiedChangePassword.js","pages/tickets/TicketInfoRightPair.js","pages/tickets/Commit.js","component/TicketsHandleTable.js","pages/tickets/TicketsToHandle.js","component/OpenTicketsTable.js","pages/tickets/TicketOpen.js","component/LastDaysTabel.js","pages/tickets/TicketLastDays.js","component/ForgotPassword.js","component/InfoAccountEdit.js","App.js","redux/reducer/authReducer.js","redux/reducer/createAgentReducer.js","redux/reducer/createTeamReducer.js","redux/reducer/TicketsReducer.js","redux/reducer/rootReducer.js","reportWebVitals.js","index.js"],"names":["SideBar","className","to","activeClassName","src","alt","API_PATH","TOKEN_NAME","LOGIN","UPDATE_STATE","updateState","data","type","payload","getAllTicket","Number","pageIndex","dispatch","axios","get","headers","Authorization","localStorage","getItem","then","res","getTickets","AllCount","catch","err","console","log","getAllTicketToHandle","getTicketsToHandle","btc","getMyOpenTicket","getOpenTickets","boc","getTicketsSevenDays","end_date","start_date","getLastDaysTickets","bot","getStatusList","ticketStatusList","ticketInfo","ticketId","ticketInfoObject","changeTicketStatus","values","patch","ticket_status","changeTicketPr","priority","getCommit","history","commitList","selectedCommitId","push","OpenStatusCount","openCount","PendingStatusCount","PendingCount","ClosedStatusCount","ClosedCount","getInfoAccount","getAccount","changePasswordForSend","post","toast","success","getAllAgents","getAllAgentsList","updateUserInfo","AccountID","dataEmail","bigData","FormData","append","full_name","phone","team","put","updateInfoAccount","id","connect","state","createAgentData","ticketData","props","useEffect","filter","item","is_read","length","image","email","subAllTickets","subOpen","subClosed","subPending","todayTicket","today","todayNoOpened","date","Date","setDate","getDate","currentDate","day","month","getMonth","getFullYear","count","getAllTicketNext","getAllTicketPrev","useState","currentPage","setcurrentPage","handleClick","event","target","pages","i","Math","ceil","last_page","renderPageNumbers","map","number","onClick","useHistory","changePrFunction","index","style","cursor","client_full_name","sender_name","subject","receiver_name","ticket_status_name","fontSize","marginBottom","date_created","slice","color","item2","name","previous","next","getAllTicketForSearch","newArr","includes","filterStatusFunction","byName","finalDate","onChange","e","value","placeholder","getActiveTeamList","activeAgentslList","role","createTeamData","agents_count","data-toggle","href","aria-haspopup","aria-expanded","aria-labelledby","createTeamObject","createTeam","description","error","onValidSubmit","createAgentObject","createAgent","password","password2","LoginUser","authData","setItem","tokens","access","window","location","reload","isLoading","login","events","required","PieChart","series","options","chart","width","dataLabels","enabled","responsive","breakpoint","legend","show","position","offsetY","height","class","this","Component","ColumnChart","plotOptions","bar","horizontal","columnWidth","endingShape","stroke","colors","xaxis","categories","yaxis","title","text","fill","opacity","dropShadow","top","left","blur","grid","row","column","tooltip","y","formatter","val","RadialBars","radialBar","total","label","w","Permission","Priority","Report","saveFile","accountId","files","disabled","classname","createTIcket","client_phone_number","content","receiver","onFocus","x","document","getElementById","addEventListener","replace","match","agents","Verified","token","URLSearchParams","search","NotFound","PrivateRoute","component","path","exact","VerifiedChangePassword","permission","setPermission","tokenST","setTokenST","uidb64ST","setUidb64ST","query","uidb64","Data","alert","pathname","split","pop","date_modified","from_where","team_name","sendCommit","scrollTo","status","url","URL","last","substr","lastIndexOf","inputRef","useRef","agent","agent_name","message","ref","getMyOpenTicketPrev","getMyOpenTicketNext","TicketsToHandle","TicketOpen","getTicketsSevenDaysPrev","getTicketsSevenDaysNext","TicketLastDays","getAccountForEdit","getInfoAccountForEdit","infoId","saveFileForEdit","changeInfoAccountData","model","customInput","App","Login","ForgotPassword","AllTickets","NewTicket","Agents","Commit","InfoAccount","InfoAccountEdit","CreateTeamPair","CreateAgentPair","initialState","editModal","selectTeamReducer","rootReducer","combineReducers","action","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.1393d86f.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nimport {Link, NavLink} from \"react-router-dom\";\n\nconst SideBar = () => {\n\n\n    return (\n\n\n        <div className=\"side-bar\">\n          <div className=\"left-colums\">\n\n               <NavLink to='/tickets' className=\"side-bar-imgs  \" activeClassName=\"active-link\">\n\n                   <img src=\"/img/side-bar-first.png\"   alt=\"side-bar\"/>\n                </NavLink>\n\n              <NavLink to='/agents' className=\"side-bar-imgs\" activeClassName=\"active-link\">\n\n           <img src=\"/img/side-bar-second.png\"     alt=\"side-bar\"/>\n\n              </NavLink>\n              <NavLink to='/report' className=\"side-bar-imgs\" activeClassName=\"active-link\">\n\n                <img src=\"/img/side-bar-thrid.png\" alt=\"side-bar\"/>\n\n              </NavLink>\n          </div>\n\n\n\n\n        </div>\n    );\n};\n\nexport default SideBar;","export const API_PATH = \"http://w1.citynet.uz:4440/\";\n\n\nexport const TOKEN_NAME = \"help-desk\"","\nexport const LOGIN = \"LOGIN\"\n\nexport const CREATE_AGENT = \"CREATE_AGENT\"\nexport const CREATE_TICKET = \"CREATE_TICKET\"\n\n","export const UPDATE_STATE = \"UPDATE_STATE\";","import axios from \"axios\";\r\nimport {API_PATH, TOKEN_NAME} from \"../../tools/constants\";\r\nimport {UPDATE_STATE} from \"../actionTypes/createAgentType\";\r\nimport {toast} from \"react-toastify\";\r\nimport {CREATE_TICKET, LOGIN} from \"../actionTypes/authType\";\r\n\r\n\r\n\r\nexport function updateState (data){\r\n    return {\r\n        type: UPDATE_STATE,\r\n        payload: data\r\n    }\r\n}\r\n\r\n\r\nexport function getAllTicket(Number, data , pageIndex){\r\n    return function (dispatch){\r\n\r\n\r\n\r\n        axios.get(  API_PATH + 'ticket/v1/list/?page=' + (Number ? Number : '1')   , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({getTickets: res.data.data}));\r\n                dispatch(updateState({pageIndex: Number}));\r\n                dispatch(updateState({AllCount: res.data}));\r\n\r\n            })\r\n            .catch(err =>{\r\n                console.log(err)\r\n            })\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport function getAllTicketNext(data  ){\r\n    return function (dispatch){\r\n\r\n        axios.get(data   , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({getTickets: res.data.data}));\r\n\r\n\r\n\r\n            })\r\n            .catch(err =>{\r\n                console.log(err)\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function getAllTicketPrev(data  ){\r\n    return function (dispatch){\r\n\r\n\r\n        axios.get(data   , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({getTickets: res.data.data}));\r\n\r\n\r\n            })\r\n            .catch(err =>{\r\n                console.log(err)\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function getAllTicketForSearch(data, getTickets){\r\n    return function (dispatch){\r\n\r\n        console.log(getTickets)\r\n\r\n        let   newArr = getTickets.filter(item => item.subject.includes(data))\r\n\r\n        axios.get(API_PATH + 'ticket/v1/list/' , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n\r\n                dispatch(updateState({getTickets:  newArr}));\r\n\r\n\r\n            })\r\n            .catch(err =>{\r\n                console.log(err)\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function getAllTicketToHandle(Number){\r\n    return function (dispatch){\r\n\r\n        axios.get(API_PATH + 'ticket/v1/list-own/?page=' + (Number  ?  Number :  \"1\") , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({getTicketsToHandle: res.data.data}));\r\n                dispatch(updateState({btc: res.data}));\r\n\r\n            })\r\n            .catch(err =>{\r\n                console.log(err)\r\n            })\r\n    }\r\n}\r\n\r\nexport function getAllTicketToHandleNext(data  ){\r\n    return function (dispatch){\r\n\r\n        axios.get(data   , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({getTicketsToHandle: res.data.data}));\r\n\r\n\r\n\r\n            })\r\n            .catch(err =>{\r\n                console.log(err)\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function getAllTicketToHandlePrev(data  ){\r\n    return function (dispatch){\r\n\r\n\r\n        axios.get(data   , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({getTicketsToHandle: res.data.data}));\r\n\r\n\r\n            })\r\n            .catch(err =>{\r\n                console.log(err)\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function getMyOpenTicket(Number){\r\n    return function (dispatch){\r\n\r\n\r\n        axios.get(API_PATH + 'ticket/v1/list-own?status=Open&page=' +  (Number  ? Number : '1') , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({getOpenTickets: res.data.data}));\r\n                dispatch(updateState({boc: res.data}));\r\n\r\n            })\r\n            .catch(err =>{\r\n                console.log(err)\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport function getMyOpenTicketNext(data  ){\r\n    return function (dispatch){\r\n\r\n        axios.get(data   , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({getOpenTickets: res.data.data}));\r\n\r\n\r\n\r\n            })\r\n            .catch(err =>{\r\n                console.log(err)\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function getMyOpenTicketPrev(data  ){\r\n    return function (dispatch){\r\n\r\n\r\n        axios.get(data   , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({getOpenTickets: res.data.data}));\r\n\r\n\r\n            })\r\n            .catch(err =>{\r\n                console.log(err)\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function getTicketsSevenDays( end_date , start_date,  Number){\r\n    return function (dispatch){\r\n\r\n\r\n\r\n        axios.get(API_PATH + 'ticket/v1/list-own?start_date=' + end_date + '&end_date=' + start_date + \"&page=\" + (Number ? Number : \"1\")   , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({getLastDaysTickets: res.data.data}));\r\n                dispatch(updateState({bot: res.data}));\r\n\r\n\r\n\r\n            })\r\n            .catch(err =>{\r\n                console.log(err)\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function getTicketsSevenDaysNext(data  ){\r\n    return function (dispatch){\r\n\r\n        axios.get(data   , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({getLastDaysTickets: res.data.data}));\r\n\r\n\r\n\r\n            })\r\n            .catch(err =>{\r\n                console.log(err)\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport function getTicketsSevenDaysPrev(data  ){\r\n    return function (dispatch){\r\n\r\n\r\n        axios.get(data   , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({getLastDaysTickets: res.data.data}));\r\n\r\n\r\n            })\r\n            .catch(err =>{\r\n                console.log(err)\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport function getStatusList(){\r\n    return function (dispatch){\r\n        axios.get(API_PATH + \"ticket/v1/status-list/\", {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res=>{\r\n                dispatch(updateState({ticketStatusList: res.data.data}))\r\n                dispatch(updateState({ticketStatusList: res.data.data}))\r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function createTIcket(data, history){\r\n    return function (dispatch){\r\n\r\n\r\n        let ticketData = new FormData();\r\n        ticketData.append(\"client_full_name\", data.client_full_name)\r\n        ticketData.append(\"client_phone_number\", data.client_phone_number)\r\n        ticketData.append(\"subject\", data.subject)\r\n        ticketData.append(\"content\", data.content)\r\n        ticketData.append(\"team\", data.team)\r\n        ticketData.append(\"receiver\", data.receiver)\r\n        ticketData.append(\"ticket_status\", data.ticket_status)\r\n        ticketData.append(\"priority\", data.priority)\r\n\r\naxios.post(API_PATH + \"ticket/v1/create/\" , ticketData, {headers:  {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n    .then(res =>{\r\n\r\n\r\n\r\n        history.push(\"/tickets/all-tickets\")\r\n\r\n\r\n\r\n        toast.success(\"Ticket create\")\r\n\r\n    })\r\n    .catch(err =>{\r\n        toast.error(\"Ticket don't create\")\r\n\r\n    })\r\n\r\n\r\n}\r\n}\r\nexport function ticketInfo(ticketId){\r\n\r\n    return function (dispatch){\r\n        axios.get(API_PATH  + \"ticket/v1/retrieve-update/\" +  ticketId ,{headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res=>{\r\n                dispatch(updateState({ticketInfoObject: res.data.data}))\r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n            })\r\n    }\r\n}\r\n\r\nexport function changeTicketStatus(data, values){\r\n    return function (dispatch){\r\n\r\n\r\n\r\n        axios.patch(API_PATH + \"ticket/v1/retrieve-update/\" + data + \"/\", {ticket_status: values}, {headers:  {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res => {\r\n\r\n                dispatch(getAllTicket())\r\n                dispatch(getTicketsSevenDays())\r\n                dispatch(getMyOpenTicket())\r\n                dispatch(getAllTicketToHandle())\r\n                dispatch(ticketInfo())\r\n\r\n\r\n            })\r\n            .catch(err =>{\r\n\r\n                dispatch(getAllTicket())\r\n                dispatch(getTicketsSevenDays())\r\n                dispatch(getMyOpenTicket())\r\n                dispatch(getAllTicketToHandle())\r\n\r\n\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport function changeTicketPr(data, values){\r\n    return function (dispatch){\r\n\r\n\r\n\r\n        axios.patch(API_PATH + \"ticket/v1/retrieve-update/\" + data + \"/\", {priority: values}, {headers:  {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res => {\r\n\r\n                dispatch(getAllTicket())\r\n                dispatch(getTicketsSevenDays())\r\n                dispatch(getMyOpenTicket())\r\n                dispatch(getAllTicketToHandle())\r\n\r\n\r\n\r\n            })\r\n            .catch(err =>{\r\n\r\n                dispatch(getAllTicket())\r\n                dispatch(getTicketsSevenDays())\r\n                dispatch(getMyOpenTicket())\r\n                dispatch(getAllTicketToHandle())\r\n\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function filterStatusFunction(byName){\r\n\r\n    return function (dispatch){\r\n        axios.get(API_PATH + 'ticket/v1/list/?status=' + byName , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({getTickets: res.data.data}));\r\n\r\n            })\r\n            .catch(err =>{\r\n                console.log(err)\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function getCommit(data, history){\r\n\r\n\r\n    return function (dispatch){\r\n\r\n        axios.get(API_PATH + \"review/v1/list-create/\" +   data  + \"/\", {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res =>{\r\n                dispatch(updateState({commitList: res.data.data}))\r\n                dispatch(updateState({selectedCommitId: data}))\r\n\r\n                history.push(\"commit/\" + data)\r\n\r\n            })\r\n            .catch(err =>{\r\n\r\n\r\n            })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function sendCommit(data, ticketId){\r\n    return function (dispatch){\r\n\r\n        axios.post(API_PATH + \"review/v1/list-create/\" + ticketId + \"/\", data , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n                toast.success(\"Your message send\")\r\n\r\n\r\n                window.scrollTo(0, 0)\r\n\r\n                if (res.status ===201){\r\n                    axios.get(API_PATH + \"review/v1/list-create/\" +   ticketId  + \"/\", {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n                        .then(res =>{\r\n                            dispatch(updateState({commitList: res.data.data}))\r\n                            dispatch(updateState({selectedCommitId: data}))\r\n                            document.getElementById(\"textContent\").value = \"\";\r\n\r\n\r\n                        })\r\n                        .catch(err =>{\r\n\r\n\r\n                        })\r\n                 }\r\n            })\r\n            .catch(err=>{\r\n                toast.error(\"Failed\")\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function OpenStatusCount(){\r\n    return function (dispatch){\r\n        axios.get(API_PATH + 'ticket/v1/list?status=Open' , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({openCount: res.data}))\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport function PendingStatusCount(){\r\n    return function (dispatch){\r\n        axios.get(API_PATH + 'ticket/v1/list?status=Pending' , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({PendingCount: res.data}))\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport function ClosedStatusCount(){\r\n    return function (dispatch){\r\n        axios.get(API_PATH + 'ticket/v1/list?status=Closed' , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n\r\n            .then(res =>{\r\n                dispatch(updateState({ClosedCount: res.data}))\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function todayTicket(today){\r\n    return function (dispatch){\r\n        axios.get(API_PATH + \"ticket/v1/list?status=Open&start_date=\"+ today + \"&end_date=\" + today , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res =>{\r\n\r\n                dispatch(updateState({subOpen: res.data}))\r\n            })\r\n\r\n\r\n        axios.get(API_PATH + \"ticket/v1/list?status=Pending&start_date=\"+ today + \"&end_date=\" + today , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res =>{\r\n\r\n                dispatch(updateState({subPending: res.data}))\r\n            })\r\n\r\n        axios.get(API_PATH + \"ticket/v1/list?status=Closed&start_date=\"+ today + \"&end_date=\" + today , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res =>{\r\n\r\n                dispatch(updateState({subClosed: res.data}))\r\n            })\r\n\r\n\r\n        axios.get(API_PATH + \"ticket/v1/list?start_date=\"+ today + \"&end_date=\" + today , {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res =>{\r\n\r\n                dispatch(updateState({subAllTickets: res.data}))\r\n            })\r\n\r\n\r\n        axios.get(API_PATH + \"ticket/v1/list-own?is_read=false\", {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\r\n            .then(res =>{\r\n\r\n                dispatch(updateState({todayNoOpened: res.data}))\r\n            })\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import axios from \"axios\";\nimport {API_PATH, TOKEN_NAME} from \"../../tools/constants\";\nimport {CREATE_AGENT} from \"../actionTypes/authType\";\nimport {updateState} from \"./TicketsAction\";\nimport {toast} from \"react-toastify\";\n\n\n\nexport function createAgent(data, history)  {\n    return function (dispatch) {\n\n\n        dispatch({\n            type: CREATE_AGENT\n        });\n\n\n\n        let createAgentData = new  FormData();\n        createAgentData.append(\"email\", data.email)\n        createAgentData.append(\"password\", data.password)\n        createAgentData.append(\"password2\", data.password2)\n\n         axios.post(API_PATH + \"user/v1/register/\", createAgentData ,{headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n             .then(res =>{\n                 console.log(res.data.success)\n\n                 history.push( \"/agents\")\n             })\n\n\n\n\n\n\n    }\n\n\n}\n\n\nexport function getInfoAccount(){\n    return function (dispatch){\n        axios.get(API_PATH + \"user/v1/get-user/\", {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n            .then(res =>{\n                dispatch(updateState({getAccount: res.data.data}));\n\n            })\n            .catch(err =>{\n                console.log(\"err\")\n            })\n    }\n}\n\n\n\n\nexport function saveFileForEdit(data, accountId){\n    return function (dispatch) {\n        let image = new FormData();\n        image.append(\"image\", data);\n\n\n        axios.put(API_PATH + \"user/v1/update-own-image/\" + accountId + \"/\", image ,{headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n            .then(res => {\n                toast.success(\"image update\");\n                dispatch(getInfoAccount())\n            })\n            .catch(err =>{\n                toast.error(\"Access to only owner\");\n\n            })\n    }\n}\n\nexport function getInfoAccountForEdit(infoId){\n\n    return function (dispatch){\n        axios.get(API_PATH + \"user/v1/update/\" + infoId + \"/\", {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n            .then(res =>{\n                dispatch(updateState({getAccountForEdit: res.data.data}));\n\n            })\n            .catch(err =>{\n                console.log(err)\n\n            })\n    }\n}\n\n\nexport function changeInfoAccountData(data ,infoId  ){\n\n    console.log(data)\n\n\n\n    return function (dispatch){\n        axios.put(API_PATH + \"user/v1/update/\" + infoId + \"/\",data,  {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n            .then(res =>{\n                dispatch(updateState({getAccountForEdit: res.data.data}));\n\n            })\n            .catch(err =>{\n                console.log(err)\n\n            })\n    }\n}\n\n\n\n\n\n\n\n\nexport function changePasswordForSend(data, history){\n    return function (dispatch){\n\n\n\n        axios.post(API_PATH + \"user/v1/password-change/\",   data )\n            .then(res =>{\n                toast.success(\"Check your email\")\n\n         })\n    }\n}\n\n\nexport function getAllAgents(){\n    return function (dispatch){\n\n\n        axios.get(API_PATH + \"user/v1/list/\", {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n            .then(res =>{\n\n                dispatch(updateState({getAllAgentsList: res.data.data}))\n\n            })\n            .catch(err =>{\n                console.log(err)\n            })\n    }\n}\n\n\n\n\n\n\nexport function saveFile(data, accountId){\n    return function (dispatch) {\n        let image = new FormData();\n        image.append(\"image\", data);\n\n\n        axios.put(API_PATH + \"user/v1/update-own-image/\" + accountId + \"/\", image ,{headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n            .then(res => {\n                toast.success(\"image update\");\n                dispatch(getInfoAccount())\n            })\n            .catch(err =>{\n                toast.error(\"Error !!!\");\n\n            })\n    }\n}\n\n\n\n\n\n\nexport function updateUserInfo(data, AccountID, dataEmail) {\n\n    return function (dispatch) {\n\n\n\n        let bigData = new FormData();\n        bigData.append(\"full_name\", data.full_name);\n        bigData.append(\"phone\", data.phone);\n        bigData.append(\"team\", data.team);\n        // bigData.append(\"role\", data.role);\n        bigData.append(\"email\", dataEmail);\n\n\n\n        axios.put(API_PATH + \"user/v1/update/\" + AccountID + \"/\", bigData ,{headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n            .then(res =>{\n\n\n\n                toast.success(\"Успешно редактировать\")\n\n            })\n            .catch(err =>{\n                toast(err)\n            })\n\n    }\n\n}\n\nexport function updateInfoAccount(data, history){\n    return function (dispatch){\n\n        console.log(data)\n        history.push(\"/agents/info-account-edit/\" + data.id)\n\n    }\n}","import React, {useEffect} from 'react';\nimport {Link, NavLink} from \"react-router-dom\";\nimport {getInfoAccount} from \"../redux/action/createAgentAction\";\nimport {connect} from \"react-redux\";\nimport {ClosedStatusCount, getAllTicketToHandle} from \"../redux/action/TicketsAction\";\n\nconst AccountNavbar = (props) => {\n    useEffect(()=>{\n        props.getInfoAccount()\n        props.getAllTicketToHandle()\n\n    }, [])\n    return (\n        <div className=\"all-tickets-right\">\n            <Link to=\"/tickets/tickets-to-handle\"className=\"bell-icon\">\n                <img src=\"/img/icon/bellFree.png\"  />\n                {\n                props.getTicketsToHandle?.filter(item => !item.is_read).length  > 0   ?\n                    <img src=\"/img/icon/ordot.png\" className=\"orange-dot\"  />\n\n                   :\n                   \"\"\n\n\n                }\n            </Link>\n            <NavLink to='agents/info-account' className=\"d-flex\">\n\n               <div className=\"account-img\">\n                   <img src={props.getAccount.image ? props.getAccount.image  : \"/img/icon/account.png\" } alt=\"account\"/>\n\n               </div>\n               <div className=\"account-name\">\n                   <h4 className=\"open-sans-light\">{props.getAccount.full_name ?  props.getAccount.full_name  : \"Agents name\"}</h4>\n                   <h6 className=\"open-sans-light\">{props.getAccount.email ?  props.getAccount.email  : \"Agents email\"}</h6>\n               </div>\n\n            </NavLink>\n        </div>\n    );\n};\n\n\nconst mapStateToProps=(state)=>{\n    return {\n        getAccount: state.createAgentData.getAccount,\n        getTicketsToHandle: state.ticketData.getTicketsToHandle,\n\n    }\n}\n\nexport default connect(mapStateToProps, {getInfoAccount, getAllTicketToHandle})(AccountNavbar);","import React, {useEffect} from 'react';\nimport {connect} from \"react-redux\";\nimport {\n    ClosedStatusCount,\n    getAllTicket,\n    OpenStatusCount,\n    PendingStatusCount,\n    todayTicket\n} from \"../redux/action/TicketsAction\";\n\nconst SubNavbarMenu = (props) => {\n\n    var date = new Date();\n    date.setDate(date.getDate() - 7);\n\n\n\n\n    let currentDate = new Date()\n    let day = currentDate.getDate()\n    let month = currentDate.getMonth() + 1\n    let year = currentDate.getFullYear()\n\n    let today = year + \"-\" + month + \"-\" + day\n\n\n    useEffect(() => {\n        props.OpenStatusCount()\n        props.ClosedStatusCount()\n        props.PendingStatusCount()\n        props.getAllTicket()\n        props.todayTicket(today)\n\n\n    }, [])\n\n    return (\n        <div className='sub-navbar-menu'>\n\n\n            <div className=\"sub-navbar-menu-child\">\n                <div className=\"tickets-count\">\n                    <div className=\"gm-father\">\n                        <img src=\"/img/icon/gm1.png\" alt=\"\"/>\n                    </div>\n\n                    <div>\n                        <h1>\n                            {props.AllCount.count}\n\n\n                            <span>+\n                                {\n                                   props.subAllTickets.count ?  props.subAllTickets.count : \"0\"\n                                }\n                       </span>\n                        </h1>\n                        <p>All tickets</p>\n                    </div>\n                </div>\n\n                <div className=\"tickets-count\">\n                    <div className=\"gm-father\">\n                        <img src=\"/img/icon/gm2.png\" alt=\"\"/>\n                    </div>\n\n                    <div>\n                        <h1>\n                            {props.openCount.count}\n                            <span>+\n                                {\n                                    props.subOpen.count ?  props.subOpen.count : \"0\"\n                                }\n                       </span>\n                        </h1>\n                        <p>Open</p>\n                    </div>\n                </div>\n\n\n                <div className=\"tickets-count\">\n                    <div className=\"gm-father\">\n                        <img src=\"/img/icon/gm3.png\" alt=\"\"/>\n                    </div>\n\n                    <div>\n                        <h1>\n                            {props.PendingCount.count}\n\n                            <span>+\n\n                                    {\n                                        props.subPending.count ?  props.subPending.count : \"0\"\n                                    }\n\n                       </span>\n                        </h1>\n                        <p>Pending</p>\n                    </div>\n                </div>\n\n\n                <div className=\"tickets-count\">\n                    <div className=\"gm-father\">\n                        <img src=\"/img/icon/gm4.png\" alt=\"\"/>\n                    </div>\n\n                    <div>\n                        <h1>\n                            {props.ClosedCount.count}\n\n                            <span>+\n                                {\n                                    props.subClosed.count ?  props.subClosed.count : \"0\"\n                                }\n                       </span>\n                        </h1>\n                        <p>Closed</p>\n                    </div>\n                </div>\n\n            </div>\n\n        </div>\n    );\n};\n\n\nconst mapStateToProps = (state) => {\n    return {\n        openCount: state.ticketData.openCount,\n        PendingCount: state.ticketData.PendingCount,\n        ClosedCount: state.ticketData.ClosedCount,\n        AllCount: state.ticketData.AllCount,\n        subAllTickets: state.ticketData.subAllTickets,\n        subOpen: state.ticketData.subOpen,\n        subClosed: state.ticketData.subClosed,\n        subPending: state.ticketData.subPending,\n    }\n}\n\nexport default connect(mapStateToProps, {\n    OpenStatusCount,\n    todayTicket,\n    PendingStatusCount,\n    getAllTicket,\n    ClosedStatusCount\n})(SubNavbarMenu);","import React, {useEffect, useState} from 'react';\nimport {\n    changeTicketStatus,\n    getCommit,\n    getAllTicket,\n    getStatusList,\n    getAllTicketNext, getAllTicketPrev, changeTicketPr\n} from \"../redux/action/TicketsAction\";\nimport {connect} from \"react-redux\";\nimport {Link, useHistory} from \"react-router-dom\";\n\n\nconst MainTableForTickets = (props) => {\n\n    // const [data, setData] = useState([]);\n\n    const [currentPage, setcurrentPage] = useState(0);\n    const [itemsPerPage, setitemsPerPage] = useState(5);\n\n    const [pageNumberLimit, setpageNumberLimit] = useState(5);\n    const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(2);\n    const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\n\n    const handleClick = (event) => {\n        props.getAllTicket(Number(event.target.id));\n\n    };\n\n    const pages = [];\n    for (let i = 1; i <= Math.ceil(props.AllCount.last_page); i++) {\n        pages.push(i);\n    }\n\n    const indexOfLastItem = currentPage * itemsPerPage;\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n    // const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\n\n    const renderPageNumbers = pages.map((number) => {\n        // if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\n        return (\n            <li\n                key={number}\n                id={number}\n                onClick={handleClick}\n                className={props.pageIndex == number ? \"active\" : null}\n\n            >\n\n                {number}\n            </li>\n        );\n        // } else {\n        //     return null;\n        // }\n    });\n\n\n    useEffect(() => {\n        props.getAllTicket(props.pageIndex)\n        props.getStatusList()\n        props.getCommit()\n\n        props.changeTicketStatus()\n\n    }, [])\n\n\n    const handleNextbtn = () => {\n\n        setcurrentPage(currentPage + 1);\n\n        props.getAllTicketNext(props.AllCount.next)\n        // if (currentPage + 1 > maxPageNumberLimit) {\n        //     setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\n        //     setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\n        // }\n    };\n\n    const handlePrevbtn = () => {\n        setcurrentPage(currentPage - 1);\n\n\n        props.getAllTicketPrev(props.AllCount.previous)\n        // if ((currentPage - 1) % pageNumberLimit == 0) {\n        //\n        //     setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\n        //     setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\n        // }\n    };\n\n    // let pageIncrementBtn = null;\n    // if (pages.length > maxPageNumberLimit) {\n    //     pageIncrementBtn = <li onClick={handleNextbtn}> &hellip; </li>;\n    // }\n\n    // let pageDecrementBtn = null;\n    // if (minPageNumberLimit >= 1) {\n    //     pageDecrementBtn = <li onClick={handlePrevbtn}> &hellip; </li>;\n    // }\n    //\n    // const handleLoadMore = () => {\n    //     setitemsPerPage(itemsPerPage + 5);\n    // };\n\n\n    let history = useHistory();\n    const changeStatusFunction = (data, values) => {\n        props.changeTicketStatus(data, values)\n\n    }\n\n\n    const changePrFunction = (data, values) => {\n        props.changeTicketPr(data, values)\n\n    }\n\n    const visitCommit = (values, events) => {\n        props.getCommit(values, history)\n    }\n    return (\n        <div className='main-table-for-tickets'>\n\n\n            <table>\n\n                <tr className=\"main-table-header\">\n                    <th><input type=\"checkbox\"/></th>\n                    <th>\n                        Requester\n                    </th>\n                    <th>\n                        Subject\n                    </th>\n                    <th>\n                        Agent\n                    </th>\n                    <th>\n                        Status\n                    </th>\n                    <th>\n                        Last message\n                    </th>\n                    <th>\n\n                    </th>\n                    <th></th>\n                </tr>\n\n\n                {\n                    props.getTickets.map((item, index) => (\n                        <tr key={index}>\n                            <td>\n                                <input type=\"checkbox\"/>\n                            </td>\n                            <td className=\"requester-name\" onClick={() => visitCommit(item.id)}\n                                style={{cursor: \"pointer\"}}>\n                                <h4>{item.client_full_name}</h4>\n                                <span>{item.sender_name}</span>\n                            </td>\n                            <td className=\"subject-name\">\n\n                                {item.priority === 1 ? <img src=\"/img/icon/open.png\" alt=\"\"/> : item.priority === 2 ?\n                                    <img src=\"/img/icon/fast.png\" alt=\"\"/> :\n                                    item.priority === 0 ?\n                                        <img src=\"/img/icon/onHold.png\" alt=\"\"/> : item.priority === -1 ?\n                                            <img src=\"/img/icon/close.png\" alt=\"\"/> : item.priority === -2 ?\n                                                <img src=\"/img/icon/pw.png\" alt=\"\"/> : ''}\n\n\n                                {\" \" + item.subject}\n                            </td>\n\n                            <td>\n                                {item.receiver_name}\n                            </td>\n                            <td><span\n                                className={item.ticket_status_name === \"Open\" ?\n                                    \"open\" : item.ticket_status_name === \"Closed\" ?\n                                        \"closed\" : item.ticket_status_name === \"Pending\" ?\n                                            \"pending\" : \"\"}>\n                                {item.ticket_status_name}\n\n\n                    </span>\n                            </td>\n                            <td>\n\n\n                                <h4 style={{\n                                    fontSize: \"14px\",\n                                    marginBottom: \"0\"\n                                }}>   {item.date_created.slice(11, 16)} </h4>\n                                <span style={{\n                                    color: \"#8E8C94\",\n                                    fontSize: \"12px\"\n                                }}> {item.date_created.slice(0, 10)}</span>\n\n                            </td>\n                            <td className=\"all-tickets-event-menu-father dropdown\">\n                                <button className=\"all-tickets-event dropbtn\">\n                                    <img src=\"/img/icon/verDots.png\" alt=\"\"/>\n                                </button>\n\n\n                                <div className=\"all-tickets-event-menu dropdown-content\">\n\n\n                                    {\n                                        props.ticketStatusList.map(item2 => (\n                                            <button\n                                                onClick={() => changeStatusFunction(item.id, item2.id)}>{item2.name}</button>\n                                        ))\n                                    }\n\n                                    <img src=\"/img/icon/Divider.png\" alt=\"\"/>\n\n\n                                    <button onClick={() => changePrFunction(item.id, 2)}><img src=\"/img/icon/fast.png\"\n                                                                                              className=\"mr-2\"\n                                                                                              alt=\"\"/> Urgent\n                                    </button>\n                                    <button onClick={() => changePrFunction(item.id, 1)}><img src=\"/img/icon/open.png\"\n                                                                                              className=\"mr-2\"\n                                                                                              alt=\"\"/> High\n                                    </button>\n                                    <button onClick={() => changePrFunction(item.id, 0)}><img src=\"/img/icon/onHold.png\"\n                                                                                              className=\"mr-2\"\n                                                                                              alt=\"\"/> Medium\n                                    </button>\n                                    <button onClick={() => changePrFunction(item.id, -1)}><img src=\"/img/icon/close.png\"\n                                                                                               className=\"mr-2\"\n                                                                                               alt=\"\"/> Low\n                                    </button>\n                                    <button onClick={() => changePrFunction(item.id, -2)}><img src=\"/img/icon/pw.png\"\n                                                                                               className=\"mr-2\"\n                                                                                               alt=\"\"/> Very low\n                                    </button>\n\n\n                                </div>\n\n\n                            </td>\n                            {/*<td> </td>*/}\n\n                        </tr>\n\n                    ))\n                }\n\n\n            </table>\n\n\n            <ul className=\"pageNumbers d-flex p-2  \">\n                <li className=\"ml-3\">\n                    <button className=\"p-left\"\n                            onClick={handlePrevbtn}\n                        // disabled={currentPage == pages[0] ? true : false}\n                    >\n                        <img src=\"/img/icon/Stroke169.png\" alt=\"\"/>\n                    </button>\n                </li>\n                {/*{pageDecrementBtn}*/}\n                {renderPageNumbers}\n                {/*{pageIncrementBtn}*/}\n\n                <li>\n                    <button className=\"p-right\"\n                            onClick={handleNextbtn}\n                        // disabled={currentPage == pages[pages.length - 1] ? true : false}\n                    >\n                        <img src=\"/img/icon/Stroke168.png\" alt=\"\"/>\n\n                    </button>\n                </li>\n            </ul>\n\n\n        </div>\n    );\n};\n\n//\n\nconst mapStateToProps = (state) => {\n    return {\n\n        getTickets: state.ticketData.getTickets,\n        AllCount: state.ticketData.AllCount,\n        ticketStatusList: state.ticketData.ticketStatusList,\n        pageIndex: state.ticketData.pageIndex,\n\n    }\n}\n\nexport default connect(mapStateToProps, {\n    getAllTicket,\n    changeTicketPr,\n    getAllTicketNext,\n    getAllTicketPrev,\n    getCommit,\n    changeTicketStatus,\n    getStatusList\n})(MainTableForTickets);\n","import React, {useEffect, useState} from 'react';\nimport {Link, NavLink} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {\n    filterStatusFunction,\n    getAllTicket, getAllTicketForSearch,\n    getAllTicketToHandle,\n    getMyOpenTicket,\n    getStatusList, getTicketsSevenDays, updateState\n} from \"../redux/action/TicketsAction\";\nimport axios from \"axios\";\nimport {API_PATH, TOKEN_NAME} from \"../tools/constants\";\n\n\nconst SideBarMenus = (props) => {\n\n\n    var date = new Date();\n    date.setDate(date.getDate() - 7);\n\n    var finalDate = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\n\n\n    let currentDate = new Date()\n    let day = currentDate.getDate()\n    let month = currentDate.getMonth() + 1\n    let year = currentDate.getFullYear()\n\n    let today = year + \"-\" + month + \"-\" + day\n\n\n\n\n    useEffect(() => {\n        props.getStatusList()\n        props.getMyOpenTicket()\n        props.getAllTicketToHandle()\n        props.getAllTicket()\n        props.getTicketsSevenDays(finalDate, today)\n\n\n\n    },  [])\n\n\n    const filterByStatus = (data) => {\n\n        props.filterStatusFunction(data)\n\n    }\n\n\n    const getAllStatusList = () => {\n        props.getAllTicket()\n    }\n\n\n    const searchTicket = (e) => {\n\n\n        let newArr = props.getTickets.filter(item => item.subject.includes(e.target.value))\n\n\n        props.getAllTicketForSearch(e.target.value, props.getTickets)\n\n\n\n\n    }\n\n    return (\n\n        <div className=\"side-bar-menus\">\n            <div className=\"side-bar-menus-child\">\n\n                <h1 className=\"open-sans-extra-bold\">Tickets</h1>\n\n\n                <Link to='/tickets/new-ticket' className=\"new-ticket open-sans-extra-bold\">\n\n\n                    <img src=\"/img/icon/plus.png\" alt=\"plus icon\"/>\n                    New ticket\n                </Link>\n\n                <div className=\"ticket-search\">\n                    <img src=\"/img/icon/loupe.png\" alt=\"\"/>\n                    <input type=\"text\" onChange={searchTicket} placeholder=\"Search...\"/>\n\n                </div>\n\n                <div className=\"menus\">\n                    <Link to=\"/tickets/all-tickets\" className=\"    w-100\">\n                        <button onClick={() => getAllStatusList()} className=\" p-0 \"><span>All tickets</span>\n                            <span className=\"\">\n                            {\n                                props.AllCount.count\n                            }\n                        </span></button>\n\n                    </Link>\n\n                    <Link to=\"/tickets/tickets-to-handle\"><span>Tickets to handle</span><span>\n                        {\n                            props.btc.count\n                        }\n                    </span></Link>\n                    <Link to=\"/tickets/open-tickets\"><span>My open tickets</span><span>\n                          {\n                              props.boc.count\n                          }\n                    </span></Link>\n\n\n                    <h4>My views</h4>\n                    <Link to=\"/tickets/last-days\"><span>My tickets in last 7 days</span><span>\n                          {\n                              props.bot.count\n                          }\n                    </span></Link>\n\n\n                    <h4>Statuses</h4>\n\n\n                    {\n                        props.ticketStatusList.map(item => (\n                            <button onClick={() => filterByStatus(item.name)}><span>{item.name}</span></button>\n\n                        ))\n                    }\n\n                </div>\n            </div>\n\n        </div>\n    );\n};\n\n\nconst mapStateToProps = (state) => {\n    return {\n        ticketStatusList: state.ticketData.ticketStatusList,\n        btc: state.ticketData.btc,\n        boc: state.ticketData.boc,\n        bot: state.ticketData.bot,\n        AllCount: state.ticketData.AllCount,\n        getTicketsToHandle: state.ticketData.getTicketsToHandle,\n        getOpenTickets: state.ticketData.getOpenTickets,\n        openCount: state.ticketData.openCount,\n        PendingCount: state.ticketData.PendingCount,\n        ClosedCount: state.ticketData.ClosedCount,\n        getTickets: state.ticketData.getTickets,\n\n\n    }\n}\nexport default connect(mapStateToProps, {\n    getStatusList,\n    getTicketsSevenDays,\n    getAllTicketToHandle,\n    updateState,\n    getAllTicketForSearch,\n    getMyOpenTicket,\n    getAllTicket,\n    filterStatusFunction\n})(SideBarMenus);","import {UPDATE_STATE} from \"../actionTypes/createAgentType\";\nimport axios from \"axios\";\nimport {API_PATH, TOKEN_NAME} from \"../../tools/constants\";\nimport {toast} from \"react-toastify\";\n\n\n\nexport function updateState (data){\n    return {\n        type: UPDATE_STATE,\n        payload: data\n    }\n}\n\n\n\nexport function createTeam(data){\n    return function (dispatch){\n\n        console.log(data)\n\n        let createTeamData = new FormData()\n        createTeamData.append(\"name\", data.name)\n        createTeamData.append(\"description\", data.description)\n        // createTeamData.append(\"is_active\", data.is_active)\n\n        axios.post(API_PATH + \"team/v1/create/\", createTeamData, {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n            .then(res =>{\n                toast.success(\"successfully added\")\n            })\n            .catch(err =>{\n                toast.error(err)\n            })\n    }\n}\n\n\nexport function getActiveTeamList()\n{\n    return function (dispatch){\n\n\n\n\n\n        axios.get(API_PATH + 'team/v1/active-list/', {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n            .then(res =>  {\n                dispatch(updateState({activeAgentslList: res.data.data}));\n            })\n            .catch(err =>(\n                console.log(err)\n            ))\n    }\n}","import React, {useEffect} from 'react';\nimport {connect} from \"react-redux\";\nimport {getActiveTeamList} from \"../../redux/action/CreateTeamAction\";\nimport {getAllAgents, getInfoAccount, updateInfoAccount} from \"../../redux/action/createAgentAction\";\n\nconst AgentsTable = (props) => {\n\n    useEffect( ()=>{\n\n\n\n        props.getAllAgents()\n        // props.updateInfoAccount()\n        props.getInfoAccount()\n\n    }, [])\n\n\n    const editOpen =(value)=> {\n\n        props.updateInfoAccount(value, props.history)\n    }\n\n\n    return (\n        <div className='agents-table'>\n           <table>\n               <thead>\n\n               <tr>\n                   <th></th>\n                   <th>\n                       <button><img src=\"./img/icon/arrowUpDown.png\" alt=\"\"/>Name</button>\n                   </th>\n                   <th>\n                       <button><img src=\"./img/icon/arrowUpDown.png\" alt=\"\"/>Role</button>\n                   </th>\n                   <th>\n                       <button>\n                           event\n                       </button>\n                   </th>\n               </tr>\n               </thead>\n\n               <tbody>\n\n\n\n\n\n\n               {\n                   props.getAllAgentsList ?  props.getAllAgentsList.map(item =>(\n                       <tr>\n\n                           <td>\n                               <div className=\"agents-table-body-account\">\n                                   <img src={item.image ? item.image : \"img/icon/account3.png\" } alt=\"\"/>\n                               </div>\n                           </td>\n                           <td>\n                               <div className=\"agents-table-body-name\">\n                                   <h3>{item.full_name}</h3>\n                                   <p>{item.email}</p>\n                               </div>\n                           </td>\n                           <td>\n                               <div className=\"agents-table-body-role\">\n                                   <span className={item.role === \"Admin\" ? \"agents-role-admin\" : item.role === \"Agent\" ? \"agents-role-agents\" : \"agents-role-viewer \"} >{item.role}</span>\n                               </div>\n                           </td>\n                           <td>\n\n                               {\n\n                                   props.getAccount.role === \"Admin\" ?\n                                       <button className=\"agent-team-edit-btn\" onClick={() => editOpen(item)}>\n                                       <img src=\"/img/icon/edit.png\" alt=\"\"/>\n                                   </button>\n                                       :\n                                       ''\n                               }\n\n                           </td>\n                       </tr>\n                   ))\n                       :\n\n                       ''\n               }\n\n\n\n\n               </tbody>\n\n\n           </table>\n        </div>\n    );\n};\n\n\nconst mapStateToProps =(state)=>{\n\n    return{\n        getAllAgentsList: state.createAgentData.getAllAgentsList,\n        getAccount: state.createAgentData.getAccount,\n\n    }\n}\n\nexport default connect(mapStateToProps, {getAllAgents, getInfoAccount, updateInfoAccount })(AgentsTable);","import React, {useEffect} from 'react';\nimport {connect} from \"react-redux\";\nimport {getActiveTeamList, updateState} from \"../../redux/action/CreateTeamAction\";\nimport {Link, match} from \"react-router-dom\";\nimport {Modal, ModalBody} from \"reactstrap\";\n\nconst AgentsTeamTable = (props) => {\n\n\n    useEffect( ()=>{\n        props.getActiveTeamList()\n\n    }, [])\n\n    const teamTableView =()=>{\n        props.updateState({editModal: !props.editModal})\n    }\n    return (\n        <div className='agents-team-table'>\n            <table>\n                <thead>\n\n                <tr>\n                    <th></th>\n                    <th>\n                        <button><img src=\"./img/icon/arrowUpDown.png\" alt=\"\"/>Name</button>\n                    </th>\n                    <th>\n                        <button><img src=\"./img/icon/arrowUpDown.png\" alt=\"\"/>Agents</button>\n                    </th>\n\n                    <th>\n                        {/*<button>*/}\n                        {/*    event*/}\n                        {/*</button>*/}\n                    </th>\n                </tr>\n                </thead>\n\n                <tbody>\n\n\n\n\n\n                {\n                    props.activeAgentslList ?  props.activeAgentslList.map(item =>(\n                        <tr>\n\n                            <td>\n                                <div className=\"agents-table-body-account\">\n                                    <img src=\"/img/icon/account3.png\" alt=\"account\"/>\n                                </div>\n                            </td>\n                            <td>\n                                <div className=\"agents-table-body-name\">\n                                    <h3>{item.name}</h3>\n                                    <p>{item.agents_count ? item.agents_count : \"0\"} agents </p>\n                                </div>\n                            </td>\n\n\n                            <td>\n                                <div className=\"agents-table-body-role\">\n                                    <img src=\"/img/icon/account3.png\" alt=\"account\"/>\n                                    <img src=\"/img/icon/account3.png\" alt=\"account\"/>\n                                    <img src=\"/img/icon/account3.png\" alt=\"account\"/>\n                                    <img src=\"/img/icon/account3.png\" alt=\"account\"/>\n\n                                    <span  >+20 more</span>\n                                </div>\n                            </td>\n                            \n\n                            <td>\n                                {/*<button className=\"agent-team-edit-btn\">*/}\n                                {/*    <img src=\"/img/icon/edit.png\" alt=\"\"/>*/}\n                                {/*</button>*/}\n                            </td>\n                        </tr>\n\n                    ))\n                        :\n                        \"\"\n                }\n\n                </tbody>\n\n\n            </table>\n\n\n\n\n\n        </div>\n\n    );\n};\n\n\nconst mapStateToProps =(state)=>{\n\n    return{\n        activeAgentslList: state.createTeamData.activeAgentslList,\n\n\n\n    }\n}\n\nexport default connect(mapStateToProps, {getActiveTeamList, updateState})(AgentsTeamTable);\n\n","import React, {useEffect} from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport {getInfoAccount} from \"../../redux/action/createAgentAction\";\nimport {connect} from \"react-redux\";\nimport {getActiveTeamList} from \"../../redux/action/CreateTeamAction\";\n\nconst AgentsDetails = (props) => {\n\n\n    useEffect(()=>{\n        props.getInfoAccount()\n        props.getActiveTeamList()\n    }, [])\n\n    return (\n        <div className=\"agents-details\">\n            <div className=\"agents-details-headers d-flex justify-content-between\">\n                <h2>Details</h2>\n                {/*<NavLink to='agents/info-account' className=\"d-flex\">*/}\n\n                {/*    <img src=\"/img/icon/edit.png\" alt=\"edit\"/>Edit*/}\n                {/*</NavLink>*/}\n            </div>\n\n            <div className=\"agents-details-body\">\n                <div className=\"account-img\">\n                    <img src={props.getAccount.image} alt=\"account\"/>\n                    <span>{props.getAccount.role}</span>\n                </div>\n\n                <h3>{props.getAccount.full_name}</h3>\n                <p>{props.getAccount.email}</p>\n\n\n\n                <button>\n                    <img src=\"/img/icon/arrow.png\" alt=\"omg\"/>\n                    Team\n                </button>\n\n\n                <div className=\"team-list\">\n\n\n                    {\n                        props.activeAgentslList\n                        ?\n                        props.activeAgentslList.slice(0, 4).map(item=>(\n                            <h4><img src=\"/img/icon/account3.png\"/>{item.name}</h4>\n\n                        ))\n                            :\n                            \"\"\n                    }\n\n\n\n\n                </div>\n            </div>\n\n        </div>\n    );\n};\n\nconst mapStateToProps =(state)=>{\n    return {\n        getAccount: state.createAgentData.getAccount,\n        activeAgentslList: state.createTeamData.activeAgentslList,\n\n    }\n}\n\nexport default connect(mapStateToProps, {getInfoAccount, getActiveTeamList})(AgentsDetails) ;","import React, {useEffect, useState} from 'react';\nimport AllTicketsNavbar from \"../component/AllTicketsNavbar\";\nimport AgentsTable from \"./agents/AgentsTable\";\nimport AgentsTeamTable from \"./agents/AgentsTeamTable\";\nimport AgentsDetails from \"./agents/AgentsDetails\";\nimport {Link} from \"react-router-dom\";\nimport AccountNavbar from \"../component/AccountNavbar\";\nimport SubNavbarMenu from \"../component/SubNavbarMenu\";\nimport SideBar from \"../component/SideBar\";\nimport {getActiveTeamList} from \"../redux/action/CreateTeamAction\";\nimport {connect} from \"react-redux\";\n\nconst Agents = (props) => {\n    const [activeIndex, setActiveIndex] = useState(0);\n\n    const handleOnClick = index => {\n        setActiveIndex({index});\n    };\n\n\n\n\n\n    return (\n\n\n        <div className=' d-flex w-100'>\n\n\n\n            <div className=\"agents  \">\n               <div className=\"w-100\">\n                   <div className=\"all-tickets-navbar\">\n\n                       <div className=\"all-tickets-navbar-child\">\n                           <h1>Agents</h1>\n                           <AccountNavbar />\n                       </div>\n                   </div>\n\n\n\n                   <div className=\"d-flex w-100 h-100\">\n\n                       <div className='  agents-nav-tabs'>\n\n                           <ul className=\"nav nav-tabs\" role=\"tablist\">\n\n                               <li className=\"nav-item active\">\n                                   <a className=\"nav-link2  \" data-toggle=\"tab\" href=\"#tabs-1\" role=\"tab\"><span>Agents</span>\n                                       <span>88</span></a>\n                               </li>\n                               <li className=\"nav-item\">\n                                   <a className=\"nav-link2\" data-toggle=\"tab\" href=\"#tabs-2\" role=\"tab\"><span>Team</span>\n                                       <span>25</span></a>\n                               </li>\n\n\n                               <div className='nav-tabs-right-control'>\n\n                                   <div>\n                                       <img src=\"/img/icon/loupe.png\" className=\"search-loupe\" alt=\"\"/>\n                                       <input type=\"text\" placeholder='Search...'/>\n                                   </div>\n\n                                   <div className=\"dropdown show dropdown-add-role\">\n                                       <a className=\"btn btn-primary dropdown-toggle\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\"\n                                          data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                           <img src=\"/img/icon/plus.png\" alt=\"\"/> Add\n                                       </a>\n\n                                       <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n\n                                           <Link to='/agents/create-agent' className=\"dropdown-item\" href=\"#\"> <img src=\"./img/icon/userplus.png\" alt=\"\"/><span>Create Agent</span></Link>\n                                           <Link to='/agents/create-team' className=\"dropdown-item\" href=\"#\"> <img src=\"./img/icon/users.png\" alt=\"\"/><span>Create Team</span></Link>\n                                       </div>\n                                   </div>\n\n                               </div>\n                               <div>\n\n                               </div>\n\n\n                           </ul>\n                           <div className=\"tab-content\">\n                               <div className=\"tab-pane active\" id=\"tabs-1\" role=\"tabpanel\">\n                                   <AgentsTable history={props.history}/>\n                               </div>\n                               <div className=\"tab-pane\" id=\"tabs-2\" role=\"tabpanel\">\n                                   <AgentsTeamTable/>\n                               </div>\n\n                           </div>\n                       </div>\n\n\n                       <AgentsDetails/>\n                   </div>\n               </div>\n            </div>\n        </div>\n    );\n};\nconst mapStateToProps =(state)=>{\n\n    return{\n\n        activeAgentslList: state.createTeamData.activeAgentslList,\n\n    }\n}\nexport default connect(mapStateToProps, {getActiveTeamList})(Agents) ;","import React, {useEffect} from 'react';\nimport AllTicketsNavbar from \"../../component/AllTicketsNavbar\";\nimport {Link} from \"react-router-dom\";\nimport AccountNavbar from \"../../component/AccountNavbar\";\nimport {MultiSelectComponent} from '@syncfusion/ej2-react-dropdowns';\nimport {AvForm, AvField} from \"availity-reactstrap-validation\"\nimport {CustomInput} from \"reactstrap\";\nimport {connect} from \"react-redux\";\nimport {createTeam} from \"../../redux/action/CreateTeamAction\";\n\n/**\n * MultiSelect Default Sample\n */\n\n\nconst CreateTeamPair = (props) => {\n\n    const fields = {text: 'name', text2: 'userId', value: 'id'};\n\n    const posts = [\n        {\n            \"userId\": 1,\n            \"id\": 1,\n            \"name\": \"Jalilov Feruz\",\n\n        },\n        {\n            \"userId\": 1,\n            \"id\": 2,\n            \"name\": \"Jalilov Feruz\",\n\n        },\n        {\n            \"userId\": 1,\n            \"id\": 3,\n            \"name\": \"Jalilov Feruz\",\n\n        },\n        {\n            \"userId\": 1,\n            \"id\": 4,\n            \"name\": \"Jalilov Feruz\",\n        },\n\n    ]\n\n\n\n\n\n    const createTeamFunction =(event, values)=>{\n        props.createTeam(values)\n    }\n    return (\n        <div className='create-team-pair'>\n            <div className=\"all-tickets-navbar\">\n\n                <div className=\"all-tickets-navbar-child\">\n                    <Link to='/agents' className='arrow-left-back'><img src=\"/img/icon/arrowleft.png\" alt=\"back img\"/>Back</Link>\n                    <h1>Create team</h1>\n                    <AccountNavbar/>\n                </div>\n            </div>\n\n\n            <AvForm className=\"create-team-inputs\" onValidSubmit={createTeamFunction}>\n                <h3>Team</h3>\n                <AvField type=\"text\" name=\"name\" className=\"form-control\" placeholder='Team Name'/>\n                <AvField type=\"text\" name=\"description\" className=\"form-control\" placeholder='Description'/>\n\n                {/*<h3>Agents</h3>*/}\n\n\n                {/*<div className=\"multi-select\">*/}\n                {/*    <img src=\"/img/icon/account3.png\" className=\"select-img-account\" alt=\"account\"/>*/}\n                {/*    <MultiSelectComponent id=\"mtselement\" fields={fields} dataSource={posts}*/}\n                {/*                          placeholder=\"Select a agents\"/>*/}\n                {/*    /!*<img src=\"/img/icon/down.png\" className=\"select-img-down\" alt=\"account\"/>*!/*/}\n\n                {/*</div>*/}\n\n\n                {/*<h3>Reply adress</h3>*/}\n\n                {/*<p>*/}\n                {/*    Choose the display name and the reply address for this team. It will be visible to your customers. To*/}\n                {/*    manage the reply addresses, go to <a href=\"#!\">Settings</a>.*/}\n                {/*</p>*/}\n\n\n                {/*<input type=\"text\" className=\"form-control\" placeholder='Team Name'/>*/}\n                {/*<span className=\"bottom-placeholder\">Set a display name, e.g., company name</span>*/}\n\n\n                {/*<input type=\"text\" className=\"form-control\" placeholder='Team Name'/>*/}\n\n\n                {/*<AvField tag={CustomInput} type=\"checkbox\"*/}\n                {/*         className=\"ml-3 mt-3\"*/}\n                {/*         name=\"is_active\"*/}\n                {/*         label=\"Is active\"*/}\n                {/*          />*/}\n\n                <div className=\"create-button-group\">\n                    <Link to='/agents'>Cancel</Link>\n\n\n                    <button className=\"btn\">\n                        Create team\n                        <img src=\"/img/icon/rightArrow.png\" alt=\"\"/>\n                    </button>\n                </div>\n            </AvForm>\n\n        </div>\n    );\n};\nconst mapStateToProps =(state)=>{\n    return {\n        createTeamObject: state.createTeamData.createTeamObject\n\n    }\n}\nexport default connect(mapStateToProps, {createTeam})(CreateTeamPair) ;","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport AccountNavbar from \"../../component/AccountNavbar\";\nimport {AvForm, AvField} from 'availity-reactstrap-validation'\nimport {createAgent} from \"../../redux/action/createAgentAction\";\nimport {connect} from \"react-redux\";\nconst CreateAgentPair = (props) => {\n\n\n    const createAgentFunction =(event, values)=>{\n\n        props.createAgent(values, props.history);\n\n    }\n    return (\n        <div className=\"create-agent-pair w-100\">\n            <div className=\"all-tickets-navbar \">\n\n                <div className=\"all-tickets-navbar-child\">\n                    <Link to='/agents' className='arrow-left-back'><img src=\"/img/icon/arrowleft.png\" alt=\"back img\"/>Back</Link>\n                    <h1>Create agent</h1>\n                    <AccountNavbar/>\n                </div>\n            </div>\n\n\n\n\n            <div className=\"create-agent-inputs\">\n\n\n                <AvForm onValidSubmit={createAgentFunction}>\n                    {/*<h3>Agents</h3>*/}\n                    {/*<div className=\"row-for-input\">*/}\n                    {/*    <AvField*/}\n                    {/*        name=\"test\"*/}\n                    {/*        placeholder=\"Name\"*/}\n                    {/*    />*/}\n                    {/*    <AvField*/}\n                    {/*        name=\"test\"*/}\n                    {/*        placeholder=\"Surname\"*/}\n\n                    {/*    />*/}\n                    {/*</div>*/}\n\n                    <h3>Team</h3>\n\n                    <div className=\"row-for-input for-email\">\n                        <img src=\"/img/icon/envelope.png\" alt=\"\"/>\n                        <AvField\n\n                            name=\"email\"\n                            placeholder=\"E-mail\"\n\n                        />\n\n                        {/*<AvField type=\"select\" name=\"test\" placeholder=\"Role\"  classname=\"select-style\"   >*/}\n                        {/*    <option   >Role </option>*/}\n\n                        {/*    <option>Blue screen </option>*/}\n                        {/*    <option>Codeninja </option>*/}\n                        {/*    <option>Java Our Soul </option>*/}\n                        {/*</AvField>*/}\n                    </div>\n\n\n                    <h3>Account</h3>\n\n                    <div className=\"row-for-input\">\n\n\n\n\n\n\n                        <AvField\n                            name=\"password\"\n                            placeholder=\"Password\"\n\n\n                        />\n\n                        <AvField\n                            name=\"password2\"\n                            placeholder=\"Verify password\"\n\n                        />\n                    </div>\n\n\n\n                    <div className=\"create-button-group\">\n                        <Link to='/agents'>Cancel</Link>\n\n\n\n\n                        <button className=\"btn\" type=\"submit\">\n                            Create agent\n                            <img src=\"/img/icon/rightArrow.png\" alt=\"\"/>\n                        </button>\n                    </div>\n\n\n                </AvForm>\n\n            </div>\n        </div>\n    );\n};\n\n\n\nconst mapStateToProps =(state)=>{\n    return{\n        createAgentObject: state.createAgentData.createAgentObject\n    }\n}\n\nexport default connect(mapStateToProps, {createAgent})(CreateAgentPair);","import {CREATE_TICKET, LOGIN} from \"../actionTypes/authType\";\nimport axios from \"axios\";\nimport {API_PATH, TOKEN_NAME} from \"../../tools/constants\";\n\n\nexport function LoginUser(data, history){\n\n\n    return function (dispatch){\n\n\n        dispatch({\n            type:LOGIN\n        })\n        let authData = new FormData();\n        authData.append(\"email\", data.email)\n        authData.append(\"password\", data.password)\n        axios.post(API_PATH + \"user/v1/login/\", authData)\n            .then(res =>{\n                localStorage.setItem(TOKEN_NAME, res.data.data.tokens.access)\n\n                history.push(\"/tickets\")\n                window.location.reload();\n\n            })\n            .catch(err =>{\n                console.log(err)\n            })\n    }\n}\n\n\n","import React from 'react';\nimport {AvForm, AvField} from 'availity-reactstrap-validation'\nimport {Link} from \"react-router-dom\";\nimport {LoginUser} from \"../redux/action/authAction\";\nimport {connect} from \"react-redux\";\nconst Login = (props) => {\n\n\n    const login = (events, values   ) =>{\n        props.LoginUser(values, props.history)\n    }\n\n\n    return (\n        <div className='login-page'>\n            <div className=\"login-form-group\">\n\n                <h3>\n                    Log in\n                </h3>\n\n                <AvForm onValidSubmit={login}>\n                    <AvField\n\n                        name='email'\n                        required\n                        placeholder=\"Email\"\n                        type=\"text\"\n                    />\n                    <AvField\n\n                        name='password'\n                        required\n                        placeholder=\"Password\"\n                        type=\"password\"\n                    />\n\n\n\n                    <div type=\"submit\" className=\"create-button-group\">\n\n\n                        <button type=\"submit\" className=\"btn w-100\">\n                            Submit\n                            <img src=\"/img/icon/rightArrow.png\" alt=\"\"/>\n                        </button>\n                    </div>\n                </AvForm>\n\n\n\n                <div className=\"forgot-password mt-3 text-center\">\n                    <Link to=\"/forgot-password\">Forgot password?</Link>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        isLoading: state.login.isLoading\n    }\n}\n\nexport default connect(mapStateToProps, {LoginUser})(Login);","import react, {Component} from 'react'\nimport ReactApexChart from 'react-apexcharts'\n\nclass PieChart extends  Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n            series: [44, 55, 13, 33, 23, 13],\n            options: {\n                chart: {\n                    width: 380,\n                    type: 'donut',\n                },\n                dataLabels: {\n                    enabled: false\n                },\n                responsive: [{\n                    breakpoint: 480,\n                    options: {\n                        chart: {\n                            width: 200\n                        },\n                        legend: {\n                            show: false\n                        }\n                    }\n                }],\n                legend: {\n                    position: 'right',\n                    offsetY: 0,\n                    height: 230,\n                }\n            },\n\n\n        };\n    }\n\n\n\n\n\n    render() {\n        return (\n\n\n            <div>\n                <div class=\"chart-wrap\">\n                    <div id=\"chart\">\n                        <h3>Tickets</h3>\n                        <ReactApexChart options={this.state.options} series={this.state.series} type=\"donut\" width={380} />\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\n\n export default PieChart","import react, {Component} from 'react'\nimport ReactApexChart from 'react-apexcharts'\n\n\nclass ColumnChart extends  Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n            series: [{\n                name: 'Net Profit',\n                data: [44, 55, 57, 56, 61, 58, 63, 60, 66]\n            }, {\n                name: 'Revenue',\n                data: [76, 85, 101, 98, 87, 105, 91, 114, 94]\n            }  ],\n            options: {\n                chart: {\n                    type: 'bar',\n                    height: 350\n                },\n                plotOptions: {\n                    bar: {\n                        horizontal: false,\n                        columnWidth: '55%',\n                        endingShape: 'rounded'\n                    },\n                },\n                dataLabels: {\n                    enabled: false,\n\n                },\n                stroke: {\n                    show: true,\n                    width: 2,\n                    colors: ['transparent'],\n\n                },\n                xaxis: {\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct'],\n                },\n                yaxis: {\n                    title: {\n                        text: ''\n                    }\n                },\n                fill: {\n                    opacity: 1,\n                    colors: ['#003CFF', '#D96FF8' ]\n                },\n                dropShadow: {\n                    enabled: true,\n                    top: 0,\n                    left: 0,\n                    blur: 3,\n                    opacity: 0.5\n                },\n                grid: {\n                    row: {\n                        colors: ['#fff' ]\n                    },\n                    column: {\n                        colors: ['#fff'  ]\n                    }\n                },\n\n                tooltip: {\n                    y: {\n                        formatter: function (val) {\n                            return \"$ \" + val + \" thousands\"\n                        }\n                    }\n                }\n            },\n\n\n        };\n    }\n\n\n\n    render() {\n        return (\n\n\n            <div id=\"chart\">\n                <h3>Tickets</h3>\n                <ReactApexChart options={this.state.options} series={this.state.series} type=\"bar\" height={350} />\n            </div>\n\n\n        );\n    }\n}\n\nexport default ColumnChart","import react, {Component} from 'react'\nimport ReactApexChart from 'react-apexcharts'\n\n\nclass RadialBars extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n            series: [44, 55, 67, 83],\n            options: {\n                chart: {\n                    height: 280,\n                    type: 'radialBar',\n                },\n                plotOptions: {\n                    radialBar: {\n                        dataLabels: {\n                            name: {\n                                fontSize: '22px',\n                            },\n                            value: {\n                                fontSize: '16px',\n                            },\n                            total: {\n                                show: true,\n                                label: 'Total',\n                                formatter: function (w) {\n                                    // By default this function returns the average of all series. The below is just an example to show the use of custom formatter function\n                                    return 249\n                                }\n                            }\n                        }\n                    }\n                },\n\n            },\n\n\n        };\n    }\n\n\n\n    render() {\n        return (\n\n\n            <div id=\"chart\">\n                <h3>\n                    Priority\n                </h3>\n                <ReactApexChart options={this.state.options} series={this.state.series} type=\"radialBar\" height={280} />\n            </div>\n\n\n        );\n    }\n}\n\n\nexport default RadialBars;","import React from 'react';\n\nconst Permission = () => {\n    return (\n        <div className=\"permission-pair\">\n            <h3>Permission</h3>\n\n            <div className=\"title-per\">\n                <span>Permissions</span>\n                <span>Users</span>\n            </div>\n\n\n            <div className=\"title-con\">\n                <div className=\"title-con-item\">\n                    <h4><span><img src=\"/img/icon/AdminIcon.png\" alt=\"img\"/></span>Admin</h4>\n                    <h4>11</h4>\n                </div>\n\n                <div className=\"title-con-item\">\n                    <h4><span><img src=\"/img/icon/AgentsIcon.png\" alt=\"img\"/></span>Agents</h4>\n                    <h4>14</h4>\n                </div>\n\n\n                <div className=\"title-con-item\">\n                    <h4><span><img src=\"/img/icon/ViewerIcon.png\" alt=\"img\"/></span>Viewer</h4>\n                    <h4>24</h4>\n                </div>\n\n            </div>\n        </div>\n\n    );\n};\n\nexport default Permission;","import React from 'react';\n\nconst Priority = () => {\n    return (\n        <div className=\"priority-pair\">\n\n            <h3>Priority</h3>\n        </div>\n    );\n};\n\nexport default Priority;","import React from 'react';\nimport SubNavbarMenu from \"../component/SubNavbarMenu\";\nimport AccountNavbar from \"../component/AccountNavbar\";\nimport PieChart from \"./Report/PieChart\";\nimport ColumnChart from \"./Report/ColumnChart\";\nimport RadialBars from \"./Report/RadialBars\";\nimport Permission from \"./Report/Permission\";\nimport Priority from \"./Report/Priority\";\nimport SideBar from \"../component/SideBar\";\n\nconst Report = () => {\n    return (\n\n\n\n\n\n\n            <div className='report'>\n                <div className=\"all-tickets-navbar\">\n\n                    <div className=\"all-tickets-navbar-child\">\n                        <h1>Report</h1>\n                        <AccountNavbar />\n                    </div>\n                </div>\n\n                <SubNavbarMenu/>\n\n\n\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <div className=\"chart-pair\">\n                            <PieChart />\n                        </div>\n                    </div>\n\n                    <div className=\"col-md-8\">\n                        <div className=\"chart-pair-column\">\n                            <ColumnChart/>\n                        </div>\n                    </div>\n                </div>\n\n\n\n\n                <div className=\"row\">\n                    <div className=\"col-md-3\">\n                        <div className=\"radial-bars\">\n                            <RadialBars/>\n                        </div>\n                    </div>\n                    <div className=\"col-md-4\">\n\n                        <Permission/>\n                    </div>\n                    <div className=\"col-md-5\">\n                        <Priority/>\n\n                    </div>\n                </div>\n            </div>\n\n\n    );\n};\n\nexport default Report;","import React, {useEffect, useState} from 'react';\nimport AccountNavbar from \"./AccountNavbar\";\nimport {Link} from \"react-router-dom\";\nimport {AvForm, AvField, AvRadio, AvRadioGroup} from 'availity-reactstrap-validation'\nimport {connect} from \"react-redux\";\nimport {changePasswordForSend, getInfoAccount, saveFile, updateUserInfo} from \"../redux/action/createAgentAction\";\nimport {getActiveTeamList} from \"../redux/action/CreateTeamAction\";\nimport {ClosedStatusCount, getAllTicket, OpenStatusCount, PendingStatusCount} from \"../redux/action/TicketsAction\";\n\nconst InfoAccount = (props) => {\n\n\n    useEffect(() => {\n        props.getInfoAccount()\n        props.getActiveTeamList()\n        props.OpenStatusCount()\n        props.ClosedStatusCount()\n        props.PendingStatusCount()\n        props.getAllTicket()\n    }, [])\n\n\n    const sendChangePassword = () => {\n        props.changePasswordForSend(props.getAccount.email, props.history)\n\n    }\n\n\n    const savePhoto = (e) => {\n        console.log(e.target.files[0])\n        props.saveFile(e.target.files[0], props.getAccount.id);\n    }\n\n\n    const updateUser = (event, value) => {\n\n        props.updateUserInfo(value, props.getAccount.id)\n    }\n\n\n    return (\n        <div className=\"info-account w-100\">\n            <div className=\"all-tickets-navbar\">\n\n                <div className=\"all-tickets-navbar-child\">\n                    <Link to='/agents' className='arrow-left-back'>\n                        <img src=\"/img/icon/arrowleft.png\"\n                             alt=\"back img\"/>Back</Link>\n                    <h1>Info account</h1>\n                    <AccountNavbar/>\n                </div>\n            </div>\n\n\n            <div className=\"row w-100\">\n                <div className=\"col-md-3\">\n\n\n                    <div className=\"account-img\">\n                        <img src={props.getAccount.image} alt=\"\"/>\n\n                        <span>{props.getAccount.role}</span>\n                    </div>\n\n                    <h3>{props.getAccount.full_name}</h3>\n                    <p>{props.getAccount.email}</p>\n\n\n                    <div className=\"count-tickets\">\n                        <h4>\n                            <span>  {props.AllCount.count ? props.AllCount.count : \"0\"}</span>\n                            <span>All tickets</span>\n                        </h4>\n\n                        <h4>\n\n                            <span>  {props.ClosedCount.count}</span>\n                            <span>Closed</span>\n                        </h4>\n\n                        <h4>\n                            <span>  {props.openCount.count}</span>\n                            <span>Open</span>\n                        </h4>\n                    </div>\n\n\n                    <AvForm>\n\n\n                        <h3 className=\"mb-3\"> Upload New Avatar</h3>\n\n                        <AvField type=\"file\"\n                                 id=\"file\"\n                                 onChange={savePhoto}\n                                 name=\"image\"\n\n                        />\n\n\n                    </AvForm>\n\n\n                    {/*<button className=\"delete-avatar-btn\">*/}\n                    {/*    Delete Avatar*/}\n                    {/*</button>*/}\n\n\n                    <img src=\"/img/Border.png\" className='img-top-border' alt=\"\"/>\n                </div>\n\n                <div className=\"col-md-7\">\n\n\n                    <AvForm onValidSubmit={updateUser}>\n                        <h3>Personality</h3>\n                        <div className=\"row-for-input\">\n                            <AvField\n                                name=\"full_name\"\n                                placeholder=\"Full name\"\n                                disabled\n                                value={props.getAccount.full_name}\n                            />\n\n\n                        </div>\n\n\n                        <h3>Contacts</h3>\n                        <div className=\"row-for-input for-email\">\n                            {/*<img src=\"/img/icon/envelope.png\" alt=\"\"/>*/}\n                            {/*<AvField*/}\n\n                            {/*    name=\"email\"*/}\n                            {/*    placeholder=\"E-mail\"*/}\n                            {/*    value={props.getAccount.email}*/}\n                            {/*/>*/}\n\n                            <AvField\n                                name=\"phone\"\n                                placeholder=\"Phone\"\n                                disabled\n                                value={props.getAccount.phone}\n                            />\n\n                        </div>\n\n\n                        <h3>Team</h3>\n                        <div className=\"row-for-input\">\n                            <AvField type=\"select\" name=\"team\" disabled classname=\"select-style\">\n\n                                {\n                                    props.activeAgentslList\n                                        ?\n                                        props.activeAgentslList.map(item =>\n                                            (\n                                                <option>{item.name}</option>\n\n                                            )\n                                        )\n                                        :\n                                        \"\"\n                                }\n\n\n                            </AvField>\n\n\n                        </div>\n\n\n                        <h3>\n                            Permissions\n                        </h3>\n\n\n                        <div className=\"row-for-input\">\n\n                            {/*<AvRadioGroup name=\"test\"  >*/}\n                            {/*    <div className=\"d-flex\">*/}\n                            {/*        <AvRadio customInput value=\"admin\"/>*/}\n                            {/*        <label>*/}\n                            {/*            <h4>Admin</h4>*/}\n                            {/*            <p>*/}\n                            {/*                Full access to global settings, adding new agents, subscription and all*/}\n                            {/*                actions related to tickets.*/}\n                            {/*            </p>*/}\n                            {/*        </label>*/}\n\n                            {/*    </div>*/}\n\n\n                            {/*    <div className=\"d-flex\">*/}\n\n                            {/*        <AvRadio customInput value=\"agent\" />*/}\n                            {/*        <label>*/}\n                            {/*            <h4>Agent</h4>*/}\n                            {/*            <p>*/}\n                            {/*                Access to personal settings and all actions related to tickets.*/}\n                            {/*            </p>*/}\n                            {/*        </label>*/}\n                            {/*    </div>*/}\n\n\n                            {/*    <div className=\"d-flex\">*/}\n\n                            {/*        <AvRadio customInput value=\"viewer\"  className=\"b-0\"/>*/}\n                            {/*        <label>*/}\n                            {/*            <h4>Viewer</h4>*/}\n                            {/*            <p>*/}\n                            {/*                Viewers can read and browse tickets but can’t take any actions.*/}\n                            {/*            </p>*/}\n                            {/*        </label>*/}\n\n                            {/*    </div>*/}\n\n\n                            {/*</AvRadioGroup>*/}\n                        </div>\n\n\n                        <div className=\"create-button-group\">\n\n                            <div>\n                                {\n                                    props.getAccount.role === \"Admin\"\n                                        ?\n\n                                        <button type='submit' className=\"btn\">\n                                            Save changes\n                                        </button>\n\n                                        :\n                                        ''\n                                }\n\n\n                                <button onClick={sendChangePassword} className=\"change-password-btn btn ml-3\">\n                                    Change password\n                                </button>\n\n                            </div>\n\n                            <Link to='/agents'>Cancel</Link>\n\n                        </div>\n\n\n                    </AvForm>\n\n\n                    <img src=\"/img/Divider.png\" className='img-bottom-border' alt=\"\"/>\n\n\n                    {/*<h3>*/}\n                    {/*    Delete agent*/}\n                    {/*</h3>*/}\n                    {/*<p>*/}\n                    {/*    You will delete the agent account and related statistics. <br/> Tickets will not be removed.*/}\n                    {/*</p>*/}\n                    {/*<h5 className='delete-account'>*/}\n                    {/*    Delete account*/}\n                    {/*</h5>*/}\n                </div>\n                <div className=\"col-md-2\">\n\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\nconst mapStateToProps = (state) => {\n    return {\n\n        getAccount: state.createAgentData.getAccount,\n        activeAgentslList: state.createTeamData.activeAgentslList,\n        openCount: state.ticketData.openCount,\n        ClosedCount: state.ticketData.ClosedCount,\n        AllCount: state.ticketData.AllCount,\n\n    }\n}\n\nexport default connect(mapStateToProps, {\n    getInfoAccount,\n    saveFile,\n    OpenStatusCount,\n    PendingStatusCount,\n    getAllTicket,\n    ClosedStatusCount,\n    updateUserInfo,\n    getActiveTeamList,\n    changePasswordForSend\n})(InfoAccount);","import React, {useEffect} from 'react';\nimport {Link} from \"react-router-dom\";\nimport AccountNavbar from \"../../component/AccountNavbar\";\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\nimport {MultiSelectComponent} from '@syncfusion/ej2-react-dropdowns';\nimport {connect} from \"react-redux\";\nimport {getActiveTeamList, updateState} from \"../../redux/action/CreateTeamAction\";\nimport {getStatusList,   createTIcket} from \"../../redux/action/TicketsAction\";\nimport {getAllAgents} from \"../../redux/action/createAgentAction\";\n\nconst NewTicket = (props) => {\n\n\n\n\n\n    useEffect( ()=>{\n        props.getActiveTeamList()\n        props.getStatusList()\n        props.getAllAgents()\n    }, [])\n    const    ticketForm =(events, values )=>{\n        props.createTIcket(values, props.history)\n\n\n\n\n    }\n\n\n    const selectTeam = (data) => {\n        // props.updateState({selectTeamReducer: data})\n        console.log(data.target.value)\n        console.log(props.getAllAgentsList)\n        console.log(props.activeAgentslList)\n        props.updateState({getAllAgentsList: props.activeAgentslList.filter(item => item.id == data.target.value)[0].agents})\n\n        // props.activeAgentslList.filter(item => )\n    }\n\n\n\n    function showNumber(x) {\n        document.getElementById('numberInput').value=\"+ 998\"\n\n        document.getElementById('numberInput').addEventListener('input', function (e) {\n            var x = e.target.value.replace(/\\D/g, '').match(/(\\d{0,3})(\\d{0,2})(\\d{0,3})(\\d{0,2})(\\d{0,2})/);\n            e.target.value = '+' + x[1] + ' ' + x[2] + ' ' + x[3] + ' ' + x[4] + ' ' + x[5];\n        });\n    }\n\n\n\n\n\n\n    return (\n        <div className='new-ticket-create-page w-100'>\n            <div className=\"all-tickets-navbar\">\n\n                <div className=\"all-tickets-navbar-child\">\n                    <Link to='/tickets' className='arrow-left-back'><img src=\"/img/icon/arrowleft.png\" alt=\"back img\"/>Back</Link>\n                    <h1>New ticket</h1>\n                    <AccountNavbar/>\n\n\n\n\n                </div>\n            </div>\n\n\n            <AvForm className=\"create-team-inputs\" onValidSubmit={ticketForm}>\n\n\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <h3>Subject</h3>\n                        <AvField type=\"text\" name=\"subject\" required className=\"form-control\" placeholder='Subject'/>\n                    </div>\n                    <div className=\"col-md-6\"></div>\n\n                </div>\n\n                <div className=\"row\">\n\n                    <div className=\"col-md-6\">\n                        <h3>Client</h3>\n\n                        <AvField type=\"text\" name=\"client_full_name\" className=\"form-control\" required placeholder='  Name'/>\n\n                    </div>\n                    <div className=\"col-md-6\">\n                        <h3>Phone number</h3>\n\n                        <AvField  onFocus={showNumber}   id='numberInput'  type=\"text\" name=\"client_phone_number\" className=\"form-control\" required placeholder='Phone number'/>\n\n                    </div>\n                </div>\n\n                <div className=\"row\">\n\n                    <div className=\"col-md-6\">\n                        <h3>Team</h3>\n\n                        <div className=\"multi-select2\">\n                            <AvField onChange={selectTeam} type=\"select\"  name='team' required>\n\n                                <option value=\"0\"></option>\n\n                                {\n                                    props.activeAgentslList.map(item =>(\n                                        <option   value={item.id}>{item.name}</option>\n                                    ))\n                                }\n\n\n                            {/*<MultiSelectComponent  id=\"mtselement\" fields={fields} dataSource={posts}*/}\n                            {/*                      placeholder=\"Select a team\"/>*/}\n\n                            </AvField>\n\n                        </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                        <h3>Agents</h3>\n                        <div className=\"multi-select\">\n                            <img src=\"/img/icon/account3.png\" className=\"select-img-account\" alt=\"account\"/>\n                            <AvField name=\"receiver\"  type=\"select\" className=\"pl-5\" required>\n\n\n                                <option value=\"0\"></option>\n                                {\n                                    props.getAllAgentsList.map(item =>(\n                                        <option value={item.id}>{item.full_name}</option>\n                                    ))\n                                }\n\n\n\n                            </AvField>\n\n\n                            {/*<img src=\"/img/icon/down.png\" className=\"select-img-down\" alt=\"account\"/>*/}\n\n                        </div>\n                    </div>\n                </div>\n\n\n\n\n\n\n\n\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <h3>Ticket status</h3>\n\n                        <div className=\"multi-select2\">\n\n                            {/*<img src=\"/img/icon/down.png\" className=\"select-img-down\" alt=\"account\"/>*/}\n\n                            <AvField name=\"ticket_status\" type=\"select\" required>\n\n\n                                <option value=\"0\"></option>\n                                {\n                                    props.ticketStatusList.map(item =>(\n                                        <option value={item.id}>{item.name}</option>\n                                    ))\n                                }\n\n                                {/*<MultiSelectComponent id=\"mtselement\"  fields={fields} dataSource={posts}*/}\n                                {/*                      placeholder=\"Priority\"/>*/}\n                            </AvField>\n                        </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                        <h3>Priority</h3>\n\n                        <div className=\"multi-select2\">\n\n                            {/*<img src=\"/img/icon/down.png\" className=\"select-img-down\" alt=\"account\"/>*/}\n\n                            <AvField name=\"priority\" type=\"select\" required>\n\n\n\n                                <option value=\"2\">Urgent</option>\n                                <option value=\"1\">High</option>\n                                <option value=\"0\">Medium</option>\n                                <option value=\"-1\">low</option>\n                                <option value=\"-2\">Very low</option>\n\n                                {/*<MultiSelectComponent id=\"mtselement\"  fields={fields} dataSource={posts}*/}\n                                {/*                      placeholder=\"Priority\"/>*/}\n                            </AvField>\n                        </div>\n                    </div>\n                </div>\n\n\n\n                {/*<AvField tag={CustomInput} type=\"checkbox\"*/}\n                {/*         className=\"ml-3 mt-3\"*/}\n                {/*         name=\"is_active\"*/}\n                {/*         label=\"Is active\"*/}\n                {/*/>*/}\n\n\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <AvField\n                        type='textarea'\n                        name=\"content\"\n\n                        style={{height: '200px'}}\n                        required\n                        />\n                    </div>\n                </div>\n                <div className=\"create-button-group\">\n                    <Link to='/agents'>Cancel</Link>\n\n\n                    <button className=\"btn\">\n                        Create ticket\n                        <img src=\"/img/icon/rightArrow.png\" alt=\"\"/>\n                    </button>\n                </div>\n            </AvForm>\n\n\n        </div>\n    );\n};\n\n\nconst mapStateToProps =(state)=>{\n    return{\n        activeAgentslList: state.createTeamData.activeAgentslList,\n        getAllAgentsList: state.createAgentData.getAllAgentsList,\n        ticketStatusList: state.ticketData.ticketStatusList,\n    }\n}\nexport default connect(mapStateToProps , {createTIcket, getAllAgents,updateState, getActiveTeamList, getStatusList})(NewTicket);","import React, {useEffect} from 'react';\nimport {API_PATH} from \"../tools/constants\";\nimport axios from \"axios\";\nimport {toast} from \"react-toastify\";\n\nconst Verified = (props) => {\n\n\n        useEffect(()=> {\n                const query = new URLSearchParams(props.location.search);\n                const token = query.get('token')\n\n\n\n                axios.get(API_PATH + \"user/v1/verify-email/?token=\" + token, )\n                    .then(res =>{\n                            console.log(res)\n                            res.success ? toast.error(\"failed\") : toast.success(\"success\")\n                    })\n                    .catch(err =>{\n                            console.log(err)\n                    })\n\n        }, [])\n    return (\n        <div>\n\n\n\n        </div>\n    );\n};\n\nexport default Verified;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst NotFound = () => {\n    return (\n        <div>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-4 offset-4 my-5 text-center\">\n\n\n                        <h4>Bunday sahifa mavjud emas!</h4>\n\n                        <Link to='/'>Bosh sahifaga o'tish</Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default NotFound;","import React from 'react';\nimport {TOKEN_NAME} from \"../tools/constants\";\nimport {Route, Redirect} from 'react-router-dom'\nimport NotFound from \"./NotFound\";\nconst PrivateRoute = (props) => {\n    return (\n        localStorage.getItem(TOKEN_NAME) ?\n            <Route component={props.component} path={props.path} exact={props.exact}/>\n            : <Route component={NotFound}/>\n        // : <Redirect to=\"/login\"/>\n    );\n};\n\nexport default PrivateRoute;","import React from 'react';\r\nimport SideBarMenus from \"../../component/SideBarMenus\";\r\nimport AccountNavbar from \"../../component/AccountNavbar\";\r\nimport SubNavbarMenu from \"../../component/SubNavbarMenu\";\r\nimport MainTableForTickets from \"../../component/MainTableForTickets\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatusList} from \"../../redux/action/TicketsAction\";\r\n\r\nconst AllTickets = () => {\r\n    return (\r\n        <div className=\"all-tickets d-flex \">\r\n\r\n\r\n\r\n            <SideBarMenus/>\r\n\r\n\r\n\r\n            <div className=\"all-tickets-right-pair\">\r\n                <div className=\"all-tickets-navbar\">\r\n\r\n                    <div className=\"all-tickets-navbar-child\">\r\n                        <h1>All tickets</h1>\r\n                        <AccountNavbar />\r\n                    </div>\r\n                </div>\r\n\r\n                <SubNavbarMenu/>\r\n                <MainTableForTickets/>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst mapStateToProps = () =>{\r\n    return{\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {getStatusList})(AllTickets);","import React, {useEffect, useState} from 'react';\nimport {API_PATH, TOKEN_NAME} from \"../tools/constants\";\nimport axios from \"axios\";\nimport {toast} from \"react-toastify\";\nimport {AvField, AvForm} from \"availity-reactstrap-validation\";\nimport {useParams} from \"react-router-dom\";\n\nconst VerifiedChangePassword = (props) => {\n\nconst [permission, setPermission] = useState(false)\nconst [tokenST, setTokenST] = useState(false)\nconst [uidb64ST, setUidb64ST] = useState(false)\n\n\n\n        useEffect(()=> {\n                const query = new URLSearchParams(props.location.search);\n                const token = query.get('token')\n                const uidb64 = query.get('uidb64')\n\n            setUidb64ST(uidb64);\n            setTokenST(token)\n\n\n\n                axios.get(API_PATH + \"user/v1/password-change-confirm/\"+ uidb64 + \"/\" +  token ,{headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n                    .then(res =>{\n                            console.log(res)\n                            res.success ? toast.error(\"failed\") : toast.success(\"success\")\n                        setPermission(true)\n\n                    })\n                    .catch(err =>{\n                            console.log(err)\n                    })\n\n        }, [])\n\n\n\n\n    const changePass =(event, values)=>{\n\n        let Data = new FormData();\n        Data.append(\"password\", values.password)\n        Data.append(\"password2\", values.password2)\n        Data.append(\"uidb64\",  uidb64ST)\n        Data.append(\"token\",tokenST)\n\n\n    axios.patch(API_PATH + \"user/v1/password-change-completed/\" , Data, {headers: {Authorization: \"Bearer \" + localStorage.getItem(TOKEN_NAME)}})\n        .then(res =>{\n            toast.success(\"success\")\n            props.history.push(\"/\")\n        })\n    }\n    return (\n        <div className=\"verified-change-password w-100\">\n\n\n\n            {\n                permission ?\n\n\n                    <div className='login-page '>\n                        <div className=\"login-form-group\">\n\n                            <h3>\n                                Change password\n                            </h3>\n\n                            <AvForm onValidSubmit={changePass}>\n                                <AvField\n\n                                    name='password'\n                                    required\n                                    placeholder=\"Password\"\n                                    type=\"password\"\n\n                                />\n                                <AvField\n\n                                    name='password2'\n                                    required\n                                    placeholder=\"Verify password\"\n                                    type=\"password\"\n                                />\n\n\n\n                                <div type=\"submit\" className=\"create-button-group\">\n\n\n                                    <button type=\"submit\" className=\"btn w-100\">\n                                        Change\n                                        {/*<img src=\"/img/icon/rightArrow.png\" alt=\"\"/>*/}\n                                    </button>\n                                </div>\n                            </AvForm>\n                        </div>\n                    </div>\n\n                    :\n\n\n                    <div>\n                        {\n                            ()=> alert(\"retry again\")\n                        }\n\n                        <button  > Change password</button>\n\n                    </div>\n            }\n\n\n\n        </div>\n    );\n};\n\nexport default VerifiedChangePassword;","import React, {useEffect} from 'react';\r\nimport {changeTicketStatus, getStatusList, ticketInfo, updateState} from \"../../redux/action/TicketsAction\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {API_PATH, TOKEN_NAME} from \"../../tools/constants\";\r\n\r\nconst TicketInfoRightPair = (props) => {\r\n\r\n    useEffect(()=>{\r\n        props.ticketInfo(window.location.pathname.split(\"/\").pop())\r\n        props.changeTicketStatus()\r\n        props.getStatusList()\r\n\r\n\r\n\r\n    }, [])\r\n\r\n    const changeStatusFunction = (data, values) => {\r\n        props.changeTicketStatus(data, values)\r\n\r\n    }\r\n    return (\r\n        <div className=\"ticket-info-right-pair\">\r\n\r\n\r\n            <div className=\"ticket-info-right-pair-header\">\r\n                <h2>Details</h2>\r\n\r\n                <div className=\"ticket-drp\">\r\n                    <button className=\" ticket-dropbtn\">\r\n                        <img src=\"/img/icon/verDots.png\" alt=\"\"/>\r\n                    </button>\r\n\r\n                    <div className=\" ticket-dropdown-content\">\r\n                {\r\n\r\n                    props.ticketStatusList.map(item2 => (\r\n                        <button\r\n                            onClick={() => changeStatusFunction( props.ticketInfoObject.id, item2.id)}>{item2.name}</button>\r\n                    ))\r\n                }\r\n                      </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"ticket-info-right-pair-body\">\r\n\r\n                <h2>Ticket info</h2>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <h5>\r\n                            Ticket ID:\r\n                        </h5>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <h6>ticketid/\r\n                            {\r\n                                props.ticketInfoObject.id\r\n                            }\r\n                        </h6>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <h5>\r\n                            Created:\r\n                        </h5>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <h6  >\r\n                            {\r\n                                props.ticketInfoObject.date_created?.slice(0,10)\r\n\r\n                            }\r\n                            <span>\r\n\r\n                                 {\r\n\r\n                                       \"/\"+\r\n                                     props.ticketInfoObject.date_created?.slice(11,16)\r\n\r\n                                 }\r\n                            </span>\r\n                        </h6>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <h5>\r\n                            Last message:\r\n                        </h5>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <h6  >\r\n                            {\r\n                                props.ticketInfoObject.date_modified?.slice(0,10)\r\n                            }\r\n\r\n                            <span>\r\n                                {\r\n                                  \"/\"+\r\n                                    props.ticketInfoObject.date_modified?.slice(11,16)\r\n\r\n                                }\r\n                            </span>\r\n                        </h6>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <h5>\r\n                            Status:\r\n                        </h5>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <h6>\r\n                            {\r\n                                props.ticketInfoObject.ticket_status_name\r\n                            }\r\n                        </h6>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <h5>\r\n                            Rating:\r\n                        </h5>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <h6>\r\n                            Not rated\r\n                        </h6>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <h5>\r\n                            Priority:\r\n                        </h5>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <h6>\r\n                            {\r\n                                props.ticketInfoObject.from_where\r\n                            }\r\n                        </h6>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <h5>\r\n                            Source:\r\n                        </h5>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <h6>\r\n                            Created manually\r\n                        </h6>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <img src=\"/img/Border.png\" className=\"w-100 mt-3\"  alt=\"\"/>\r\n\r\n\r\n\r\n\r\n                <div className=\"ticket-responsibility mt-3\">\r\n                    <h2>Responsibility</h2>\r\n\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 d-flex justify-content-between\">\r\n                            <h3>Team</h3>\r\n                            <span className=\"change\">Change</span>\r\n                        </div>\r\n\r\n                        <div className=\"ticket-team-info col-12  \">\r\n                            <img src=\"/img/icon/account3.png\" className=\"mr-3\" alt=\"\"/>\r\n                            <span className=\"team-name\">{props.ticketInfoObject.team_name}</span>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 d-flex justify-content-between\">\r\n                            <h3>Agent</h3>\r\n                            <span className=\"change\">Change</span>\r\n                        </div>\r\n\r\n                        <div className=\"ticket-team-info col-12  \">\r\n                            <img src=\"/img/icon/account3.png\" className=\"mr-3\" alt=\"\"/>\r\n                            <span className=\"team-name\">{props.ticketInfoObject.sender_name}</span>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 d-flex justify-content-between\">\r\n                            <h3>Requester</h3>\r\n                            <span className=\"change\">Change</span>\r\n                        </div>\r\n\r\n                        <div className=\"ticket-team-info col-12  \">\r\n                            <img src=\"/img/icon/account3.png\" className=\"mr-3\" alt=\"\"/>\r\n                            <span className=\"team-name\">{props.ticketInfoObject.receiver_name}</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n      ticketInfoObject: state.ticketData.ticketInfoObject,\r\n      ticketStatusList: state.ticketData.ticketStatusList,\r\n\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {ticketInfo,getStatusList, changeTicketStatus})(TicketInfoRightPair) ;","import React, {useEffect, useRef, useState} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport AccountNavbar from \"../../component/AccountNavbar\";\r\nimport {connect} from \"react-redux\";\r\nimport ScrollToBottom from \"react-scroll-to-bottom\"\r\nimport {getCommit, sendCommit, ticketInfo} from \"../../redux/action/TicketsAction\";\r\nimport {getInfoAccount} from \"../../redux/action/createAgentAction\";\r\nimport {AvForm, AvField} from \"availity-reactstrap-validation\"\r\nimport TicketInfoRightPair from \"./TicketInfoRightPair\";\r\nconst Commit = (props) => {\r\n\r\n\r\n    var url = document.URL\r\n\r\n const last  =  url.substr(url.lastIndexOf('/') + 1) ;\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n\r\n        props.getInfoAccount()\r\n        props.ticketInfo()\r\n\r\n        props.getCommit(last )\r\n\r\n\r\n        window.scrollTo(0, 0)\r\n\r\n\r\n\r\n    }, [])\r\n\r\n    const inputRef = useRef()\r\n\r\n    const handleClick= () => {\r\n        inputRef.current.value = \"\";\r\n        return \"\"\r\n\r\n    }\r\n\r\n    const sendMessage =(event, values)=>{\r\n        props.sendCommit(values , props.ticketInfoObject.id )\r\n        props.ticketInfo()\r\n        // handleClick()\r\n        //\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"commit w-100 \">\r\n            <div className=\"all-tickets-navbar bg-white\">\r\n\r\n                <div className=\"all-tickets-navbar-child\">\r\n                    <Link to='/tickets/all-tickets' className='arrow-left-back'><img src=\"/img/icon/arrowleft.png\" alt=\"back img\"/>Back</Link>\r\n                    <h1>{props.ticketInfoObject.subject}</h1>\r\n                    <AccountNavbar/>\r\n\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"commit-main-pair\">\r\n                <div className=\"commit-body \"    >\r\n                    <div  className=\"commit-list-items    \"  >\r\n\r\n                        <ScrollToBottom className=\"commit-list-last-child\">\r\n\r\n\r\n                            <div className=\"ticket-subject\">\r\n\r\n\r\n                                <p><b>{props.ticketInfoObject.client_full_name}:</b> {props.ticketInfoObject.content}</p>\r\n                                <span> <b>{props.ticketInfoObject?.date_created?.slice(11, 16)}</b></span>    <span className=\"ml-1\">{props.ticketInfoObject?.date_created?.slice(0, 10)}</span>\r\n\r\n                            </div>\r\n                            {\r\n                                props.commitList.map(item =>\r\n                                    (\r\n                                        <div className={ props.getAccount.id  === item.agent ? \"receiver fath-com\" : \"sender fath-com\"}>\r\n\r\n\r\n                                            <div className=\"commit-big-box \" >\r\n                                                <img src=\"/img/icon/account2.png\" alt=\"\"/>\r\n\r\n                                                <div className=\"commit-content\">\r\n                                                    <h3>{item.agent_name}</h3>\r\n                                                    <p>{item.message}</p>\r\n                                                </div>\r\n                                                <span className=\"text-right\">\r\n                                                   <b> {item.date_created.slice(11, 16)}</b> <br/>\r\n                                                    {item.date_created.slice(0, 10)}\r\n\r\n\r\n                                                </span>\r\n\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n\r\n                                    )\r\n                                )\r\n                            }\r\n                        </ScrollToBottom>\r\n                        <div className=\"text-box-for-send\">\r\n\r\n\r\n                            <span className=\"my-placeholder\">Your feedback</span>\r\n\r\n                            <AvForm onValidSubmit={sendMessage}>\r\n                                <AvField id=\"textContent\"  name=\"message\" ref={inputRef} type=\"textarea\"/>\r\n                                <button className=\"btn\">\r\n                                    Submit\r\n                                    <img src=\"/img/icon/rightArrow.png\" alt=\"\"/>\r\n                                </button>\r\n                            </AvForm>\r\n                        </div>\r\n                    </div >\r\n\r\n\r\n                </div>\r\n                <div className=\"commit-info\">\r\n                    <TicketInfoRightPair/>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        commitList: state.ticketData.commitList,\r\n        selectedCommitId: state.ticketData.selectedCommitId,\r\n        getAccount: state.createAgentData.getAccount,\r\n        ticketInfoObject: state.ticketData.ticketInfoObject,\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {getCommit, ticketInfo,  sendCommit,getInfoAccount})(Commit);","import React, {useEffect, useState} from 'react';\r\nimport {\r\n    changeTicketStatus,\r\n    getCommit,\r\n    getAllTicketToHandle,\r\n    getStatusList,\r\n    changeTicketPr\r\n} from \"../redux/action/TicketsAction\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\n\r\n\r\nconst TicketsHandleTable = (props) => {\r\n\r\n\r\n    const [currentPage, setcurrentPage] = useState(0);\r\n    const [itemsPerPage, setitemsPerPage] = useState(5);\r\n\r\n    const [pageNumberLimit, setpageNumberLimit] = useState(5);\r\n    const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(2);\r\n    const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\r\n\r\n    const handleClick = (event) => {\r\n        props.getAllTicketToHandle(Number(event.target.id));\r\n\r\n    };\r\n\r\n    const pages = [];\r\n    for (let i = 1; i <= Math.ceil(props.btc.last_page); i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const indexOfLastItem = currentPage * itemsPerPage;\r\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n    // const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n    const renderPageNumbers = pages.map((number) => {\r\n        // if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\r\n        return (\r\n            <li\r\n                key={number}\r\n                id={number}\r\n                onClick={handleClick}\r\n                className={props.pageIndex == number ? \"active\" : null}\r\n\r\n            >\r\n\r\n                {number}\r\n            </li>\r\n        );\r\n        // } else {\r\n        //     return null;\r\n        // }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        props.getAllTicketToHandle()\r\n        props.getStatusList()\r\n        props.changeTicketStatus()\r\n        props.changeTicketPr()\r\n\r\n    }, [])\r\n\r\n\r\n    const changePrFunction = (data, values) => {\r\n        props.changeTicketPr(data, values)\r\n\r\n    }\r\n\r\n    let history = useHistory();\r\n\r\n\r\n    const changeStatusFunction = (data, values) => {\r\n        props.changeTicketStatus(data, values)\r\n\r\n    }\r\n\r\n    const handleNextbtn = () => {\r\n\r\n        setcurrentPage(currentPage + 1);\r\n\r\n        props.getMyOpenTicketNext(props.btc.next)\r\n        // if (currentPage + 1 > maxPageNumberLimit) {\r\n        //     setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n        //     setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n        // }\r\n    };\r\n\r\n    const handlePrevbtn = () => {\r\n        setcurrentPage(currentPage - 1);\r\n\r\n\r\n        props.getMyOpenTicketPrev(props.btc.previous)\r\n        // if ((currentPage - 1) % pageNumberLimit == 0) {\r\n        //\r\n        //     setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n        //     setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n        // }\r\n    };\r\n\r\n\r\n\r\n    const visitCommit = (values, events) => {\r\n        props.getCommit(values, history)\r\n    }\r\n    return (\r\n        <div className='main-table-for-tickets'>\r\n\r\n\r\n            <table>\r\n\r\n                <tr className=\"main-table-header\">\r\n                    <th><input type=\"checkbox\"/></th>\r\n                    <th>\r\n                        Requester\r\n                    </th>\r\n                    <th>\r\n                        Subject\r\n                    </th>\r\n                    <th>\r\n                        Agent\r\n                    </th>\r\n                    <th>\r\n                        Status\r\n                    </th>\r\n                    <th>\r\n                        Last message\r\n                    </th>\r\n                    <th>\r\n\r\n                    </th>\r\n                    <th></th>\r\n                </tr>\r\n\r\n\r\n                {\r\n                    props.getTicketsToHandle?.map((item, index) => (\r\n                        <tr >\r\n                            <td>\r\n                                <input type=\"checkbox\"/>\r\n                            </td>\r\n                            <td className=\"requester-name\" onClick={() => visitCommit(item.id)} style={{cursor: \"pointer\"}}>\r\n                                <h4>{item.client_full_name}</h4>\r\n                                <span>{item.sender_name}</span>\r\n                            </td>\r\n                            <td className=\"subject-name\">\r\n\r\n                                {item.priority === 1 ? <img src=\"/img/icon/open.png\" alt=\"\"/> : item.priority === 2 ?\r\n                                    <img src=\"/img/icon/fast.png\" alt=\"\"/> :\r\n                                    item.priority === 0 ?\r\n                                        <img src=\"/img/icon/onHold.png\" alt=\"\"/> : item.priority === -1 ?\r\n                                            <img src=\"/img/icon/close.png\" alt=\"\"/> : item.priority === -2 ? \"iconnnn\" : ''}\r\n\r\n\r\n                                {\" \" + item.subject}\r\n                            </td>\r\n\r\n                            <td>\r\n                                {item.receiver_name}\r\n                            </td>\r\n                            <td><span\r\n                                className={item.ticket_status_name === \"Open\" ?\r\n                                    \"open\" : item.ticket_status_name === \"Closed\" ?\r\n                                        \"closed\" : item.ticket_status_name === \"Pending\" ?\r\n                                            \"pending\" : \"\"}>\r\n                       {item.ticket_status_name}\r\n                    </span></td>\r\n                            <td>\r\n                                {\r\n                                    item.date_created.slice(0, 10)\r\n                                }\r\n                            </td>\r\n                            <td className=\"all-tickets-event-menu-father dropdown\">\r\n                                <button className=\"all-tickets-event dropbtn\">\r\n                                    <img src=\"/img/icon/verDots.png\" alt=\"\"/>\r\n                                </button>\r\n\r\n\r\n                                {/*<div className=\"all-tickets-event-menu dropdown-content\">*/}\r\n\r\n\r\n                                {/*    {*/}\r\n                                {/*        props.ticketStatusList.map(item2 => (*/}\r\n                                {/*            <button*/}\r\n                                {/*                onClick={() => changeStatusFunction(item.id, item2.id)}>{item2.name}</button>*/}\r\n                                {/*        ))*/}\r\n                                {/*    }*/}\r\n\r\n                                {/*</div>*/}\r\n\r\n                                <div className=\"all-tickets-event-menu dropdown-content\">\r\n\r\n\r\n                                    {\r\n                                        props.ticketStatusList.map(item2 => (\r\n                                            <button\r\n                                                onClick={() => changeStatusFunction(item.id, item2.id)}>{item2.name}</button>\r\n                                        ))\r\n                                    }\r\n\r\n                                    <img src=\"/img/icon/Divider.png\" alt=\"\"/>\r\n\r\n\r\n                                    <button onClick={() => changePrFunction(item.id, 2)}><img src=\"/img/icon/fast.png\"\r\n                                                                                              className=\"mr-2\"\r\n                                                                                              alt=\"\"/> Urgent\r\n                                    </button>\r\n                                    <button onClick={() => changePrFunction(item.id, 1)}><img src=\"/img/icon/open.png\"\r\n                                                                                              className=\"mr-2\"\r\n                                                                                              alt=\"\"/> High\r\n                                    </button>\r\n                                    <button onClick={() => changePrFunction(item.id, 0)}><img src=\"/img/icon/onHold.png\"\r\n                                                                                              className=\"mr-2\"\r\n                                                                                              alt=\"\"/> Medium\r\n                                    </button>\r\n                                    <button onClick={() => changePrFunction(item.id, -1)}><img src=\"/img/icon/close.png\"\r\n                                                                                               className=\"mr-2\"\r\n                                                                                               alt=\"\"/> Low\r\n                                    </button>\r\n                                    <button onClick={() => changePrFunction(item.id, -2)}><img src=\"/img/icon/pw.png\"\r\n                                                                                               className=\"mr-2\"\r\n                                                                                               alt=\"\"/> Very low\r\n                                    </button>\r\n\r\n\r\n                                </div>\r\n\r\n\r\n                            </td>\r\n                            {/*<td> </td>*/}\r\n\r\n                        </tr>\r\n\r\n                    ))\r\n                }\r\n\r\n\r\n            </table>\r\n\r\n\r\n\r\n\r\n\r\n            <ul className=\"pageNumbers d-flex p-2  \">\r\n                <li className=\"ml-3\">\r\n                    <button className=\"p-left\"\r\n                            onClick={handlePrevbtn}\r\n                        // disabled={currentPage == pages[0] ? true : false}\r\n                    >\r\n                        <img src=\"/img/icon/Stroke169.png\" alt=\"\"/>\r\n                    </button>\r\n                </li>\r\n                {/*{pageDecrementBtn}*/}\r\n                {renderPageNumbers}\r\n                {/*{pageIncrementBtn}*/}\r\n\r\n                <li>\r\n                    <button className=\"p-right\"\r\n                            onClick={handleNextbtn}\r\n                        // disabled={currentPage == pages[pages.length - 1] ? true : false}\r\n                    >\r\n                        <img src=\"/img/icon/Stroke168.png\" alt=\"\"/>\r\n\r\n                    </button>\r\n                </li>\r\n            </ul>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n//\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n        getTickets: state.ticketData.getTickets,\r\n        getTicketsToHandle: state.ticketData.getTicketsToHandle,\r\n        ticketStatusList: state.ticketData.ticketStatusList,\r\n        btc: state.ticketData.btc,\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    getAllTicketToHandle,\r\n    changeTicketPr,\r\n    getCommit,\r\n    changeTicketStatus,\r\n    getStatusList\r\n})(TicketsHandleTable);","import React from 'react';\r\nimport SideBarMenus from \"../../component/SideBarMenus\";\r\nimport AccountNavbar from \"../../component/AccountNavbar\";\r\nimport SubNavbarMenu from \"../../component/SubNavbarMenu\";\r\nimport MainTableForTickets from \"../../component/MainTableForTickets\";\r\nimport TicketsHandleTable from \"../../component/TicketsHandleTable\";\r\n\r\nconst TicketsToHandle = () => {\r\n    return (\r\n        <div className=\"all-tickets d-flex \">\r\n\r\n\r\n\r\n            <SideBarMenus/>\r\n\r\n\r\n\r\n            <div className=\"all-tickets-right-pair\">\r\n                <div className=\"all-tickets-navbar\">\r\n\r\n                    <div className=\"all-tickets-navbar-child\">\r\n                        <h1>Tickets to handle</h1>\r\n                        <AccountNavbar />\r\n                    </div>\r\n                </div>\r\n\r\n                <SubNavbarMenu/>\r\n                <TicketsHandleTable/>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default TicketsToHandle;","import React, {useEffect, useState} from 'react';\r\nimport {\r\n    changeTicketPr,\r\n    changeTicketStatus,\r\n    getCommit,\r\n    getMyOpenTicket, getMyOpenTicketNext, getMyOpenTicketPrev,\r\n    getStatusList,\r\n\r\n} from \"../redux/action/TicketsAction\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\n\r\n\r\nconst OpenTicketsTable = (props) => {\r\n\r\n\r\n\r\n    const [currentPage, setcurrentPage] = useState(0);\r\n    const [itemsPerPage, setitemsPerPage] = useState(5);\r\n\r\n    const [pageNumberLimit, setpageNumberLimit] = useState(5);\r\n    const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(2);\r\n    const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\r\n\r\n    const handleClick = (event) => {\r\n        props.getMyOpenTicket(Number(event.target.id));\r\n\r\n    };\r\n\r\n    const pages = [];\r\n    for (let i = 1; i <= Math.ceil(props.boc.last_page); i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const indexOfLastItem = currentPage * itemsPerPage;\r\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n    // const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n    const renderPageNumbers = pages.map((number) => {\r\n        // if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\r\n        return (\r\n            <li\r\n                key={number}\r\n                id={number}\r\n                onClick={handleClick}\r\n                className={props.pageIndex == number ? \"active\" : null}\r\n\r\n            >\r\n\r\n                {number}\r\n            </li>\r\n        );\r\n        // } else {\r\n        //     return null;\r\n        // }\r\n    });\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        props.getMyOpenTicket()\r\n        props.getStatusList()\r\n        props.changeTicketStatus()\r\n        props.changeTicketPr()\r\n\r\n    }, [])\r\n\r\n    let history = useHistory();\r\n    const changeStatusFunction = (data, values) => {\r\n        props.changeTicketStatus(data, values)\r\n\r\n    }\r\n\r\n\r\n    const changePrFunction = (data, values) => {\r\n        props.changeTicketPr(data, values)\r\n\r\n    }\r\n\r\n\r\n    const visitCommit = (values, events) => {\r\n        props.getCommit(values, history)\r\n    }\r\n\r\n\r\n    const handleNextbtn = () => {\r\n\r\n        setcurrentPage(currentPage + 1);\r\n\r\n        props.getMyOpenTicketNext(props.boc.next)\r\n        // if (currentPage + 1 > maxPageNumberLimit) {\r\n        //     setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n        //     setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n        // }\r\n    };\r\n\r\n    const handlePrevbtn = () => {\r\n        setcurrentPage(currentPage - 1);\r\n\r\n\r\n        props.getMyOpenTicketPrev(props.boc.previous)\r\n        // if ((currentPage - 1) % pageNumberLimit == 0) {\r\n        //\r\n        //     setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n        //     setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n        // }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className='main-table-for-tickets'>\r\n\r\n\r\n            <table>\r\n\r\n                <tr className=\"main-table-header\">\r\n                    <th><input type=\"checkbox\"/></th>\r\n                    <th>\r\n                        Requester\r\n                    </th>\r\n                    <th>\r\n                        Subject\r\n                    </th>\r\n                    <th>\r\n                        Agent\r\n                    </th>\r\n                    <th>\r\n                        Status\r\n                    </th>\r\n                    <th>\r\n                        Last message\r\n                    </th>\r\n                    <th>\r\n\r\n                    </th>\r\n                    <th></th>\r\n                </tr>\r\n\r\n\r\n                {\r\n                    props.getOpenTickets?.map((item, index) => (\r\n                        <tr>\r\n                            <td>\r\n                                <input type=\"checkbox\"/>\r\n                            </td>\r\n                            <td className=\"requester-name\" onClick={() => visitCommit(item.id)}\r\n                                style={{cursor: \"pointer\"}}>\r\n                                <h4>{item.client_full_name}</h4>\r\n                                <span>{item.sender_name}</span>\r\n                            </td>\r\n                            <td className=\"subject-name\">\r\n\r\n                                {item.priority === 1 ? <img src=\"/img/icon/open.png\" alt=\"\"/> : item.priority === 2 ?\r\n                                    <img src=\"/img/icon/fast.png\" alt=\"\"/> :\r\n                                    item.priority === 0 ?\r\n                                        <img src=\"/img/icon/onHold.png\" alt=\"\"/> : item.priority === -1 ?\r\n                                            <img src=\"/img/icon/close.png\" alt=\"\"/> : item.priority === -2 ? \"iconnnn\" : ''}\r\n\r\n\r\n                                {\" \" + item.subject}\r\n                            </td>\r\n\r\n                            <td>\r\n                                {item.receiver_name}\r\n                            </td>\r\n                            <td><span\r\n                                className={item.ticket_status_name === \"Open\" ?\r\n                                    \"open\" : item.ticket_status_name === \"Closed\" ?\r\n                                        \"closed\" : item.ticket_status_name === \"Pending\" ?\r\n                                            \"pending\" : \"\"}>\r\n                       {item.ticket_status_name}\r\n                    </span></td>\r\n                            <td>\r\n                                {\r\n                                    item.date_created.slice(0, 10)\r\n                                }\r\n                            </td>\r\n                            <td className=\"all-tickets-event-menu-father dropdown\">\r\n                                <button className=\"all-tickets-event dropbtn\">\r\n                                    <img src=\"/img/icon/verDots.png\" alt=\"\"/>\r\n                                </button>\r\n\r\n\r\n                                {/*<div className=\"all-tickets-event-menu dropdown-content\">*/}\r\n\r\n\r\n                                {/*    {*/}\r\n                                {/*        props.ticketStatusList.map(item2 =>(*/}\r\n                                {/*            <button  onClick={()=> changeStatusFunction(item.id, item2.id)}>{item2.name}</button>*/}\r\n                                {/*        ))*/}\r\n                                {/*    }*/}\r\n\r\n                                {/*</div>*/}\r\n\r\n\r\n                                <div className=\"all-tickets-event-menu dropdown-content\">\r\n\r\n\r\n                                    {\r\n                                        props.ticketStatusList.map(item2 => (\r\n                                            <button\r\n                                                onClick={() => changeStatusFunction(item.id, item2.id)}>{item2.name}</button>\r\n                                        ))\r\n                                    }\r\n\r\n                                    <img src=\"/img/icon/Divider.png\" alt=\"\"/>\r\n\r\n\r\n                                    <button onClick={() => changePrFunction(item.id, 2)}><img src=\"/img/icon/fast.png\"\r\n                                                                                              className=\"mr-2\"\r\n                                                                                              alt=\"\"/> Urgent\r\n                                    </button>\r\n                                    <button onClick={() => changePrFunction(item.id, 1)}><img src=\"/img/icon/open.png\"\r\n                                                                                              className=\"mr-2\"\r\n                                                                                              alt=\"\"/> High\r\n                                    </button>\r\n                                    <button onClick={() => changePrFunction(item.id, 0)}><img src=\"/img/icon/onHold.png\"\r\n                                                                                              className=\"mr-2\"\r\n                                                                                              alt=\"\"/> Medium\r\n                                    </button>\r\n                                    <button onClick={() => changePrFunction(item.id, -1)}><img src=\"/img/icon/close.png\"\r\n                                                                                               className=\"mr-2\"\r\n                                                                                               alt=\"\"/> Low\r\n                                    </button>\r\n                                    <button onClick={() => changePrFunction(item.id, -2)}><img src=\"/img/icon/pw.png\"\r\n                                                                                               className=\"mr-2\"\r\n                                                                                               alt=\"\"/> Very low\r\n                                    </button>\r\n\r\n\r\n                                </div>\r\n\r\n\r\n                            </td>\r\n                            {/*<td> </td>*/}\r\n\r\n                        </tr>\r\n\r\n                    ))\r\n                }\r\n\r\n\r\n            </table>\r\n\r\n\r\n\r\n            <ul className=\"pageNumbers d-flex p-2\">\r\n                <li className=\"ml-3 \" >\r\n                    <button className=\"p-left \"\r\n                            onClick={handlePrevbtn}\r\n                        // disabled={currentPage == pages[0] ? true : false}\r\n                    >\r\n                        <img src=\"/img/icon/Stroke169.png\" alt=\"\"/>\r\n                    </button>\r\n                </li>\r\n                {/*{pageDecrementBtn}*/}\r\n                {renderPageNumbers}\r\n                {/*{pageIncrementBtn}*/}\r\n\r\n                <li>\r\n                    <button className=\"p-right\"\r\n                            onClick={handleNextbtn}\r\n                        // disabled={currentPage == pages[pages.length - 1] ? true : false}\r\n                    >\r\n                        <img src=\"/img/icon/Stroke168.png\" alt=\"\"/>\r\n\r\n                    </button>\r\n                </li>\r\n            </ul>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n//\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n        getOpenTickets: state.ticketData.getOpenTickets,\r\n        ticketStatusList: state.ticketData.ticketStatusList,\r\n        boc: state.ticketData.boc,\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    getMyOpenTicket,\r\n    changeTicketPr,\r\n    getCommit,\r\n    changeTicketStatus,\r\n    getStatusList,\r\n    getMyOpenTicketPrev,\r\n    getMyOpenTicketNext,\r\n\r\n})(OpenTicketsTable);","import React from 'react';\r\nimport SideBarMenus from \"../../component/SideBarMenus\";\r\nimport AccountNavbar from \"../../component/AccountNavbar\";\r\nimport SubNavbarMenu from \"../../component/SubNavbarMenu\";\r\nimport MainTableForTickets from \"../../component/MainTableForTickets\";\r\nimport OpenTicketsTable from \"../../component/OpenTicketsTable\";\r\n\r\nconst TicketOpen = () => {\r\n    return (\r\n        <div className=\"all-tickets d-flex \">\r\n\r\n\r\n\r\n            <SideBarMenus/>\r\n\r\n\r\n\r\n            <div className=\"all-tickets-right-pair\">\r\n                <div className=\"all-tickets-navbar\">\r\n\r\n                    <div className=\"all-tickets-navbar-child\">\r\n                        <h1>My open tickets</h1>\r\n                        <AccountNavbar />\r\n                    </div>\r\n                </div>\r\n\r\n                <SubNavbarMenu/>\r\n                <OpenTicketsTable />\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default TicketOpen;","import React, {useEffect, useState} from 'react';\r\nimport {\r\n    changeTicketPr,\r\n    changeTicketStatus,\r\n    getCommit,\r\n    getMyOpenTicket,\r\n    getStatusList, getTicketsSevenDays, getTicketsSevenDaysNext, getTicketsSevenDaysPrev,\r\n\r\n} from \"../redux/action/TicketsAction\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\n\r\n\r\nconst LastDaysTable = (props) => {\r\n\r\n\r\n    var date = new Date();\r\n    date.setDate(date.getDate() - 7);\r\n\r\n    var start_date = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\r\n\r\n\r\n    let currentDate = new Date()\r\n    let day = currentDate.getDate()\r\n    let month = currentDate.getMonth() + 1\r\n    let year = currentDate.getFullYear()\r\n\r\n    let end_date = year + \"-\" + month + \"-\" + day\r\n\r\n    const [currentPage, setcurrentPage] = useState(0);\r\n    const [itemsPerPage, setitemsPerPage] = useState(5);\r\n\r\n    const [pageNumberLimit, setpageNumberLimit] = useState(5);\r\n    const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(2);\r\n    const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\r\n\r\n    const handleClick = (event) => {\r\n        props.getTicketsSevenDays(start_date, end_date, Number(event.target.id))\r\n\r\n\r\n    };\r\n\r\n\r\n    const changePrFunction = (data, values) => {\r\n        props.changeTicketPr(data, values)\r\n\r\n    }\r\n\r\n    const pages = [];\r\n    for (let i = 1; i <= Math.ceil(props.bot.last_page); i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const indexOfLastItem = currentPage * itemsPerPage;\r\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n    // const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n    const renderPageNumbers = pages.map((number) => {\r\n        // if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\r\n        return (\r\n            <li\r\n                key={number}\r\n                id={number}\r\n                onClick={handleClick}\r\n                className={props.pageIndex == number ? \"active\" : null}\r\n            >\r\n\r\n                {number}\r\n            </li>\r\n        );\r\n        // } else {\r\n        //     return null;\r\n        // }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        props.getMyOpenTicket()\r\n        props.getStatusList()\r\n        props.changeTicketStatus()\r\n        props.getTicketsSevenDays(start_date, end_date)\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    let history = useHistory();\r\n    const changeStatusFunction = (data, values) => {\r\n        props.changeTicketStatus(data, values)\r\n\r\n    }\r\n\r\n    const visitCommit = (values, events) => {\r\n        props.getCommit(values, history)\r\n    }\r\n\r\n\r\n    const handleNextbtn = () => {\r\n\r\n        // setcurrentPage(currentPage + 1);\r\n\r\n        props.getTicketsSevenDaysNext(props.bot.next)\r\n        // if (currentPage + 1 > maxPageNumberLimit) {\r\n        //     setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n        //     setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n        // }\r\n    };\r\n\r\n    const handlePrevbtn = () => {\r\n        setcurrentPage(currentPage - 1);\r\n\r\n\r\n        props.getTicketsSevenDaysPrev(props.bot.previous)\r\n        // if ((currentPage - 1) % pageNumberLimit == 0) {\r\n        //\r\n        //     setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n        //     setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n        // }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className='main-table-for-tickets'>\r\n\r\n\r\n            <table>\r\n\r\n                <tr className=\"main-table-header\">\r\n                    <th><input type=\"checkbox\"/></th>\r\n                    <th>\r\n                        Requester\r\n                    </th>\r\n                    <th>\r\n                        Subject\r\n                    </th>\r\n                    <th>\r\n                        Agent\r\n                    </th>\r\n                    <th>\r\n                        Status\r\n                    </th>\r\n                    <th>\r\n                        Last message\r\n                    </th>\r\n                    <th>\r\n\r\n                    </th>\r\n                    <th></th>\r\n                </tr>\r\n\r\n\r\n                {\r\n                    props.getLastDaysTickets ? props.getLastDaysTickets.map((item, index) => (\r\n                            <tr>\r\n                                <td>\r\n                                    <input type=\"checkbox\"/>\r\n                                </td>\r\n                                <td onClick={() => visitCommit(item.id)} style={{cursor: \"pointer\"}}\r\n                                    className=\"requester-name\">\r\n                                    <h4>{item.client_full_name}</h4>\r\n                                    <span>{item.sender_name}</span>\r\n                                </td>\r\n                                <td className=\"subject-name\">\r\n\r\n                                    {item.priority === 1 ? <img src=\"/img/icon/open.png\" alt=\"\"/> : item.priority === 2 ?\r\n                                        <img src=\"/img/icon/fast.png\" alt=\"\"/> :\r\n                                        item.priority === 0 ?\r\n                                            <img src=\"/img/icon/onHold.png\" alt=\"\"/> : item.priority === -1 ?\r\n                                                <img src=\"/img/icon/close.png\" alt=\"\"/> : item.priority === -2 ? \"iconnnn\" : ''}\r\n\r\n\r\n                                    {\" \" + item.subject}\r\n                                </td>\r\n\r\n                                <td>\r\n                                    {item.receiver_name}\r\n                                </td>\r\n                                <td><span\r\n                                    className={item.ticket_status_name === \"Open\" ?\r\n                                        \"open\" : item.ticket_status_name === \"Closed\" ?\r\n                                            \"closed\" : item.ticket_status_name === \"Pending\" ?\r\n                                                \"pending\" : \"\"}>\r\n                                              {item.ticket_status_name}\r\n                    </span></td>\r\n                                <td>\r\n                                    {\r\n                                        item.date_created.slice(0, 10)\r\n                                    }\r\n                                </td>\r\n                                <td className=\"all-tickets-event-menu-father dropdown\">\r\n                                    <button className=\"all-tickets-event dropbtn\">\r\n                                        <img src=\"/img/icon/verDots.png\" alt=\"\"/>\r\n                                    </button>\r\n\r\n\r\n                                    {/*<div className=\"all-tickets-event-menu dropdown-content\">*/}\r\n\r\n\r\n                                    {/*    {*/}\r\n                                    {/*        props.ticketStatusList.map(item2 =>(*/}\r\n                                    {/*            <button  onClick={()=> changeStatusFunction(item.id, item2.id)}>{item2.name}</button>*/}\r\n                                    {/*        ))*/}\r\n                                    {/*    }*/}\r\n\r\n                                    {/*</div>*/}\r\n\r\n\r\n                                    <div className=\"all-tickets-event-menu dropdown-content\">\r\n\r\n\r\n                                        {\r\n                                            props.ticketStatusList.map(item2 => (\r\n                                                <button\r\n                                                    onClick={() => changeStatusFunction(item.id, item2.id)}>{item2.name}</button>\r\n                                            ))\r\n                                        }\r\n\r\n                                        <img src=\"/img/icon/Divider.png\" alt=\"\"/>\r\n\r\n\r\n                                        <button onClick={() => changePrFunction(item.id, 2)}><img src=\"/img/icon/fast.png\"\r\n                                                                                                  className=\"mr-2\"\r\n                                                                                                  alt=\"\"/> Urgent\r\n                                        </button>\r\n                                        <button onClick={() => changePrFunction(item.id, 1)}><img src=\"/img/icon/open.png\"\r\n                                                                                                  className=\"mr-2\"\r\n                                                                                                  alt=\"\"/> High\r\n                                        </button>\r\n                                        <button onClick={() => changePrFunction(item.id, 0)}><img src=\"/img/icon/onHold.png\"\r\n                                                                                                  className=\"mr-2\"\r\n                                                                                                  alt=\"\"/> Medium\r\n                                        </button>\r\n                                        <button onClick={() => changePrFunction(item.id, -1)}><img src=\"/img/icon/close.png\"\r\n                                                                                                   className=\"mr-2\"\r\n                                                                                                   alt=\"\"/> Low\r\n                                        </button>\r\n                                        <button onClick={() => changePrFunction(item.id, -2)}><img src=\"/img/icon/pw.png\"\r\n                                                                                                   className=\"mr-2\"\r\n                                                                                                   alt=\"\"/> Very low\r\n                                        </button>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </td>\r\n                                {/*<td> </td>*/}\r\n\r\n                            </tr>\r\n\r\n                        ))\r\n                        :\r\n                        \"\"\r\n                }\r\n\r\n\r\n            </table>\r\n\r\n\r\n            <ul className=\"pageNumbers d-flex p-2  \">\r\n\r\n                <li className=\"ml-3\">\r\n                    <button className=\"p-left\"\r\n                            onClick={handlePrevbtn}\r\n                        // disabled={currentPage == pages[0] ? true : false}\r\n                    >\r\n                        <img src=\"/img/icon/Stroke169.png\" alt=\"\"/>\r\n                    </button>\r\n                </li>\r\n                {/*{pageDecrementBtn}*/}\r\n                {renderPageNumbers}\r\n                {/*{pageIncrementBtn}*/}\r\n\r\n                <li>\r\n                    <button className=\"p-right\"\r\n                            onClick={handleNextbtn}\r\n                        // disabled={currentPage == pages[pages.length - 1] ? true : false}\r\n                    >\r\n                        <img src=\"/img/icon/Stroke168.png\" alt=\"\"/>\r\n\r\n                    </button>\r\n                </li>\r\n            </ul>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n//\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n        getOpenTickets: state.ticketData.getOpenTickets,\r\n        ticketStatusList: state.ticketData.ticketStatusList,\r\n        getLastDaysTickets: state.ticketData.getLastDaysTickets,\r\n        bot: state.ticketData.bot,\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    getMyOpenTicket,\r\n    changeTicketPr,\r\n    getTicketsSevenDaysPrev,\r\n    getTicketsSevenDaysNext,\r\n    getTicketsSevenDays,\r\n    getCommit,\r\n    changeTicketStatus,\r\n    getStatusList\r\n})(LastDaysTable);","import React from 'react';\r\nimport SideBarMenus from \"../../component/SideBarMenus\";\r\nimport AccountNavbar from \"../../component/AccountNavbar\";\r\nimport SubNavbarMenu from \"../../component/SubNavbarMenu\";\r\nimport LastDaysTable from \"../../component/LastDaysTabel\";\r\n\r\nconst TicketLastDays = () => {\r\n\r\n    return (\r\n        <div className=\"all-tickets d-flex \">\r\n\r\n\r\n\r\n            <SideBarMenus/>\r\n\r\n\r\n\r\n            <div className=\"all-tickets-right-pair\">\r\n                <div className=\"all-tickets-navbar\">\r\n\r\n                    <div className=\"all-tickets-navbar-child\">\r\n                        <h1>My tickets in last 7 days</h1>\r\n                        <AccountNavbar />\r\n                    </div>\r\n                </div>\r\n\r\n                <SubNavbarMenu/>\r\n                <LastDaysTable />\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default TicketLastDays;","import React from 'react';\r\nimport {AvForm, AvField} from 'availity-reactstrap-validation'\r\nimport {Link} from \"react-router-dom\";\r\nimport {LoginUser} from \"../redux/action/authAction\";\r\nimport {connect} from \"react-redux\";\r\nimport {changePasswordForSend} from \"../redux/action/createAgentAction\";\r\nconst ForgotPassword = (props) => {\r\n\r\n\r\n\r\n\r\n    const forgotPassword = (event , value) => {\r\n      props.changePasswordForSend(value)\r\n    }\r\n\r\n    return (\r\n        <div className='login-page'>\r\n            <div className=\"login-form-group\">\r\n\r\n                <h3>\r\n                    Log in\r\n                </h3>\r\n\r\n                <AvForm onValidSubmit={forgotPassword}>\r\n                    <AvField\r\n\r\n                        name='email'\r\n                        required\r\n                        placeholder=\"Email\"\r\n                        type=\"text\"\r\n                    />\r\n\r\n                    <div type=\"submit\" className=\"create-button-group\">\r\n\r\n\r\n                        <button   className=\"change-password-btn btn ml-3\">\r\n                            Change password\r\n                        </button>\r\n\r\n                    </div>\r\n                </AvForm>\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoading: state.login.isLoading\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {LoginUser, changePasswordForSend})(ForgotPassword);","import React, {useEffect, useState} from 'react';\nimport AccountNavbar from \"./AccountNavbar\";\nimport {Link} from \"react-router-dom\";\nimport {AvForm, AvField, AvRadio, AvRadioGroup} from 'availity-reactstrap-validation'\nimport {connect} from \"react-redux\";\nimport {\n    changeInfoAccountData,\n    changePasswordForSend,\n    getInfoAccount, getInfoAccountForEdit,\n    saveFileForEdit,\n    updateInfoAccount,\n    updateUserInfo\n} from \"../redux/action/createAgentAction\";\nimport {getActiveTeamList} from \"../redux/action/CreateTeamAction\";\nimport {ClosedStatusCount, getAllTicket, OpenStatusCount, PendingStatusCount} from \"../redux/action/TicketsAction\";\n\nconst InfoAccount = (props) => {\n\n\n    var url = document.URL\n\n    const last  =  url.substr(url.lastIndexOf('/') + 1) ;\n\n\n\n    useEffect(() => {\n        props.getInfoAccountForEdit(last)\n        props.getInfoAccount()\n        props.getActiveTeamList()\n\n\n    }, [])\n\n\n    const sendChange  = (event, value) => {\n\n\n        props.updateUserInfo(value, last, props.getAccountForEdit.email)\n\n    }\n\n\n    const savePhoto = (e) => {\n        console.log(e.target.files[0])\n        props.saveFileForEdit(e.target.files[0], props.getAccountForEdit.id);\n    }\n\n\n    // const updateUser = (event, value) => {\n    //\n    //     props.updateUserInfo(value, props.getAccountForEdit.id)\n    // }\n\n\n    return (\n        <div className=\"info-account w-100\">\n            <div className=\"all-tickets-navbar\">\n\n                <div className=\"all-tickets-navbar-child\">\n                    <Link to='/agents' className='arrow-left-back'>\n                        <img src=\"/img/icon/arrowleft.png\"\n                             alt=\"back img\"/>Back</Link>\n                    <h1>Info account</h1>\n                    <AccountNavbar/>\n                </div>\n            </div>\n\n\n            <div className=\"row w-100\">\n                <div className=\"col-md-3\">\n\n\n                    <div className=\"account-img\">\n                        <img src={props.getAccountForEdit.image} alt=\"\"/>\n\n                        <span>{props.getAccountForEdit.role}</span>\n                    </div>\n\n                    <h3>{props.getAccountForEdit.full_name}</h3>\n                    <p>{props.getAccountForEdit.email}</p>\n\n\n                    <div className=\"count-tickets\">\n                        <h4>\n                            <span>  {props.AllCount.count ? props.AllCount.count : \"0\"}</span>\n                            <span>All tickets</span>\n                        </h4>\n\n                        <h4>\n\n                            <span>  {props.ClosedCount.count ? props.ClosedCount.count : \"0\"}</span>\n                            <span>Closed</span>\n                        </h4>\n\n                        <h4>\n                            <span>  {props.openCount.count ? props.openCount : \"0\"}</span>\n                            <span>Open</span>\n                        </h4>\n                    </div>\n\n\n                    <AvForm>\n\n\n                        <h3 className=\"mb-3\"> Upload New Avatar</h3>\n\n                        <AvField type=\"file\"\n                                 id=\"file\"\n                                 onChange={savePhoto}\n                                 name=\"image\"\n\n                        />\n\n\n                    </AvForm>\n\n\n                    {/*<button className=\"delete-avatar-btn\">*/}\n                    {/*    Delete Avatar*/}\n                    {/*</button>*/}\n\n\n                    <img src=\"/img/Border.png\" className='img-top-border' alt=\"\"/>\n                </div>\n\n                <div className=\"col-md-7\">\n\n\n                    <AvForm onValidSubmit={sendChange} model={props.getAccountForEdit}>\n                        <h3>Personality</h3>\n                        <div className=\"row-for-input\">\n                            <AvField\n                                name=\"full_name\"\n                                placeholder=\"Full name\"\n\n                                value={props.getAccountForEdit.full_name}\n                            />\n\n\n                        </div>\n\n\n                        <h3>Contacts</h3>\n                        <div className=\"row-for-input for-email\">\n                            {/*<img src=\"/img/icon/envelope.png\" alt=\"\"/>*/}\n                            {/*<AvField*/}\n\n                            {/*    name=\"email\"*/}\n                            {/*    placeholder=\"E-mail\"*/}\n                            {/*    value={props.getAccountForEdit.email}*/}\n                            {/*/>*/}\n\n                            <AvField\n                                name=\"phone\"\n                                placeholder=\"Phone\"\n\n                                value={props.getAccountForEdit.phone}\n                            />\n\n                        </div>\n\n\n                        <h3>Team</h3>\n                        <div className=\"row-for-input\">\n                            <AvField type=\"select\"  name=\"team\" value={props.getAccountForEdit.team}    classname=\"select-style\">\n\n                                {\n                                    props.activeAgentslList\n                                        ?\n                                        props.activeAgentslList.map(item =>\n                                            (\n                                                <option value={item.id}>{item.name}</option>\n\n                                            )\n                                        )\n                                        :\n                                        \"\"\n                                }\n\n\n                            </AvField>\n\n\n                        </div>\n\n\n                        <h3>\n                            Permissions\n                        </h3>\n\n\n                        <div className=\"row-for-input\">\n\n                            <AvRadioGroup name=\"role\"  value={props.getAccountForEdit.role}  >\n                                <div className=\"d-flex\">\n                                    <AvRadio customInput value=\"Admin\"/>\n                                    <label>\n                                        <h4>Admin</h4>\n                                        <p>\n                                            Full access to global settings, adding new agents, subscription and all\n                                            actions related to tickets.\n                                        </p>\n                                    </label>\n\n                                </div>\n\n\n                                <div className=\"d-flex\">\n\n                                    <AvRadio customInput value=\"Agent\" />\n                                    <label>\n                                        <h4>Agent</h4>\n                                        <p>\n                                            Access to personal settings and all actions related to tickets.\n                                        </p>\n                                    </label>\n                                </div>\n\n\n                                <div className=\"d-flex\">\n\n                                    <AvRadio customInput value=\"Viewer\"  className=\"b-0\"/>\n                                    <label>\n                                        <h4>Viewer</h4>\n                                        <p>\n                                            Viewers can read and browse tickets but can’t take any actions.\n                                        </p>\n                                    </label>\n\n                                </div>\n\n\n                            </AvRadioGroup>\n                        </div>\n\n\n                        <div className=\"create-button-group\">\n\n                            <div>\n                                {\n\n\n                                        <button type='submit' className=\"btn\">\n                                            Save changes\n                                        </button>\n\n                                }\n\n\n\n\n                            </div>\n\n                            <Link to='/agents'>Cancel</Link>\n\n                        </div>\n\n\n                    </AvForm>\n\n\n                    <img src=\"/img/Divider.png\" className='img-bottom-border' alt=\"\"/>\n\n\n                    {/*<h3>*/}\n                    {/*    Delete agent*/}\n                    {/*</h3>*/}\n                    {/*<p>*/}\n                    {/*    You will delete the agent account and related statistics. <br/> Tickets will not be removed.*/}\n                    {/*</p>*/}\n                    {/*<h5 className='delete-account'>*/}\n                    {/*    Delete account*/}\n                    {/*</h5>*/}\n                </div>\n                <div className=\"col-md-2\">\n\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\nconst mapStateToProps = (state) => {\n    return {\n\n        getAccountForEdit: state.createAgentData.getAccountForEdit,\n        getAccount: state.createAgentData.getAccount,\n        activeAgentslList: state.createTeamData.activeAgentslList,\n        openCount: state.ticketData.openCount,\n        ClosedCount: state.ticketData.ClosedCount,\n        AllCount: state.ticketData.AllCount,\n\n\n    }\n}\n\nexport default connect(mapStateToProps, {\n    getInfoAccountForEdit,\n    getInfoAccount,\n    saveFileForEdit,\n    changeInfoAccountData,\n    getActiveTeamList,\n    updateInfoAccount,\n    updateUserInfo,\n\n})(InfoAccount);","import SideBar from \"./component/SideBar\";\n\nimport {\n    Switch,\n    Route, BrowserRouter,\n\n} from \"react-router-dom\";\nimport Tickets from \"./pages/Tickets\";\nimport React, {useEffect} from \"react\";\nimport Agents from \"./pages/Agents\";\nimport CreateTeamPair from \"./pages/agents/CreateTeamPair\";\nimport CreateAgentPair from \"./pages/agents/CreateAgentPair\";\nimport Login from \"./component/Login\";\nimport Report from \"./pages/Report\";\nimport InfoAccount from \"./component/InfoAccount\";\nimport NewTicket from \"./pages/tickets/NewTicket\";\nimport Verified from \"./component/Verified\";\nimport {ToastContainer} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport PrivateRoute from \"./component/PrivateRoute\";\nimport {TOKEN_NAME} from \"./tools/constants\";\nimport AllTickets from \"./pages/tickets/AllTickets\";\nimport VerifiedChangePassword from \"./component/VerifiedChangePassword\";\nimport Commit from \"./pages/tickets/Commit\";\nimport TicketsToHandle from \"./pages/tickets/TicketsToHandle\";\nimport TicketOpen from \"./pages/tickets/TicketOpen\";\nimport TicketLastDays from \"./pages/tickets/TicketLastDays\";\nimport ForgotPassword from \"./component/ForgotPassword\";\nimport InfoAccountEdit from \"./component/InfoAccountEdit\";\nfunction App() {\n\n  return (\n   <div>\n       <BrowserRouter  >\n           <div className=\"d-flex\">\n\n\n\n               {\n                   window.location.pathname !== \"/\" &&  localStorage.getItem(TOKEN_NAME) &&\n                   window.location.pathname !== \"/change-password-confirm\" &&\n                   window.location.pathname !== \"/user/v1/verify-email/\" &&\n                   window.location.pathname !== \"/forgot-password\" ?\n                   <>\n                       <SideBar/>\n                   </> : \"\"\n\n\n               }\n\n\n\n\n               <Switch>\n                   <Route path=\"/\" exact component={Login} />\n                   <Route path=\"/forgot-password\" exact component={ForgotPassword} />\n                   <PrivateRoute path=\"/tickets\" exact component={AllTickets} />\n                   <PrivateRoute path=\"/tickets/all-tickets\" exact component={AllTickets} />\n                   <PrivateRoute path=\"/tickets/tickets-to-handle\" exact component={TicketsToHandle} />\n                   <PrivateRoute path=\"/tickets/open-tickets\" exact component={TicketOpen} />\n                   <PrivateRoute path=\"/tickets/last-days\" exact component={TicketLastDays} />\n                   <PrivateRoute path=\"/tickets/new-ticket\" exact component={NewTicket} />\n                   <Route path=\"/user/v1/verify-email/\" exact component={Verified} />\n\n\n\n\n                   <Route path=\"/:change-password-confirm\" exact component={VerifiedChangePassword} />\n\n\n\n\n                   <PrivateRoute path=\"/agents\" exact component={Agents}/>\n                   <PrivateRoute path=\"/tickets/commit/:id\" exact component={Commit}/>\n                   <PrivateRoute path=\"/commit/:id\" exact component={Commit}/>\n                   <PrivateRoute path=\"/report\" exact component={Report}/>\n                   <PrivateRoute path=\"/agents/info-account\" exact component={InfoAccount}/>\n                   <PrivateRoute path=\"/tickets/agents/info-account\" exact component={InfoAccount}/>\n                   <PrivateRoute path=\"/agents/info-account-edit/:id\" exact component={InfoAccountEdit}/>\n                   <PrivateRoute path={'/agents/create-team/'} exact component={CreateTeamPair}/>\n                   <PrivateRoute path=\"/agents/create-agent\" exact component={CreateAgentPair}/>\n\n\n\n               </Switch>\n           </div>\n\n       </BrowserRouter>\n\n\n       <ToastContainer/>\n\n   </div>\n\n  );\n}\n\nexport default App;\n","import {LOGIN} from \"../actionTypes/authType\";\n\nconst initialState = {\n    isLoading: false,\n}\n\nexport const loginReducer = (state = initialState, action) => {\n\n    switch (action.type){\n        case LOGIN:\n            return {...state, isLoading: !state.isLoading}\n            break;\n\n        default: return state;\n    }\n}","import {UPDATE_STATE} from \"../actionTypes/createAgentType\";\n\n\nconst initialState ={\n\n    createAgentObject: {},\n    getAccount: {},\n    getAccountForEdit: {},\n    getAllAgentsList: [],\n\n}\nexport const createAgentReducer = (state= initialState, action) => {\n    switch (action.type){\n        case UPDATE_STATE:\n            return {...state, ...action.payload}\n        default: return state;\n    }\n}\n","import {UPDATE_STATE} from \"../actionTypes/createAgentType\";\n\n\nconst initialState ={\n\n    createTeamObject: {},\n    activeAgentslList: [],\n    editModal: false,\n\n\n\n}\nexport const createTeamReducer = (state= initialState, action) => {\n    switch (action.type){\n        case UPDATE_STATE:\n            return {...state, ...action.payload}\n        default: return state;\n    }\n}\n","import {UPDATE_STATE} from \"../actionTypes/createAgentType\";\r\n\r\n\r\nconst initialState ={\r\n\r\n    getTickets: [],\r\n    getOpenTickets: [],\r\n    getLastDaysTickets: [],\r\n    getTicketsToHandle: [],\r\n    ticketStatusList: [],\r\n    commitList: [],\r\n    ticketInfoObject: {},\r\n    pageIndex: 1,\r\n    btc: {},\r\n    boc: {},\r\n    bot: {},\r\n    openCount: [],\r\n    ClosedCount: [],\r\n    PendingCount: [],\r\n    AllCount: [],\r\n    selectedCommitId: {},\r\n    subAllTickets: [],\r\n    subOpen: [],\r\n    subPending: [],\r\n    subClosed: [],\r\n    selectTeamReducer: {},\r\n    todayNoOpened: {}\r\n\r\n\r\n}\r\nexport const TicketsReducer = (state= initialState, action) => {\r\n    switch (action.type){\r\n        case UPDATE_STATE:\r\n            return {...state, ...action.payload}\r\n        default: return state;\r\n    }\r\n}\r\n","import {combineReducers} from \"redux\";\nimport {loginReducer} from \"./authReducer\";\nimport {createAgentReducer} from \"./createAgentReducer\";\nimport {createTeamReducer} from \"./createTeamReducer\";\nimport {TicketsReducer} from \"./TicketsReducer\";\n\nexport const rootReducer = combineReducers({\n\n    login: loginReducer,\n    createAgentData: createAgentReducer,\n    createTeamData: createTeamReducer,\n    ticketData: TicketsReducer,\n\n});","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './component/main.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {Provider} from \"react-redux\";\nimport {applyMiddleware, compose, createStore} from \"redux\";\nimport {rootReducer} from \".//redux/reducer/rootReducer\"\nimport reportWebVitals from './reportWebVitals';\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk)));\n\n     //\n     // const store = createStore(rootReducer, compose(applyMiddleware(thunk),\n     // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\n\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}